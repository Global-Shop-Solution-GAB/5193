Program.Sub.ScreenSU.Start
Gui.frmEmployees..Create
Gui.frmEmployees..Caption("Employees (Manager View)")
Gui.frmEmployees..Size(15000,9495)
Gui.frmEmployees..MinX(0)
Gui.frmEmployees..MinY(0)
Gui.frmEmployees..Position(0,0)
Gui.frmEmployees..BackColor(-2147483633)
Gui.frmEmployees..MousePointer(0)
Gui.frmEmployees..Event(UnLoad,frmEmployees_UnLoad)
Gui.frmEmployees.GsGCEmployees.Create(GsGridControl)
Gui.frmEmployees.GsGCEmployees.Size(14775,8550)
Gui.frmEmployees.GsGCEmployees.Position(30,450)
Gui.frmEmployees.GsGCEmployees.Anchor(15)
Gui.frmEmployees.ddlFilter.Create(DropDownList)
Gui.frmEmployees.ddlFilter.Size(2280,330)
Gui.frmEmployees.ddlFilter.Position(30,45)
Gui.frmEmployees.ddlFilter.Event(Click,LoadEmployees)
Gui.frmEmployees.lblStatus.Create(Label,"Loading....",False,1755,255,0,2370,135,True,0,"Arial",9,-2147483633,0)
Gui.frmEmployees.lblStatus.FontStyle(True,False,False,False,False)
Gui.frmTraining..Create
Gui.frmTraining..Caption("Employee Training")
Gui.frmTraining..Size(11760,9600)
Gui.frmTraining..MinX(0)
Gui.frmTraining..MinY(0)
Gui.frmTraining..Position(0,0)
Gui.frmTraining..BackColor(-2147483633)
Gui.frmTraining..MousePointer(0)
Gui.frmTraining..Event(UnLoad,frmTraining_UnLoad)
Gui.frmTraining.picEmplPic.Create(PictureBox)
Gui.frmTraining.picEmplPic.Size(1800,1800)
Gui.frmTraining.picEmplPic.Position(30,30)
Gui.frmTraining.lblEmplNo.Create(Label,"Employee No",True,1065,255,0,1860,90,True,0,"Arial",8,-2147483633,0)
Gui.frmTraining.lblEmplName.Create(Label,"Name",True,570,255,0,2970,90,True,0,"Arial",8,-2147483633,0)
Gui.frmTraining.txtEmplNo.Create(TextBox,"",True,1050,300,0,1860,300,True,0,"Arial",8,-2147483643,1)
Gui.frmTraining.txtEmplNo.Locked(True)
Gui.frmTraining.txtEmplName.Create(TextBox,"",True,2325,300,0,2970,300,True,0,"Arial",8,-2147483643,1)
Gui.frmTraining.txtEmplName.Locked(True)
Gui.frmTraining.lblDept.Create(Label,"Dept",True,525,255,0,2625,675,True,0,"Arial",8,-2147483633,0)
Gui.frmTraining.txtDept.Create(TextBox,"",True,720,300,0,2625,885,True,0,"Arial",8,-2147483643,1)
Gui.frmTraining.txtDept.Locked(True)
Gui.frmTraining.lblShift.Create(Label,"Shift",True,525,255,0,1860,675,True,0,"Arial",8,-2147483633,0)
Gui.frmTraining.txtShift.Create(TextBox,"",True,720,300,0,1860,885,True,0,"Arial",8,-2147483643,1)
Gui.frmTraining.txtShift.Locked(True)
Gui.frmTraining.frameCourses.Create(Frame)
Gui.frmTraining.frameCourses.Size(11595,7455)
Gui.frmTraining.frameCourses.Position(30,1875)
Gui.frmTraining.frameCourses.Caption("Courses")
Gui.frmTraining.frameCourses.Anchor(15)
Gui.frmTraining.GsGCCourses.Create(GsGridControl)
Gui.frmTraining.GsGCCourses.Size(11535,7170)
Gui.frmTraining.GsGCCourses.Position(30,225)
Gui.frmTraining.GsGCCourses.Parent("frameCourses")
Gui.frmTraining.GsGCCourses.Anchor(15)
Gui.frmTraining.lblBetween.Create(Label,"Between",True,780,255,0,1890,1650,True,0,"Arial",8,-2147483633,0)
Gui.frmTraining.dtpStartDT.Create(DatePicker)
Gui.frmTraining.dtpStartDT.Size(1425,285)
Gui.frmTraining.dtpStartDT.Position(2685,1545)
Gui.frmTraining.dtpEndDT.Create(DatePicker)
Gui.frmTraining.dtpEndDT.Size(1425,285)
Gui.frmTraining.dtpEndDT.Position(4605,1545)
Gui.frmTraining.lblAnd.Create(Label,"And",True,450,255,0,4140,1650,True,0,"Arial",8,-2147483633,0)
Gui.frmTraining.ddlFilter.Create(DropDownList)
Gui.frmTraining.ddlFilter.Size(1545,330)
Gui.frmTraining.ddlFilter.Position(6105,1545)
Gui.frmTraining.cmdRefresh.Create(Button)
Gui.frmTraining.cmdRefresh.Size(510,375)
Gui.frmTraining.cmdRefresh.Position(7665,1515)
Gui.frmTraining.cmdRefresh.Caption("REFRESH")
Gui.frmTraining.cmdRefresh.Event(Click,LoadEmplTrainings)
Gui.frmTraining.lblHireDate.Create(Label,"Hire Date",True,795,255,0,3390,675,True,0,"Arial",8,-2147483633,0)
Gui.frmTraining.lblTermDate.Create(Label,"Term. Date",True,870,255,0,4365,675,True,0,"Arial",8,-2147483633,0)
Gui.frmTraining.txtHireDate.Create(TextBox,"",True,930,300,0,3390,885,True,0,"Arial",8,-2147483643,1)
Gui.frmTraining.txtHireDate.Locked(True)
Gui.frmTraining.txtTermDate.Create(TextBox,"",True,930,300,0,4365,885,True,0,"Arial",8,-2147483643,1)
Gui.frmTraining.txtTermDate.Locked(True)
Gui.frmTraining.lblStatus.Create(Label,"Loading....",False,1455,255,0,8235,1635,True,0,"Arial",9,-2147483633,0)
Gui.frmTraining.lblStatus.FontStyle(True,False,False,False,False)
Gui.frmTrainingMulti..Create
Gui.frmTrainingMulti..Caption("Employee Training (Multi)")
Gui.frmTrainingMulti..Size(11760,9600)
Gui.frmTrainingMulti..MinX(0)
Gui.frmTrainingMulti..MinY(0)
Gui.frmTrainingMulti..Position(0,0)
Gui.frmTrainingMulti..BackColor(-2147483633)
Gui.frmTrainingMulti..MousePointer(0)
Gui.frmTrainingMulti..Event(UnLoad,frmTrainingMulti_UnLoad)
Gui.frmTrainingMulti.frameCourses.Create(Frame)
Gui.frmTrainingMulti.frameCourses.Size(11595,8925)
Gui.frmTrainingMulti.frameCourses.Position(30,405)
Gui.frmTrainingMulti.frameCourses.Caption("Courses")
Gui.frmTrainingMulti.frameCourses.Anchor(15)
Gui.frmTrainingMulti.GsGCCoursesMulti.Create(GsGridControl)
Gui.frmTrainingMulti.GsGCCoursesMulti.Size(11535,8640)
Gui.frmTrainingMulti.GsGCCoursesMulti.Position(30,225)
Gui.frmTrainingMulti.GsGCCoursesMulti.Parent("frameCourses")
Gui.frmTrainingMulti.GsGCCoursesMulti.Anchor(15)
Gui.frmTrainingMulti.lblBetween.Create(Label,"Between",True,780,255,0,45,135,True,0,"Arial",8,-2147483633,0)
Gui.frmTrainingMulti.dtpStartDT.Create(DatePicker)
Gui.frmTrainingMulti.dtpStartDT.Size(1425,285)
Gui.frmTrainingMulti.dtpStartDT.Position(840,30)
Gui.frmTrainingMulti.dtpEndDT.Create(DatePicker)
Gui.frmTrainingMulti.dtpEndDT.Size(1425,285)
Gui.frmTrainingMulti.dtpEndDT.Position(2760,30)
Gui.frmTrainingMulti.lblAnd.Create(Label,"And",True,450,255,0,2295,135,True,0,"Arial",8,-2147483633,0)
Gui.frmTrainingMulti.ddlFilter.Create(DropDownList)
Gui.frmTrainingMulti.ddlFilter.Size(1545,330)
Gui.frmTrainingMulti.ddlFilter.Position(4260,30)
Gui.frmTrainingMulti.cmdRefresh.Create(Button)
Gui.frmTrainingMulti.cmdRefresh.Size(510,375)
Gui.frmTrainingMulti.cmdRefresh.Position(5820,0)
Gui.frmTrainingMulti.cmdRefresh.Caption("REFRESH")
Gui.frmTrainingMulti.cmdRefresh.Event(Click,LoadEmplTrainingsMulti)
Gui.frmTrainingMulti.lblStatus.Create(Label,"Loading....",False,1455,255,0,6390,120,True,0,"Arial",9,-2147483633,0)
Gui.frmTrainingMulti.lblStatus.FontStyle(True,False,False,False,False)
Gui.frmTrainingMulti.cmdRenewals.Create(Button)
Gui.frmTrainingMulti.cmdRenewals.Size(1395,375)
Gui.frmTrainingMulti.cmdRenewals.Position(10230,0)
Gui.frmTrainingMulti.cmdRenewals.Anchor(9)
Gui.frmTrainingMulti.cmdRenewals.Caption("Renewal Status")
Gui.frmTrainingMulti.cmdRenewals.Event(Click,LoadRenewalStatus)
Gui.frmAddTrainings..Create
Gui.frmAddTrainings..Caption("Add Trainings")
Gui.frmAddTrainings..Size(14295,7980)
Gui.frmAddTrainings..MinX(0)
Gui.frmAddTrainings..MinY(0)
Gui.frmAddTrainings..Position(0,0)
Gui.frmAddTrainings..BackColor(-2147483633)
Gui.frmAddTrainings..MousePointer(0)
Gui.frmAddTrainings..Event(Resize,frmAddTrainings_Resize)
Gui.frmAddTrainings..Event(UnLoad,frmAddTrainings_UnLoad)
Gui.frmAddTrainings.frameCourse.Create(Frame)
Gui.frmAddTrainings.frameCourse.Size(6525,7245)
Gui.frmAddTrainings.frameCourse.Position(60,15)
Gui.frmAddTrainings.frameCourse.Caption("Course Information")
Gui.frmAddTrainings.lblEmpl.Create(Label,"Employee",True,930,255,0,75,300,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblEmpl.Parent("frameCourse")
Gui.frmAddTrainings.cboDept.Create(ComboBox)
Gui.frmAddTrainings.cboDept.Size(3765,330)
Gui.frmAddTrainings.cboDept.Position(75,4320)
Gui.frmAddTrainings.cboDept.Parent("frameCourse")
Gui.frmAddTrainings.cboDept.Event(Click,cboDept_Click)
Gui.frmAddTrainings.cboDept.Anchor(6)
Gui.frmAddTrainings.cboDept.TabStop(True)
Gui.frmAddTrainings.cboDept.TabIndex(2)
Gui.frmAddTrainings.lblDept.Create(Label,"Department",True,1050,255,0,75,4110,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblDept.Parent("frameCourse")
Gui.frmAddTrainings.lblDept.Anchor(6)
Gui.frmAddTrainings.cboType.Create(ComboBox)
Gui.frmAddTrainings.cboType.Size(3765,330)
Gui.frmAddTrainings.cboType.Position(75,4950)
Gui.frmAddTrainings.cboType.Parent("frameCourse")
Gui.frmAddTrainings.cboType.Anchor(6)
Gui.frmAddTrainings.cboType.TabStop(True)
Gui.frmAddTrainings.cboType.TabIndex(3)
Gui.frmAddTrainings.lblType.Create(Label,"Type",True,930,255,0,75,4740,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblType.Parent("frameCourse")
Gui.frmAddTrainings.lblType.Anchor(6)
Gui.frmAddTrainings.cboProvider.Create(ComboBox)
Gui.frmAddTrainings.cboProvider.Size(3765,330)
Gui.frmAddTrainings.cboProvider.Position(75,5580)
Gui.frmAddTrainings.cboProvider.Parent("frameCourse")
Gui.frmAddTrainings.cboProvider.Anchor(6)
Gui.frmAddTrainings.cboProvider.TabStop(True)
Gui.frmAddTrainings.cboProvider.TabIndex(4)
Gui.frmAddTrainings.lblProvider.Create(Label,"Provider",True,930,255,0,75,5370,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblProvider.Parent("frameCourse")
Gui.frmAddTrainings.lblProvider.Anchor(6)
Gui.frmAddTrainings.cboCourse.Create(ComboBox)
Gui.frmAddTrainings.cboCourse.Size(3765,330)
Gui.frmAddTrainings.cboCourse.Position(75,6210)
Gui.frmAddTrainings.cboCourse.Parent("frameCourse")
Gui.frmAddTrainings.cboCourse.Anchor(6)
Gui.frmAddTrainings.cboCourse.TabStop(True)
Gui.frmAddTrainings.cboCourse.TabIndex(5)
Gui.frmAddTrainings.lblCourse.Create(Label,"Course",True,930,255,0,75,6000,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblCourse.Parent("frameCourse")
Gui.frmAddTrainings.lblCourse.Anchor(6)
Gui.frmAddTrainings.lblSkills.Create(Label,"Skills",True,840,255,0,3885,300,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblSkills.Parent("frameCourse")
Gui.frmAddTrainings.GsGCEmpl.Create(GsGridControl)
Gui.frmAddTrainings.GsGCEmpl.Size(3750,3495)
Gui.frmAddTrainings.GsGCEmpl.Position(75,510)
Gui.frmAddTrainings.GsGCEmpl.Parent("frameCourse")
Gui.frmAddTrainings.GsGCEmpl.Anchor(7)
Gui.frmAddTrainings.GsGCEmpl.TabStop(True)
Gui.frmAddTrainings.GsGCEmpl.TabIndex(1)
Gui.frmAddTrainings.GsGCSkill.Create(GsGridControl)
Gui.frmAddTrainings.GsGCSkill.Size(2565,6660)
Gui.frmAddTrainings.GsGCSkill.Position(3885,510)
Gui.frmAddTrainings.GsGCSkill.Parent("frameCourse")
Gui.frmAddTrainings.GsGCSkill.Anchor(15)
Gui.frmAddTrainings.GsGCSkill.TabStop(True)
Gui.frmAddTrainings.GsGCSkill.TabIndex(7)
Gui.frmAddTrainings.cboLevel.Create(ComboBox)
Gui.frmAddTrainings.cboLevel.Size(3765,330)
Gui.frmAddTrainings.cboLevel.Position(75,6840)
Gui.frmAddTrainings.cboLevel.Parent("frameCourse")
Gui.frmAddTrainings.cboLevel.Anchor(6)
Gui.frmAddTrainings.cboLevel.TabStop(True)
Gui.frmAddTrainings.cboLevel.TabIndex(6)
Gui.frmAddTrainings.lblLevel.Create(Label,"Level",True,930,255,0,75,6630,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblLevel.Parent("frameCourse")
Gui.frmAddTrainings.lblLevel.Anchor(6)
Gui.frmAddTrainings.frameSched.Create(Frame)
Gui.frmAddTrainings.frameSched.Size(7530,7245)
Gui.frmAddTrainings.frameSched.Position(6630,15)
Gui.frmAddTrainings.frameSched.Caption("Schedule")
Gui.frmAddTrainings.lblStartDT.Create(Label,"Start Date",True,900,255,0,75,300,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblStartDT.Parent("frameSched")
Gui.frmAddTrainings.lblEndDT.Create(Label,"End Date",True,900,255,0,75,615,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblEndDT.Parent("frameSched")
Gui.frmAddTrainings.lblHours.Create(Label,"Hours",True,900,255,0,2610,615,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblHours.Parent("frameSched")
Gui.frmAddTrainings.lblCourseCost.Create(Label,"Course Cost",True,1005,255,0,75,945,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblCourseCost.Parent("frameSched")
Gui.frmAddTrainings.lblProdCost.Create(Label,"Prod. Cost",True,900,255,0,2610,945,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblProdCost.Parent("frameSched")
Gui.frmAddTrainings.lblNotes.Create(Label,"Notes",True,900,255,0,75,1290,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblNotes.Parent("frameSched")
Gui.frmAddTrainings.GsGCNotes.Create(GsGridControl)
Gui.frmAddTrainings.GsGCNotes.Size(3480,1665)
Gui.frmAddTrainings.GsGCNotes.Position(75,1500)
Gui.frmAddTrainings.GsGCNotes.Parent("frameSched")
Gui.frmAddTrainings.GsGCNotes.Event(RowCellClick,GsGCNotes_RowCellClick)
Gui.frmAddTrainings.GsGCNotes.TabStop(True)
Gui.frmAddTrainings.GsGCNotes.TabIndex(19)
Gui.frmAddTrainings.txtNotes.Create(TextboxM)
Gui.frmAddTrainings.txtNotes.Size(3855,1680)
Gui.frmAddTrainings.txtNotes.Position(3615,1500)
Gui.frmAddTrainings.txtNotes.Parent("frameSched")
Gui.frmAddTrainings.txtNotes.Anchor(13)
Gui.frmAddTrainings.txtNotes.Enabled(False)
Gui.frmAddTrainings.txtNotes.TabStop(True)
Gui.frmAddTrainings.txtNotes.TabIndex(20)
Gui.frmAddTrainings.chkSched.Create(CheckBox)
Gui.frmAddTrainings.chkSched.Size(1125,270)
Gui.frmAddTrainings.chkSched.Position(5430,210)
Gui.frmAddTrainings.chkSched.Parent("frameSched")
Gui.frmAddTrainings.chkSched.Caption("Schedule")
Gui.frmAddTrainings.chkSched.TabStop(True)
Gui.frmAddTrainings.chkSched.TabIndex(16)
Gui.frmAddTrainings.dtpStartDT.Create(DatePicker)
Gui.frmAddTrainings.dtpStartDT.Size(1440,285)
Gui.frmAddTrainings.dtpStartDT.Position(1110,210)
Gui.frmAddTrainings.dtpStartDT.Parent("frameSched")
Gui.frmAddTrainings.dtpStartDT.TabStop(True)
Gui.frmAddTrainings.dtpStartDT.TabIndex(8)
Gui.frmAddTrainings.dtpStartDT.Event(Change,dtpStartDT_Change)
Gui.frmAddTrainings.txtHours.Create(TextBox,"0.00",True,1455,300,0,3645,540,True,0,"Arial",8,-2147483643,1)
Gui.frmAddTrainings.txtHours.Parent("frameSched")
Gui.frmAddTrainings.txtHours.NumericOnly(1)
Gui.frmAddTrainings.txtHours.TabStop(True)
Gui.frmAddTrainings.txtHours.TabIndex(13)
Gui.frmAddTrainings.cmdSaveNote.Create(Button)
Gui.frmAddTrainings.cmdSaveNote.Size(1020,285)
Gui.frmAddTrainings.cmdSaveNote.Position(6450,1200)
Gui.frmAddTrainings.cmdSaveNote.Parent("frameSched")
Gui.frmAddTrainings.cmdSaveNote.Caption("Save Note")
Gui.frmAddTrainings.cmdSaveNote.Event(Click,cmdSaveNote_Click)
Gui.frmAddTrainings.cmdSaveNote.Anchor(9)
Gui.frmAddTrainings.cmdSaveNote.Enabled(False)
Gui.frmAddTrainings.cmdSaveNote.TabStop(True)
Gui.frmAddTrainings.cmdSaveNote.TabIndex(21)
Gui.frmAddTrainings.dtpEndDT.Create(DatePicker)
Gui.frmAddTrainings.dtpEndDT.Size(1440,285)
Gui.frmAddTrainings.dtpEndDT.Position(1110,540)
Gui.frmAddTrainings.dtpEndDT.Parent("frameSched")
Gui.frmAddTrainings.dtpEndDT.TabStop(True)
Gui.frmAddTrainings.dtpEndDT.TabIndex(9)
Gui.frmAddTrainings.txtCourseCost.Create(TextBox,"0.00",True,1455,300,0,1110,870,True,0,"Arial",8,-2147483643,1)
Gui.frmAddTrainings.txtCourseCost.Parent("frameSched")
Gui.frmAddTrainings.txtCourseCost.NumericOnly(1)
Gui.frmAddTrainings.txtCourseCost.TabStop(True)
Gui.frmAddTrainings.txtCourseCost.TabIndex(14)
Gui.frmAddTrainings.txtProdCost.Create(TextBox,"0.00",True,1455,300,0,3645,870,True,0,"Arial",8,-2147483643,1)
Gui.frmAddTrainings.txtProdCost.Parent("frameSched")
Gui.frmAddTrainings.txtProdCost.NumericOnly(1)
Gui.frmAddTrainings.txtProdCost.TabStop(True)
Gui.frmAddTrainings.txtProdCost.TabIndex(15)
Gui.frmAddTrainings.chkCompl.Create(CheckBox)
Gui.frmAddTrainings.chkCompl.Size(1140,270)
Gui.frmAddTrainings.chkCompl.Position(5430,525)
Gui.frmAddTrainings.chkCompl.Parent("frameSched")
Gui.frmAddTrainings.chkCompl.Caption("Complete")
Gui.frmAddTrainings.chkCompl.TabStop(True)
Gui.frmAddTrainings.chkCompl.TabIndex(17)
Gui.frmAddTrainings.chkCompl.Event(Click,chkCompl_Click)
Gui.frmAddTrainings.lblViewEditNotes.Create(Label,"View/Edit Notes",True,1335,255,0,3615,1290,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblViewEditNotes.Parent("frameSched")
Gui.frmAddTrainings.txtNoteID.Create(TextBox,"",False,405,300,0,7065,165,True,0,"Arial",8,-2147483643,1)
Gui.frmAddTrainings.txtNoteID.Parent("frameSched")
Gui.frmAddTrainings.txtNoteID.TabStop(True)
Gui.frmAddTrainings.txtNoteID.TabIndex(18)
Gui.frmAddTrainings.lblStartTime.Create(Label,"Start Time",True,900,255,0,2610,300,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblStartTime.Parent("frameSched")
Gui.frmAddTrainings.cboHrs.Create(ComboBox)
Gui.frmAddTrainings.cboHrs.Size(510,330)
Gui.frmAddTrainings.cboHrs.Position(3645,195)
Gui.frmAddTrainings.cboHrs.Parent("frameSched")
Gui.frmAddTrainings.cboHrs.TabStop(True)
Gui.frmAddTrainings.cboHrs.TabIndex(10)
Gui.frmAddTrainings.cboMins.Create(ComboBox)
Gui.frmAddTrainings.cboMins.Size(510,330)
Gui.frmAddTrainings.cboMins.Position(4185,195)
Gui.frmAddTrainings.cboMins.Parent("frameSched")
Gui.frmAddTrainings.cboMins.TabStop(True)
Gui.frmAddTrainings.cboMins.TabIndex(11)
Gui.frmAddTrainings.cboAMPM.Create(ComboBox)
Gui.frmAddTrainings.cboAMPM.Size(585,330)
Gui.frmAddTrainings.cboAMPM.Position(4725,195)
Gui.frmAddTrainings.cboAMPM.Parent("frameSched")
Gui.frmAddTrainings.cboAMPM.TabStop(True)
Gui.frmAddTrainings.cboAMPM.TabIndex(12)
Gui.frmAddTrainings.dtpComplDT.Create(DatePicker)
Gui.frmAddTrainings.dtpComplDT.Enabled(False)
Gui.frmAddTrainings.dtpComplDT.Size(1440,285)
Gui.frmAddTrainings.dtpComplDT.Position(5430,810)
Gui.frmAddTrainings.dtpComplDT.Parent("frameSched")
Gui.frmAddTrainings.dtpComplDT.TabStop(True)
Gui.frmAddTrainings.dtpComplDT.TabIndex(9)
Gui.frmAddTrainings.htmlPrevDoc.Create(HtmlContainer)
Gui.frmAddTrainings.htmlPrevDoc.Size(3855,3705)
Gui.frmAddTrainings.htmlPrevDoc.Position(3615,3480)
Gui.frmAddTrainings.htmlPrevDoc.Parent("frameSched")
Gui.frmAddTrainings.htmlPrevDoc.Anchor(15)
Gui.frmAddTrainings.GsGCAddDocs.Create(GsGridControl)
Gui.frmAddTrainings.GsGCAddDocs.Size(3450,3735)
Gui.frmAddTrainings.GsGCAddDocs.Position(75,3465)
Gui.frmAddTrainings.GsGCAddDocs.Parent("frameSched")
Gui.frmAddTrainings.GsGCAddDocs.TabStop(True)
Gui.frmAddTrainings.GsGCAddDocs.TabIndex(19)
Gui.frmAddTrainings.GsGCAddDocs.Anchor(7)
Gui.frmAddTrainings.GsGCAddDocs.Event(RowCellClick,GsGCAddDocs_RowCellClick)
Gui.frmAddTrainings.lblDocs.Create(Label,"Docs",True,555,255,0,75,3240,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblDocs.Parent("frameSched")
Gui.frmAddTrainings.lblDocsPrev.Create(Label,"Doc Preview",True,1140,255,0,3615,3255,True,0,"Arial",8,-2147483633,0)
Gui.frmAddTrainings.lblDocsPrev.Parent("frameSched")
Gui.frmAddTrainings.cmdSaveDocs.Create(Button)
Gui.frmAddTrainings.cmdSaveDocs.Size(1020,285)
Gui.frmAddTrainings.cmdSaveDocs.Position(2520,3165)
Gui.frmAddTrainings.cmdSaveDocs.Parent("frameSched")
Gui.frmAddTrainings.cmdSaveDocs.TabStop(True)
Gui.frmAddTrainings.cmdSaveDocs.TabIndex(22)
Gui.frmAddTrainings.cmdSaveDocs.Caption("Save Docs")
Gui.frmAddTrainings.cmdSaveDocs.Event(Click,cmdSaveDocs_Click)
Gui.frmAddTrainings.txtDragFiles.Create(TextBox,"Drag Files Here",True,1425,300,0,855,3165,True,2,"Arial",8,11119017,1)
Gui.frmAddTrainings.txtDragFiles.Parent("frameSched")
Gui.frmAddTrainings.txtDragFiles.FontStyle(True,False,False,False,False)
Gui.frmAddTrainings.txtDragFiles.Locked(True)
Gui.frmAddTrainings.cmdSaveCourse.Create(Button)
Gui.frmAddTrainings.cmdSaveCourse.Size(1200,375)
Gui.frmAddTrainings.cmdSaveCourse.Position(12960,7275)
Gui.frmAddTrainings.cmdSaveCourse.Caption("Save Course")
Gui.frmAddTrainings.cmdSaveCourse.Event(Click,cmdSaveCourse_Click)
Gui.frmAddTrainings.cmdSaveCourse.Anchor(10)
Gui.frmAddTrainings.cmdSaveCourse.TabStop(True)
Gui.frmAddTrainings.cmdSaveCourse.TabIndex(23)
Gui.frmAddTrainings.cmdDefaultSenderEmail.Create(Button)
Gui.frmAddTrainings.cmdDefaultSenderEmail.Size(1755,375)
Gui.frmAddTrainings.cmdDefaultSenderEmail.Position(60,7275)
Gui.frmAddTrainings.cmdDefaultSenderEmail.TabStop(True)
Gui.frmAddTrainings.cmdDefaultSenderEmail.TabIndex(23)
Gui.frmAddTrainings.cmdDefaultSenderEmail.Anchor(6)
Gui.frmAddTrainings.cmdDefaultSenderEmail.Caption("Default Sender Email")
Gui.frmAddTrainings.cmdDefaultSenderEmail.Event(Click,cmdDefaultSenderEmail_Click)
Gui.frmViewNotes..Create
Gui.frmViewNotes..Caption("View Notes")
Gui.frmViewNotes..Size(6780,6750)
Gui.frmViewNotes..MinX(0)
Gui.frmViewNotes..MinY(0)
Gui.frmViewNotes..Position(0,0)
Gui.frmViewNotes..BackColor(-2147483633)
Gui.frmViewNotes..MousePointer(0)
Gui.frmViewNotes..Event(UnLoad,frmViewNotes_UnLoad)
Gui.frmViewNotes.GsGCViewNotes.Create(GsGridControl)
Gui.frmViewNotes.GsGCViewNotes.Size(6630,3135)
Gui.frmViewNotes.GsGCViewNotes.Position(15,15)
Gui.frmViewNotes.GsGCViewNotes.Anchor(15)
Gui.frmViewNotes.GsGCViewNotes.Event(RowCellClick,GsGCViewNotes_RowCellClick)
Gui.frmViewNotes.txtViewNotes.Create(TextboxM)
Gui.frmViewNotes.txtViewNotes.Size(6630,3135)
Gui.frmViewNotes.txtViewNotes.Position(15,3195)
Gui.frmViewNotes.txtViewNotes.Anchor(14)
Gui.frmDocs..Create
Gui.frmDocs..Caption("Add/Update Documents")
Gui.frmDocs..Size(9720,8355)
Gui.frmDocs..MinX(0)
Gui.frmDocs..MinY(0)
Gui.frmDocs..Position(0,0)
Gui.frmDocs..BackColor(-2147483633)
Gui.frmDocs..MousePointer(0)
Gui.frmDocs..Event(UnLoad,frmDocs_UnLoad)
Gui.frmDocs.GsGCDocs.Create(GsGridControl)
Gui.frmDocs.GsGCDocs.Size(9555,8010)
Gui.frmDocs.GsGCDocs.Position(15,15)
Gui.frmDocs.GsGCDocs.Event(RowCellClick,GsGCDocs_RowCellClick)
Gui.frmDocs.GsGCDocs.Anchor(15)
Gui.frmDefaultEmail..Create
Gui.frmDefaultEmail..Caption("Default Sender Email")
Gui.frmDefaultEmail..Size(4380,1890)
Gui.frmDefaultEmail..MinX(0)
Gui.frmDefaultEmail..MinY(0)
Gui.frmDefaultEmail..Position(0,0)
Gui.frmDefaultEmail..BackColor(-2147483633)
Gui.frmDefaultEmail..MaxButton(False)
Gui.frmDefaultEmail..MinButton(False)
Gui.frmDefaultEmail..MousePointer(0)
Gui.frmDefaultEmail..Moveable(False)
Gui.frmDefaultEmail..Sizeable(False)
Gui.frmDefaultEmail..Event(UnLoad,frmDefaultEmail_UnLoad)
Gui.frmDefaultEmail.lblSenderName.Create(Label,"Sender Name:",True,1215,255,0,150,495,True,0,"Arial",8,-2147483633,0)
Gui.frmDefaultEmail.lblSenderEmail.Create(Label,"Sender Email:",True,1215,255,0,150,870,True,0,"Arial",8,-2147483633,0)
Gui.frmDefaultEmail.txtSenderName.Create(TextBox,"",True,2805,300,0,1395,420,False,0,"Arial",8,-2147483643,1)
Gui.frmDefaultEmail.txtSenderName.TabStop(True)
Gui.frmDefaultEmail.txtSenderName.TabIndex(2)
Gui.frmDefaultEmail.txtSenderEmail.Create(TextBox,"",True,2805,300,0,1395,780,False,0,"Arial",8,-2147483643,1)
Gui.frmDefaultEmail.txtSenderEmail.TabStop(True)
Gui.frmDefaultEmail.txtSenderEmail.TabIndex(3)
Gui.frmDefaultEmail.chkCurrentUser.Create(CheckBox)
Gui.frmDefaultEmail.chkCurrentUser.Size(3960,360)
Gui.frmDefaultEmail.chkCurrentUser.Position(120,45)
Gui.frmDefaultEmail.chkCurrentUser.TabStop(True)
Gui.frmDefaultEmail.chkCurrentUser.TabIndex(1)
Gui.frmDefaultEmail.chkCurrentUser.Caption("Use the user's email that scheduled the training")
Gui.frmDefaultEmail.chkCurrentUser.Event(Click,chkCurrentUser_Click)
Gui.frmDefaultEmail.cmdSenderSave.Create(Button)
Gui.frmDefaultEmail.cmdSenderSave.Size(855,375)
Gui.frmDefaultEmail.cmdSenderSave.Position(3345,1125)
Gui.frmDefaultEmail.cmdSenderSave.TabStop(True)
Gui.frmDefaultEmail.cmdSenderSave.TabIndex(4)
Gui.frmDefaultEmail.cmdSenderSave.Caption("Save")
Gui.frmDefaultEmail.cmdSenderSave.Event(Click,cmdSenderSave_Click)
Gui.frmRenewals..Create
Gui.frmRenewals..Caption("Renewal Status")
Gui.frmRenewals..Size(11760,9390)
Gui.frmRenewals..MinX(0)
Gui.frmRenewals..MinY(0)
Gui.frmRenewals..Position(0,0)
Gui.frmRenewals..BackColor(-2147483633)
Gui.frmRenewals..MousePointer(0)
Gui.frmRenewals..Event(UnLoad,frmRenewals_UnLoad)
Gui.frmRenewals.GsGCRenewals.Create(GsGridControl)
Gui.frmRenewals.GsGCRenewals.Size(11580,8640)
Gui.frmRenewals.GsGCRenewals.Position(30,450)
Gui.frmRenewals.GsGCRenewals.Anchor(15)
Gui.frmRenewals.txt1.Create(TextBox,"1 - Renew in 1 Year    ",True,1830,195,0,30,15,True,0,"Arial",8,13826810,0)
Gui.frmRenewals.txt1.FontStyle(True,False,False,False,False)
Gui.frmRenewals.txt1.Locked(True)
Gui.frmRenewals.txt2.Create(TextBox,"2 - Renew in 1 Month",True,1815,195,0,30,225,True,0,"Arial",8,2139610,0)
Gui.frmRenewals.txt2.Locked(True)
Gui.frmRenewals.txt2.FontStyle(True,False,False,False,False)
Gui.frmRenewals.txt3.Create(TextBox,"3 - Renew in 1 Week",True,1815,195,0,1860,15,True,0,"Arial",8,42495,0)
Gui.frmRenewals.txt3.Locked(True)
Gui.frmRenewals.txt3.FontStyle(True,False,False,False,False)
Gui.frmRenewals.txt4.Create(TextBox,"4 - Due or Overdue",True,1815,195,0,1860,225,True,0,"Arial",8,255,0)
Gui.frmRenewals.txt4.Locked(True)
Gui.frmRenewals.txt4.FontStyle(True,False,False,False,False)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.sGsGCIcon.Declare
	V.Global.bLoadDataEmpl.Declare
	V.Global.bLoadDataEmplTrain.Declare
	V.Global.bLoadDataEmplTrainMulti.Declare
	V.Global.bLoadDataRenewal.Declare
	V.Global.sFirstName.Declare
	V.Global.sLastName.Declare
	V.Global.iSchedID.Declare
	V.Global.iCourseID.Declare
	V.Global.bEdit.Declare
	V.Global.bMulti.Declare
	V.Global.sDocTypes.Declare
	V.Global.sEmplName.Declare
	V.Global.sEmplEmail.Declare
	V.Global.bSched.Declare
	V.Global.sTimeZone.Declare
	V.Global.bFormAdd.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmTraining.picEmplPic.SizeMode(1)
	
	Gui.frmAddTrainings.txtDragFiles.Event("DRAGDROPFILE",DragDrop)
	
	'Set Logo in GsGridControl Group Header
	F.Intrinsic.String.Build("{0}\GAB_GSS_Logo_Green_Dash.png",V.Caller.ArtDir,V.Global.sGsGCIcon)

	F.ODBC.Connection!con.OpenCompanyConnection
	
	F.Intrinsic.Control.CallSub(CheckEmail)
	F.Intrinsic.Control.CallSub(LoadDropDownList)
	F.Intrinsic.Control.CallSub(LoadComboboxes)
	F.Intrinsic.Control.CallSub(SetContextMenus)
	F.Intrinsic.Control.CallSub(SetContextMenusAddTraining)
	F.Intrinsic.Control.CallSub(LoadEmployees)
	
	Gui.frmEmployees..Show

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.frmEmployees_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadDataEmpl)
		F.Intrinsic.Control.CallSub(SerializeEmpl)
	F.Intrinsic.Control.EndIf

	F.ODBC.Connection!con.Close
	F.Intrinsic.Control.End

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmEmployees_UnLoad.End

Program.Sub.CheckEmail.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFile.Declare
	V.Local.bFile.Declare

	F.Intrinsic.Control.BlockEvents
	
	F.Intrinsic.String.Build("{0}\GAB_5193_Default_Sender_Email.txt",V.Caller.GasDir,V.Local.sFile)
	F.Intrinsic.File.Exists(V.Local.sFile,V.Local.bFile)
	F.Intrinsic.Control.If(V.Local.bFile)
		Gui.frmDefaultEmail.chkCurrentUser.Value(0)
		F.Intrinsic.File.File2String(V.Local.sFile,V.Local.sFile)
		F.Intrinsic.String.Split(V.Local.sFile,"*!*",V.Local.sFile)
		Gui.frmDefaultEmail.txtSenderName.Text(V.Local.sFile(0))
		Gui.frmDefaultEmail.txtSenderEmail.Text(V.Local.sFile(1))
		Gui.frmDefaultEmail.txtSenderName.Enabled(True)
		Gui.frmDefaultEmail.txtSenderEmail.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.frmDefaultEmail.chkCurrentUser.Value(1)
		Gui.frmDefaultEmail.txtSenderName.Text("")
		Gui.frmDefaultEmail.txtSenderEmail.Text("")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.UnBlockEvents

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckEmail.End

Program.Sub.LoadDropDownList.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.dStartDT.Declare

	F.Intrinsic.Control.BlockEvents
	
	'frmEmployees
	Gui.frmEmployees.ddlFilter.AddItem("Active",0)
	Gui.frmEmployees.ddlFilter.AddItem("Active (Terminated Only)",1)
	Gui.frmEmployees.ddlFilter.AddItem("History",2)
	Gui.frmEmployees.ddlFilter.Text("Active")
	
	'frmTraining
	Gui.frmTraining.ddlFilter.AddItem("All",0)
	Gui.frmTraining.ddlFilter.AddItem("Scheduled Only",1)
	Gui.frmTraining.ddlFilter.AddItem("Completed Only",2)
	Gui.frmTraining.ddlFilter.Text("All")
	
	'frmTrainingMulti
	Gui.frmTrainingMulti.ddlFilter.AddItem("All",0)
	Gui.frmTrainingMulti.ddlFilter.AddItem("Scheduled Only",1)
	Gui.frmTrainingMulti.ddlFilter.AddItem("Completed Only",2)
	Gui.frmTrainingMulti.ddlFilter.Text("All")
	
	'Set Default Dates
	F.Intrinsic.Date.DateAdd("D",-1,V.Ambient.Date,V.Local.dStartDT)
	Gui.frmTraining.dtpStartDT.Value(V.Local.dStartDT)
	Gui.frmTraining.dtpEndDT.Value(V.Ambient.Date)
	
	F.Intrinsic.Control.UnBlockEvents

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDropDownList.End

Program.Sub.LoadComboboxes.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.BlockEvents
	
	'Dept
	F.Data.DataTable.CreateFromSQL("dtDept","con","Select DEPT_ID,DEPARTMENT From GAB_5193_DEPTS Order By DEPARTMENT;")
	Gui.frmAddTrainings.cboDept.AddItems("DataTable","dtDept","DEPT_ID","DEPARTMENT")
	Gui.frmAddTrainings.cboDept.Text("")
	
	'Type
	F.Data.DataTable.CreateFromSQL("dtType","con","Select TYPE_ID,COURSE_TYPE From GAB_5193_COURSE_TYPE;")
	Gui.frmAddTrainings.cboType.AddItems("DataTable","dtType","TYPE_ID","COURSE_TYPE")
	Gui.frmAddTrainings.cboType.Text("")
	
	'Provider
	F.Data.DataTable.CreateFromSQL("dtProvider","con","Select PROVIDER_ID,PROVIDER_NAME+' | '+CASE WHEN PROVIDER_ADDRESS IS NULL THEN '' ELSE PROVIDER_ADDRESS END As PROVIDER From GAB_5193_PROVIDERS;")
	Gui.frmAddTrainings.cboProvider.AddItems("DataTable","dtProvider","PROVIDER_ID","PROVIDER")
	Gui.frmAddTrainings.cboProvider.Text("")
	
	'Course
	F.Data.DataTable.CreateFromSQL("dtCourse","con","Select COURSE_ID,COURSE_NAME From GAB_5193_COURSES;")
	Gui.frmAddTrainings.cboCourse.AddItems("DataTable","dtCourse","COURSE_ID","COURSE_NAME")
	Gui.frmAddTrainings.cboCourse.Text("")
	
	'Level
	F.Data.DataTable.CreateFromSQL("dtLevel","con","Select LEVEL_ID,LEVEL_NAME From GAB_5193_LEVELS;")
	Gui.frmAddTrainings.cboLevel.AddItems("DataTable","dtLevel","LEVEL_ID","LEVEL_NAME")
	Gui.frmAddTrainings.cboLevel.Text("")
	
	'Start Time
	'Hours
	Gui.frmAddTrainings.cboHrs.AddItem("01",1)
	Gui.frmAddTrainings.cboHrs.AddItem("02",2)
	Gui.frmAddTrainings.cboHrs.AddItem("03",3)
	Gui.frmAddTrainings.cboHrs.AddItem("04",4)
	Gui.frmAddTrainings.cboHrs.AddItem("05",5)
	Gui.frmAddTrainings.cboHrs.AddItem("06",6)
	Gui.frmAddTrainings.cboHrs.AddItem("07",7)
	Gui.frmAddTrainings.cboHrs.AddItem("08",8)
	Gui.frmAddTrainings.cboHrs.AddItem("09",9)
	Gui.frmAddTrainings.cboHrs.AddItem("10",10)
	Gui.frmAddTrainings.cboHrs.AddItem("11",11)
	Gui.frmAddTrainings.cboHrs.AddItem("12",12)
	'Minutes
	Gui.frmAddTrainings.cboMins.AddItem("00",0)
	Gui.frmAddTrainings.cboMins.AddItem("15",1)
	Gui.frmAddTrainings.cboMins.AddItem("30",2)
	Gui.frmAddTrainings.cboMins.AddItem("45",3)
	'AM/PM
	Gui.frmAddTrainings.cboAMPM.AddItem("AM",0)
	Gui.frmAddTrainings.cboAMPM.AddItem("PM",1)
	
	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadComboboxes.End

Program.Sub.SetContextMenus.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmEmployees..ContextMenuCreate("CTXEMPL")
'	Gui.frmEmployees.GsGCEmployees.ContextMenuAttach("CTXEMPL")
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPL","EmplTrain",0,"Employee Trainings")
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPL","AllTrain",0,"All Employee Trainings")
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPL","Exp",3)
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPL","Refresh",0,"Refresh")
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPL","Export",0,"Export")
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPL","Reset",0,"Reset Columns")
	Gui.frmEmployees..ContextMenuSetItemEventHandler("CTXEMPL","EmplTrain","MenuClickEmpl")
	Gui.frmEmployees..ContextMenuSetItemEventHandler("CTXEMPL","AllTrain","MenuClickEmpl")
	Gui.frmEmployees..ContextMenuSetItemEventHandler("CTXEMPL","Refresh","MenuClickEmpl")
	Gui.frmEmployees..ContextMenuSetItemEventHandler("CTXEMPL","Export","MenuClickEmpl")
	Gui.frmEmployees..ContextMenuSetItemEventHandler("CTXEMPL","Reset","MenuClickEmpl")
	
	Gui.frmEmployees..ContextMenuCreate("CTXEMPLHIST")
'	Gui.frmEmployees.GsGCEmployees.ContextMenuAttach("CTXEMPLHIST")
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPLHIST","EmplTrain",0,"Employee Training")
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPLHIST","AllTrain",0,"All Employee Trainings")
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPLHIST","Exp",3)
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPLHIST","Refresh",0,"Refresh")
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPLHIST","Export",0,"Export")
	Gui.frmEmployees..ContextMenuAddItem("CTXEMPLHIST","Reset",0,"Reset Columns")
	Gui.frmEmployees..ContextMenuSetItemEventHandler("CTXEMPLHIST","EmplTrain","MenuClickEmpl")
	Gui.frmEmployees..ContextMenuSetItemEventHandler("CTXEMPLHIST","AllTrain","MenuClickEmpl")
	Gui.frmEmployees..ContextMenuSetItemEventHandler("CTXEMPLHIST","Refresh","MenuClickEmpl")
	Gui.frmEmployees..ContextMenuSetItemEventHandler("CTXEMPLHIST","Export","MenuClickEmpl")
	Gui.frmEmployees..ContextMenuSetItemEventHandler("CTXEMPLHIST","Reset","MenuClickEmpl")
	
	Gui.frmTraining..ContextMenuCreate("CTXEMPLTRAIN")
	Gui.frmTraining.GsGCCourses.ContextMenuAttach("CTXEMPLTRAIN")
	Gui.frmTraining..ContextMenuAddItem("CTXEMPLTRAIN","Add",0,"Add Training")
	Gui.frmTraining..ContextMenuAddItem("CTXEMPLTRAIN","Edit",0,"Update/Edit Training")
	Gui.frmTraining..ContextMenuAddItem("CTXEMPLTRAIN","Remove",0,"Remove Training")
	Gui.frmTraining..ContextMenuAddItem("CTXEMPLTRAIN","Exp",3)
	Gui.frmTraining..ContextMenuAddItem("CTXEMPLTRAIN","Notes",0,"View Notes")
	Gui.frmTraining..ContextMenuAddItem("CTXEMPLTRAIN","Docs",0,"View Docs (Certs, Training, Course)")
	Gui.frmTraining..ContextMenuAddItem("CTXEMPLTRAIN","Exp",3)
	Gui.frmTraining..ContextMenuAddItem("CTXEMPLTRAIN","Refresh",0,"Refresh")
	Gui.frmTraining..ContextMenuAddItem("CTXEMPLTRAIN","Export",0,"Export")
	Gui.frmTraining..ContextMenuAddItem("CTXEMPLTRAIN","Reset",0,"Reset Columns")
	Gui.frmTraining..ContextMenuSetItemEventHandler("CTXEMPLTRAIN","Add","MenuClickEmplTrain")
	Gui.frmTraining..ContextMenuSetItemEventHandler("CTXEMPLTRAIN","Edit","MenuClickEmplTrain")
	Gui.frmTraining..ContextMenuSetItemEventHandler("CTXEMPLTRAIN","Remove","MenuClickEmplTrain")
	Gui.frmTraining..ContextMenuSetItemEventHandler("CTXEMPLTRAIN","Notes","MenuClickEmplTrain")
	Gui.frmTraining..ContextMenuSetItemEventHandler("CTXEMPLTRAIN","Docs","MenuClickEmplTrain")
	Gui.frmTraining..ContextMenuSetItemEventHandler("CTXEMPLTRAIN","Refresh","MenuClickEmplTrain")
	Gui.frmTraining..ContextMenuSetItemEventHandler("CTXEMPLTRAIN","Export","MenuClickEmplTrain")
	Gui.frmTraining..ContextMenuSetItemEventHandler("CTXEMPLTRAIN","Reset","MenuClickEmplTrain")
	
	Gui.frmTraining..ContextMenuCreate("CTXEMPPIC")
	Gui.frmTraining.picEmplPic.ContextMenuAttach("CTXEMPPIC")
	Gui.frmTraining..ContextMenuAddItem("CTXEMPPIC","SetPic",0,"Choose Picture")
	Gui.frmTraining..ContextMenuAddItem("CTXEMPPIC","Reset",0,"Set Default")
	Gui.frmTraining..ContextMenuSetItemEventHandler("CTXEMPPIC","SetPic","MenuClickEmplPic")
	Gui.frmTraining..ContextMenuSetItemEventHandler("CTXEMPPIC","Reset","MenuClickEmplPic")
	
	Gui.frmTrainingMulti..ContextMenuCreate("CTXEMPLTRAINMULTI")
	Gui.frmTrainingMulti.GsGCCoursesMulti.ContextMenuAttach("CTXEMPLTRAINMULTI")
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Add",0,"Add Training")
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Edit",0,"Update/Edit Training")
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Remove",0,"Remove Training")
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Exp",3)
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Matrix",0,"Skills Matrix")
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Exp",3)
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Notes",0,"View Notes")
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Docs",0,"View Docs (Certs, Training, Course)")
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Exp",3)
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Refresh",0,"Refresh")
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Export",0,"Export")
	Gui.frmTrainingMulti..ContextMenuAddItem("CTXEMPLTRAINMULTI","Reset",0,"Reset Columns")
	Gui.frmTrainingMulti..ContextMenuSetItemEventHandler("CTXEMPLTRAINMULTI","Add","MenuClickEmplTrainMulti")
	Gui.frmTrainingMulti..ContextMenuSetItemEventHandler("CTXEMPLTRAINMULTI","Edit","MenuClickEmplTrainMulti")
	Gui.frmTrainingMulti..ContextMenuSetItemEventHandler("CTXEMPLTRAINMULTI","Remove","MenuClickEmplTrainMulti")
	Gui.frmTrainingMulti..ContextMenuSetItemEventHandler("CTXEMPLTRAINMULTI","Matrix","MenuClickEmplTrainMulti")
	Gui.frmTrainingMulti..ContextMenuSetItemEventHandler("CTXEMPLTRAINMULTI","Notes","MenuClickEmplTrainMulti")
	Gui.frmTrainingMulti..ContextMenuSetItemEventHandler("CTXEMPLTRAINMULTI","Docs","MenuClickEmplTrainMulti")
	Gui.frmTrainingMulti..ContextMenuSetItemEventHandler("CTXEMPLTRAINMULTI","Refresh","MenuClickEmplTrainMulti")
	Gui.frmTrainingMulti..ContextMenuSetItemEventHandler("CTXEMPLTRAINMULTI","Export","MenuClickEmplTrainMulti")
	Gui.frmTrainingMulti..ContextMenuSetItemEventHandler("CTXEMPLTRAINMULTI","Reset","MenuClickEmplTrainMulti")
	
	Gui.frmViewNotes..ContextMenuCreate("CTXVIEWNOTES")
	Gui.frmViewNotes.GsGCViewNotes.ContextMenuAttach("CTXVIEWNOTES")
	Gui.frmViewNotes..ContextMenuAddItem("CTXVIEWNOTES","Export",0,"Export")
	Gui.frmViewNotes..ContextMenuSetItemEventHandler("CTXVIEWNOTES","Export","MenuClickViewNotes")
	
	Gui.frmAddTrainings..ContextMenuCreate("CTXDOCS")
	Gui.frmAddTrainings.GsGCAddDocs.ContextMenuAttach("CTXDOCS")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXDOCS","Add",0,"Add")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXDOCS","Edit",0,"Update")
'	Gui.frmAddTrainings..ContextMenuAddItem("CTXDOCS","Active",0,"Set Rev Active")
'	Gui.frmAddTrainings..ContextMenuAddItem("CTXDOCS","Save",0,"Save")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXDOCS","Remove",0,"Remove")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXDOCS","Refresh",0,V.Translation.513800)
	Gui.frmAddTrainings..ContextMenuAddItem("CTXDOCS","Export",0,V.Translation.233700)
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXDOCS","Add","MenuClickDocPath")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXDOCS","Edit","MenuClickDocPath")
'	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXDOCS","Active","MenuClickDocPath")
'	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXDOCS","Save","MenuClickDocPath")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXDOCS","Remove","MenuClickDocPath")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXDOCS","Refresh","MenuClickDocPath")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXDOCS","Export","MenuClickDocPath")
	
	Gui.frmDocs..ContextMenuCreate("CTXVIEWDOCS")
'	Gui.frmDocs.GsGCDocs.ContextMenuAttach("CTXVIEWDOCS")
	Gui.frmDocs..ContextMenuAddItem("CTXVIEWDOCS","SelAll",0,"Select All")
	Gui.frmDocs..ContextMenuAddItem("CTXVIEWDOCS","DeselAll",0,"Deselect All")
	Gui.frmDocs..ContextMenuAddItem("CTXVIEWDOCS","Exp",3)
	Gui.frmDocs..ContextMenuAddItem("CTXVIEWDOCS","Open",0,"Open Selected")
	Gui.frmDocs..ContextMenuAddItem("CTXVIEWDOCS","ZIP",0,"ZIP Selected")
	Gui.frmDocs..ContextMenuSetItemEventHandler("CTXVIEWDOCS","SelAll","MenuClickViewDoc")
	Gui.frmDocs..ContextMenuSetItemEventHandler("CTXVIEWDOCS","DeselAll","MenuClickViewDoc")
	Gui.frmDocs..ContextMenuSetItemEventHandler("CTXVIEWDOCS","Open","MenuClickViewDoc")
	Gui.frmDocs..ContextMenuSetItemEventHandler("CTXVIEWDOCS","ZIP","MenuClickViewDoc")
	
	Gui.frmRenewals..ContextMenuCreate("CTXRENEW")
	Gui.frmRenewals.GsGCRenewals.ContextMenuAttach("CTXRENEW")
	Gui.frmRenewals..ContextMenuAddItem("CTXRENEW","Refresh",0,"Refresh")
	Gui.frmRenewals..ContextMenuAddItem("CTXRENEW","Export",0,"Export")
	Gui.frmRenewals..ContextMenuAddItem("CTXRENEW","Reset",0,"Reset Columns")
	Gui.frmRenewals..ContextMenuSetItemEventHandler("CTXRENEW","Refresh","MenuClickRenew")
	Gui.frmRenewals..ContextMenuSetItemEventHandler("CTXRENEW","Export","MenuClickRenew")
	Gui.frmRenewals..ContextMenuSetItemEventHandler("CTXRENEW","Reset","MenuClickRenew")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End

Program.Sub.MenuClickEmpl.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRet.Declare
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sExt.Declare
	V.Local.sSQL.Declare
	V.Local.iRow.Declare

	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("EMPLTRAIN")
			Gui.frmEmployees.GsGCEmployees.GetSelectedRows("gvEmployees",V.Local.iRow)
			V.Global.sEmplName.Set(V.DataTable.dtEmployees(V.Local.iRow).Name!FieldVal)
			V.Global.sEmplEmail.Set(V.DataTable.dtEmployees(V.Local.iRow).Email_Addr!FieldVal)
			F.Intrinsic.Control.If(V.DataTable.dtEmplTrainings.Exists)
				Gui.frmTraining.GsGCCourses.ClearRows("gvEmplTrainings")
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.CallSub(EmplTrainings,"Row",V.Local.iRow)
			
		F.Intrinsic.Control.Case("ALLTRAIN")
			F.Intrinsic.Control.CallSub(EmplTrainingsMulti)
			
		F.Intrinsic.Control.Case("REFRESH")
			F.Intrinsic.Control.CallSub(LoadEmployees)
			
		F.Intrinsic.Control.Case("EXPORT")
			F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
			F.Intrinsic.Control.If(V.Local.bExcel)
				V.Local.sExt.Set("xlsx")
			F.Intrinsic.Control.Else
				V.Local.sExt.Set("csv")
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("{0}\GAB_5193_Employees_Export.{1}",V.Caller.LocalGssTempDir,V.Local.sExt,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.frmEmployees.GsGCEmployees.Export(V.Local.sFileExport,V.Local.sExt)
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("RESET")
			V.Global.bLoadDataEmpl.Set(False)
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVEMPLOYEES",5193,2000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
			F.Intrinsic.Control.CallSub(LoadEmployees)
			
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickEmpl.End

Program.Sub.MenuClickEmplTrain.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRet.Declare
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sExt.Declare
	V.Local.iRow.Declare
	V.Local.iSchedID.Declare
	V.Local.sSQL.Declare
	
	V.Global.bMulti.Set(False)

	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("ADD")
			V.Global.bEdit.Set(False)
			'Reserve new Sched_ID
			F.ODBC.Connection!con.Execute("Insert Into GAB_5193_SCHEDULED(SCHED_ID) Values(0);")
			F.ODBC.Connection!con.ExecuteAndReturn("Select MAX(SCHED_ID) From GAB_5193_SCHEDULED;",V.Global.iSchedID)
			F.Intrinsic.Control.CallSub(LoadAddTrainings)
			
		F.Intrinsic.Control.Case("EDIT")
			V.Global.bEdit.Set(True)
			'Get Sched_ID
			Gui.frmTraining.GsGCCourses.GetSelectedRows("gvEmplTrainings",V.Local.iRow)
			V.Global.iSchedID.Set(V.DataTable.dtEmplTrainings(V.Local.iRow).SCHED_ID!FieldVal)
			'Load Screen with selected data for Sched_ID
			F.Intrinsic.Control.CallSub(LoadAddTrainings,"Row",V.Local.iRow)
			
		F.Intrinsic.Control.Case("REMOVE")
			F.Intrinsic.Control.If(V.DataTable.dtEmplTrainings(V.Local.iRow).COMPLETED!FieldValIsNull)
				F.Intrinsic.UI.Msgbox("You cannot remove completed trainings.","Remove Training")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.UI.Msgbox("Are you sure you want to remove this training?","Remove Training",4,V.Local.iRet)
			F.Intrinsic.Control.If(V.Local.iRet,=,6)
				'Get Sched_ID
				Gui.frmTraining.GsGCCourses.GetSelectedRows("gvEmplTrainings",V.Local.iRow)
				V.Local.iSchedID.Set(V.DataTable.dtEmplTrainings(V.Local.iRow).SCHED_ID!FieldVal)
				'Delete Records from DB
				F.Intrinsic.String.Build("Delete From GAB_5193_SCHEDULED Where SCHED_ID = {0};",V.Local.iSchedID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_SKILL Where SCHED_ID = {0};",V.Local.iSchedID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_NOTES Where SCHED_ID = {0};",V.Local.iSchedID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_DOCS Where SCHED_ID = {0};",V.Local.iSchedID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				'then Remove Row from DataTable
				F.Data.DataTable.DeleteRow("dtEmplTrainings",V.Local.iRow)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("NOTES")
			'Get Sched_ID
			Gui.frmTraining.GsGCCourses.GetSelectedRows("gvEmplTrainings",V.Local.iRow)
			V.Global.iSchedID.Set(V.DataTable.dtEmplTrainings(V.Local.iRow).SCHED_ID!FieldVal)
			F.Intrinsic.Control.CallSub(LoadViewNotes)
			
		F.Intrinsic.Control.Case("DOCS")
			'Get Sched_ID
			Gui.frmTraining.GsGCCourses.GetSelectedRows("gvEmplTrainings",V.Local.iRow)
			V.Global.iSchedID.Set(V.DataTable.dtEmplTrainings(V.Local.iRow).SCHED_ID!FieldVal)
			V.Global.iCourseID.Set(V.DataTable.dtEmplTrainings(V.Local.iRow).COURSE_ID!FieldVal)
			Gui.frmDocs.GsGCDocs.ContextMenuAttach("CTXVIEWDOCS")
			Gui.frmDocs..Caption("View Docs (Certs, Training, Course)")
			F.Intrinsic.Control.CallSub(LoadViewDocs)
			
		F.Intrinsic.Control.Case("REFRESH")
			F.Intrinsic.Control.CallSub(LoadEmplTrainings)
			
		F.Intrinsic.Control.Case("EXPORT")
			F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
			F.Intrinsic.Control.If(V.Local.bExcel)
				V.Local.sExt.Set("xlsx")
			F.Intrinsic.Control.Else
				V.Local.sExt.Set("csv")
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("{0}\GAB_5193_EmployeeTrainings_Export.{1}",V.Caller.LocalGssTempDir,V.Local.sExt,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.frmTraining.GsGCCourses.Export(V.Local.sFileExport,V.Local.sExt)
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("RESET")
			V.Global.bLoadDataEmplTrain.Set(False)
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVEMPLTRAININGS",5193,2000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
			F.Intrinsic.Control.CallSub(LoadEmplTrainings)
			
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickEmplTrain.End

Program.Sub.MenuClickEmplTrainMulti.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRet.Declare
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sExt.Declare
	V.Local.iRow.Declare
	V.Local.iSchedID.Declare
	V.Local.sSQL.Declare
	
	V.Global.bMulti.Set(True)

	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("ADD")
			V.Global.bEdit.Set(False)
			'Reserve new Sched_ID
			F.ODBC.Connection!con.Execute("Insert Into GAB_5193_SCHEDULED(SCHED_ID) Values(0);")
			F.ODBC.Connection!con.ExecuteAndReturn("Select MAX(SCHED_ID) From GAB_5193_SCHEDULED;",V.Global.iSchedID)
			F.Intrinsic.Control.If(V.DataTable.dtEmplTrainingsMulti.Exists)
				Gui.frmTrainingMulti.GsGCCoursesMulti.GetSelectedRows("gvEmplTrainingsMulti",V.Local.iRow)
				F.Intrinsic.Control.CallSub(LoadAddTrainings,"Row",V.Local.iRow)
			F.Intrinsic.Control.Else
				F.Intrinsic.Control.CallSub(LoadAddTrainings)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("EDIT")
			V.Global.bEdit.Set(True)
			'Get Selected Row
			Gui.frmTrainingMulti.GsGCCoursesMulti.GetSelectedRows("gvEmplTrainingsMulti",V.Local.iRow)
			'Set Sched_ID
			V.Global.iSchedID.Set(V.DataTable.dtEmplTrainingsMulti(V.Local.iRow).SCHED_ID!FieldVal)
			'Load Screen with selected data for Sched_ID
			F.Intrinsic.Control.CallSub(LoadAddTrainings,"Row",V.Local.iRow)
			
		F.Intrinsic.Control.Case("REMOVE")
			F.Intrinsic.Control.If(V.DataTable.dtEmplTrainingsMulti(V.Local.iRow).COMPLETED!FieldValIsNull)
				F.Intrinsic.UI.Msgbox("You cannot remove completed trainings.","Remove Training")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.UI.Msgbox("Are you sure you want to remove this training?","Remove Training",4,V.Local.iRet)
			F.Intrinsic.Control.If(V.Local.iRet,=,6)
				'Get Sched_ID
				Gui.frmTrainingMulti.GsGCCoursesMulti.GetSelectedRows("gvEmplTrainingsMulti",V.Local.iRow)
				V.Local.iSchedID.Set(V.DataTable.dtEmplTrainingsMulti(V.Local.iRow).SCHED_ID!FieldVal)
				'Delete Records from DB
				F.Intrinsic.String.Build("Delete From GAB_5193_SCHEDULED Where SCHED_ID = {0};",V.Local.iSchedID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_SKILL Where SCHED_ID = {0};",V.Local.iSchedID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_NOTES Where SCHED_ID = {0};",V.Local.iSchedID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_DOCS Where SCHED_ID = {0};",V.Local.iSchedID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				'then Remove Row from DataTable
				F.Data.DataTable.DeleteRow("dtEmplTrainingsMulti",V.Local.iRow)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("MATRIX")
			'Very End
			F.Intrinsic.UI.Msgbox("Coming Soon","Work in Progress")
		
		F.Intrinsic.Control.Case("NOTES")
			'Get Sched_ID
			Gui.frmTrainingMulti.GsGCCoursesMulti.GetSelectedRows("gvEmplTrainingsMulti",V.Local.iRow)
			V.Global.iSchedID.Set(V.DataTable.dtEmplTrainingsMulti(V.Local.iRow).SCHED_ID!FieldVal)
			F.Intrinsic.Control.CallSub(LoadViewNotes)
			
		F.Intrinsic.Control.Case("DOCS")
			'Get Sched_ID
			Gui.frmTrainingMulti.GsGCCoursesMulti.GetSelectedRows("gvEmplTrainingsMulti",V.Local.iRow)
			V.Global.iSchedID.Set(V.DataTable.dtEmplTrainingsMulti(V.Local.iRow).SCHED_ID!FieldVal)
			V.Global.iCourseID.Set(V.DataTable.dtEmplTrainingsMulti(V.Local.iRow).COURSE_ID!FieldVal)
			Gui.frmDocs.GsGCDocs.ContextMenuAttach("CTXVIEWDOCS")
			Gui.frmDocs..Caption("View Docs (Certs, Training, Course)")
			F.Intrinsic.Control.CallSub(LoadViewDocs)
			
		F.Intrinsic.Control.Case("REFRESH")
			F.Intrinsic.Control.CallSub(LoadEmplTrainingsMulti)
			
		F.Intrinsic.Control.Case("EXPORT")
			F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
			F.Intrinsic.Control.If(V.Local.bExcel)
				V.Local.sExt.Set("xlsx")
			F.Intrinsic.Control.Else
				V.Local.sExt.Set("csv")
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("{0}\GAB_5193_EmployeeTrainingsMulti_Export.{1}",V.Caller.LocalGssTempDir,V.Local.sExt,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.frmTrainingMulti.GsGCCoursesMulti.Export(V.Local.sFileExport,V.Local.sExt)
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("RESET")
			V.Global.bLoadDataEmplTrainMulti.Set(False)
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVEMPLTRAININGSMULTI",5193,3000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
			F.Intrinsic.Control.CallSub(LoadEmplTrainingsMulti)
			
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickEmplTrainMulti.End

Program.Sub.MenuClickEmplPic.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sPhoto.Declare
	V.Local.iRow.Declare
	V.Local.sSQL.Declare

	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("SETPIC")
			'Open File Windows browser to select a file path
			F.Intrinsic.UI.ShowOpenFileDialog("","*",V.Local.sPhoto)
			F.Intrinsic.Control.If(V.Local.sPhoto.IsNotCancel)
				F.Intrinsic.Control.If(V.DataTable.dtEmplPhoto.RowCount,=,0)
					F.Data.DataTable.AddRow("dtEmplPhoto","EMPL_PHOTO_ID",0,"EMPNO",V.Screen.frmTraining!txtEmplNo.Text,"PHOTO_PATH",V.Local.sPhoto)
				F.Intrinsic.Control.Else
					F.Data.DataTable.SetValue("dtEmplPhoto",V.Local.iRow,"PHOTO_PATH",V.Local.sPhoto)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("RESET")
			'Open File Windows browser to select a file path
			F.Intrinsic.String.Build("{0}\GAB_5193_Employee_Training_Pic.png",V.Caller.GasDir,V.Local.sPhoto)
			F.Intrinsic.Control.If(V.DataTable.dtEmplPhoto.RowCount,=,0)
				F.Data.DataTable.AddRow("dtEmplPhoto","EMPL_PHOTO_ID",0,"EMPNO",V.Screen.frmTraining!txtEmplNo.Text,"PHOTO_PATH",V.Local.sPhoto)
			F.Intrinsic.Control.Else
				F.Data.DataTable.SetValue("dtEmplPhoto",V.Local.iRow,"PHOTO_PATH",V.Local.sPhoto)
			F.Intrinsic.Control.EndIf
			
	F.Intrinsic.Control.EndSelect
	
	Gui.frmTraining.picEmplPic.Picture(V.Local.sPhoto)
	F.Data.DataTable.SaveToDB("dtEmplPhoto","con","GAB_5193_EMPL_PHOTO","EMPL_PHOTO_ID*!*EMPNO")
	F.Data.DataTable.Close("dtEmplPhoto")
	F.Intrinsic.String.Build("Select * From GAB_5193_EMPL_PHOTO Where EMPNO = '{0}';",V.Screen.frmTraining!txtEmplNo.Text,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtEmplPhoto","con",V.Local.sSQL,True)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickEmplPic.End

Program.Sub.MenuClickViewNotes.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRet.Declare
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sExt.Declare
	V.Local.sSQL.Declare
	V.Local.iRow.Declare

	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("EXPORT")
			F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
			F.Intrinsic.Control.If(V.Local.bExcel)
				V.Local.sExt.Set("xlsx")
			F.Intrinsic.Control.Else
				V.Local.sExt.Set("csv")
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("{0}\GAB_5193_ViewNotes_Export.{1}",V.Caller.LocalGssTempDir,V.Local.sExt,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.frmViewNotes.GsGCViewNotes.Export(V.Local.sFileExport,V.Local.sExt)
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
			
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickViewNotes.End

Program.Sub.MenuClickViewDoc.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSelect.Declare
	V.Local.iCnt.Declare
	V.Local.sTargetFile.Declare
	V.Local.sSourceFile.Declare
	V.Local.bExists.Declare
	V.Local.sMsg.Declare
	V.Local.sPath.Declare
	V.Local.sSQL.Declare
	V.Local.bLocked.Declare
	V.Local.sFieldName.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("SELALL")
			F.Data.DataTable.SetValue("dtViewDocs",-1,"SEL",True)
			
		F.Intrinsic.Control.Case("DESELALL")
			F.Data.DataTable.SetValue("dtViewDocs",-1,"SEL",False)
			
		F.Intrinsic.Control.Case("OPEN")
			F.Data.DataTable.Select("dtViewDocs","SEL = True",V.Local.sSelect)
			F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
				F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
				F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
					F.Intrinsic.String.Build("{0}{1}",V.DataTable.dtViewDocs(V.Local.sSelect(V.Local.iCnt)).DOC_PATH!FieldVal,V.DataTable.dtViewDocs(V.Local.sSelect(V.Local.iCnt)).DOC_TITLE!FieldVal,V.Local.sSourceFile)
					F.Intrinsic.Task.ShellExec(0,"",V.Local.sSourceFile,"","",1)
				F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Intrinsic.Control.Else
					F.Intrinsic.UI.Msgbox("No files are selected.","Open Cancelled")
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("ZIP")
			'Save all files to a Temp Location and then zip them all at the end - provide a screen for the use to select where to save the zip folder
			'Name ZIP File and set File path
			F.Intrinsic.String.Build("{0}_{1}_{2}.zip",V.Caller.User,V.Ambient.Date.FormatYYYYMMDD,V.Ambient.Time.FormatHHNNSS,V.Local.sTargetFile)
			F.Intrinsic.UI.FolderBrowser("Select Directory",,V.Local.sPath)
			F.Intrinsic.Control.If(V.Local.sPath.IsCancel)
				F.Intrinsic.UI.Msgbox("No ZIP created.","ZIP Cancelled")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}\{1}",V.Local.sPath,V.Local.sTargetFile,V.Local.sTargetFile)
				F.Intrinsic.File.Exists(V.Local.sTargetFile,V.Local.bExists)
				F.Intrinsic.Control.If(V.Local.bExists)
					F.Intrinsic.File.DeleteFile(V.Local.sTargetFile)
				F.Intrinsic.Control.EndIf
				
				F.Data.DataTable.Select("dtViewDocs","SEL = True",V.Local.sSelect)
				F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
					F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
					F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
						F.Intrinsic.String.Build("{0}{1}",V.DataTable.dtViewDocs(V.Local.sSelect(V.Local.iCnt)).DOC_PATH!FieldVal,V.DataTable.dtViewDocs(V.Local.sSelect(V.Local.iCnt)).DOC_TITLE!FieldVal,V.Local.sSourceFile)
						F.Automation.Zip.Zip(V.Local.sSourceFile,V.Local.sTargetFile)
					F.Intrinsic.Control.Next(V.Local.iCnt)
					'ZIP Complete
					F.Intrinsic.String.Build("Zip created: {0}",V.Local.sTargetFile,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.Else
					F.Intrinsic.UI.Msgbox("No files are selected.","ZIP Cancelled")
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickViewDoc.End

Program.Sub.MenuClickDocPath.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRow.Declare
	V.Local.sDocPath.Declare
	V.Local.bExists.Declare
	V.Local.sMsg.Declare
	V.Local.sSQL.Declare
	V.Local.sExp.Declare
	V.Local.iID.Declare
	V.Local.sExtension.Declare
	V.Local.sDocName.Declare
	V.Local.sDocNameMatch.Declare
	V.Local.iRet.Declare
	V.Local.iRev.Declare
	V.Local.iCnt.Declare
	V.Local.sSelect.Declare
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sExt.Declare
	V.Local.sDocPathNav.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtDocs.Exists,=,False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	Gui.frmAddTrainings.GsGCAddDocs.GetSelectedRows("gvDocs",V.Local.iRow)

	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("ADD")
			V.Local.sDocPath.Set("")
			V.Local.sDocName.Set("")
			F.Intrinsic.UI.ShowOpenFileDialog("","*",V.Local.sDocPath)
			F.Intrinsic.Control.If(V.Local.sDocPath.IsNotCancel)
				'Get File Name
				F.Intrinsic.String.Split(V.Local.sDocPath,"\",V.Local.sDocName)
				V.Local.sDocName.Set(V.Local.sDocName(V.Local.sDocName.UBound))
				F.Intrinsic.String.Replace(V.Local.sDocPath,V.Local.sDocName,"",V.Local.sDocPath)
				F.Intrinsic.String.Build("{0}{1}",V.Local.sDocPath,V.Local.sDocName,V.Local.sDocPathNav)
				Gui.frmAddTrainings.htmlPrevDoc.Navigate("about:blank")
				Gui.frmAddTrainings.htmlPrevDoc.Navigate(V.Local.sDocPathNav)
			F.Intrinsic.Control.EndIf
			F.Data.DataTable.AddRow("dtDocs","SCHED_DOC_ID",0,"SCHED_ID",V.Global.iSchedID,"DOC_TYPE_ID",-1,"SCHED_DOC_PATH",V.Local.sDocPath,"SCHED_DOC_TITLE",V.Local.sDocName,"SCHED_DOC_REV",1,"SCHED_ACTIVE",True)
			F.Intrinsic.Control.CallSub(cmdSaveDocs_Click)
			
		F.Intrinsic.Control.Case("EDIT")
			'Open File Windows browser to select a file path
			V.Local.sDocPath.Set("")
			V.Local.sDocName.Set("")
			F.Intrinsic.UI.ShowOpenFileDialog("","*",V.Local.sDocPath)
			F.Intrinsic.Control.If(V.Local.sDocPath.IsNotCancel)
				'Get File Name
				F.Intrinsic.String.Split(V.Local.sDocPath,"\",V.Local.sDocName)
				V.Local.sDocName.Set(V.Local.sDocName(V.Local.sDocName.UBound))
				F.Intrinsic.String.Replace(V.Local.sDocPath,V.Local.sDocName,"",V.Local.sDocPath)
				F.Intrinsic.String.Build("{0}{1}",V.Local.sDocPath,V.Local.sDocName,V.Local.sDocPathNav)
				Gui.frmAddTrainings.htmlPrevDoc.Navigate("about:blank")
				Gui.frmAddTrainings.htmlPrevDoc.Navigate(V.Local.sDocPathNav)
			F.Intrinsic.Control.EndIf
			F.Data.DataTable.SetValue("dtDocs",V.Local.iRow,"SCHED_DOC_PATH",V.Local.sDocPath,"SCHED_DOC_TITLE",V.Local.sDocName)
			F.Intrinsic.Control.CallSub(cmdSaveDocs_Click)
			
		F.Intrinsic.Control.Case("REMOVE")
			F.Data.DataTable.DeleteRow("dtDocs",V.Local.iRow)
			F.Data.DataTable.SaveToDB("dtDocs","con","GAB_5193_SCHED_DOCS","SCHED_DOC_ID",4)
			F.Data.DataTable.AcceptChanges("dtDocs")
			
		F.Intrinsic.Control.Case("REFRESH")
			F.Intrinsic.Control.CallSub(LoadTrainDocs)
			
		F.Intrinsic.Control.Case("EXPORT")
			F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
			F.Intrinsic.Control.If(V.Local.bExcel)
				V.Local.sExt.Set("xlsx")
			F.Intrinsic.Control.Else
				V.Local.sExt.Set("csv")
			F.Intrinsic.Control.EndIf
					
			F.Intrinsic.String.Build("{0}GAB_5193_{1}_Export.{2}",V.Caller.LocalGssTempDir,"GAB_5193_SCHED_DOCS",V.Local.sExt,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.frmAddTrainings.GsGCAddDocs.Export(V.Local.sFileExport,V.Local.sExt)
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
			
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickDocPath.End

Program.Sub.MenuClickRenew.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sExt.Declare

	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("REFRESH")
			F.Intrinsic.Control.CallSub(LoadRenewalStatus)
			
		F.Intrinsic.Control.Case("EXPORT")
			F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
			F.Intrinsic.Control.If(V.Local.bExcel)
				V.Local.sExt.Set("xlsx")
			F.Intrinsic.Control.Else
				V.Local.sExt.Set("csv")
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("{0}\GAB_5193_RenewalStatus_Export.{1}",V.Caller.LocalGssTempDir,V.Local.sExt,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.frmRenewals.GsGCRenewals.Export(V.Local.sFileExport,V.Local.sExt)
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("RESET")
			V.Global.bLoadDataRenewal.Set(False)
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVRENEW",5193,4000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
			F.Intrinsic.Control.CallSub(LoadRenewalStatus)
			
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickRenew.End

Program.Sub.LoadEmployees.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadDataEmpl)
		F.Intrinsic.Control.CallSub(SerializeEmpl)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.DataTable.dtEmployees.Exists)
		F.Data.DataTable.Close("dtEmployees")
	F.Intrinsic.Control.EndIf
	
	Gui.frmEmployees.lblStatus.Visible(True)
	
	F.Intrinsic.Control.SelectCase(V.Screen.frmEmployees!ddlFilter.ItemData)
		F.Intrinsic.Control.Case(0)
			Gui.frmEmployees.GsGCEmployees.ContextMenuAttach("CTXEMPL")
			V.Local.sSQL.Set("Select RTrim(A.Employee) As Employee,RTrim(A.Name) As Name,RTrim(B.First) As First,RTrim(B.Last) As Last,Case A.Date_Hire When '1900-01-01' Then Null Else A.Date_Hire End As Date_Hire,Case A.Date_Termination When '1900-01-01' Then Null Else A.Date_Termination End As Date_Termination,RTrim(A.Email_Addr) As Email_Addr,RTrim(A.Dept_Employee) As Dept_Employee,RTrim(A.Shift) As Shift From V_Employee_Mstr A Left Join V_Pyrl_Emp_Name B On A.Employee = B.Empl Order By A.Name;")
			
		F.Intrinsic.Control.Case(1)
			Gui.frmEmployees.GsGCEmployees.ContextMenuAttach("CTXEMPL")
			V.Local.sSQL.Set("Select RTrim(A.Employee) As Employee,RTrim(A.Name) As Name,RTrim(B.First) As First,RTrim(B.Last) As Last,Case A.Date_Hire When '1900-01-01' Then Null Else A.Date_Hire End As Date_Hire,Case A.Date_Termination When '1900-01-01' Then Null Else A.Date_Termination End As Date_Termination,RTrim(A.Email_Addr) As Email_Addr,RTrim(A.Dept_Employee) As Dept_Employee,RTrim(A.Shift) As Shift From V_Employee_Mstr A Left Join V_Pyrl_Emp_Name B On A.Employee = B.Empl Where A.Date_Termination <> '1900-01-01' Order By A.Name;")
			
		F.Intrinsic.Control.Case(2)
			Gui.frmEmployees.GsGCEmployees.ContextMenuAttach("CTXEMPLHIST")
			V.Local.sSQL.Set("Select RTrim(A.Employee) Employee,RTrim(A.Name) As Name,RTrim(B.First) As First,RTrim(B.Last) As Last,Case A.Hire_Date When '1900-01-01' Then Null Else A.Hire_Date End As Date_Hire,Case A.Termination When '1900-01-01' Then Null Else A.Termination End As Date_Termination,RTrim(A.Email_Addr) As Email_Addr,RTrim(A.Department) As Dept_Employee,RTrim(A.Shift) As Shift From V_Pyrl_Emp_Hist A Left Join V_Pyrl_Emp_Name B On A.Employee = B.Empl Order By A.Name;")
			
	F.Intrinsic.Control.EndSelect
	
	F.Data.DataTable.CreateFromSQL("dtEmployees","con",V.Local.sSQL,True)
	V.Global.bLoadDataEmpl.Set(True)
	
	F.Intrinsic.Control.CallSub(LoadEmployeesGV)
	F.Intrinsic.Control.CallSub(DeserializeEmpl)
	
	Gui.frmEmployees.lblStatus.Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadEmployees.End

Program.Sub.LoadEmployeesGV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sValues.Declare
	V.Local.iCnt.Declare
	V.Local.sColumns.Declare
	
	'Set and Format Grid
	Gui.frmEmployees.GsGCEmployees.AddGridViewFromDataTable("gvEmployees","dtEmployees")
	Gui.frmEmployees.GsGCEmployees.Icon(V.Global.sGsGCIcon)
	Gui.frmEmployees.GsGCEmployees.SuspendLayout()
	Gui.frmEmployees.GsGCEmployees.SetGridViewProperty("gvEmployees","MultiSelect",True)
	Gui.frmEmployees.GsGCEmployees.SetGridViewProperty("gvEmployees","AllowSort",True)
	Gui.frmEmployees.GsGCEmployees.SetGridViewProperty("gvEmployees","AllowFilter",True)
	Gui.frmEmployees.GsGCEmployees.SetGridViewProperty("gvEmployees","OptionsDetailShowDetailTabs",False)
	Gui.frmEmployees.GsGCEmployees.SetGridViewProperty("gvEmployees","OptionsViewShowGroupPanel",True)
	Gui.frmEmployees.GsGCEmployees.SetGridViewProperty("gvEmployees","EnableAppearanceOddRow",True)
	Gui.frmEmployees.GsGCEmployees.SetGridViewProperty("gvEmployees","OptionsFindAlwaysVisible",False)
	Gui.frmEmployees.GsGCEmployees.SetGridViewProperty("gvEmployees","OptionsViewShowAutoFilterRow",True)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtEmployees.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
		'Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees",V.Local.sColumns(V.Local.iCnt),"HeaderHAlignment","Center")
	F.Intrinsic.Control.Next(V.Local.iCnt)

	'Employee
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Employee","Caption","Employee No.")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Employee","MinWidth","85")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Employee","AllowEdit",False)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Employee","ReadOnly",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Employee","HeaderHAlignment","Center")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Employee","CellHAlignment","Center")
'	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Employee","CellForeColor","Blue")
'	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Employee","CellFontUnderline",True)
	Gui.frmEmployees.GsGCEmployees.AddSummaryItem("gvEmployees","Employee","Employee","COUNT","Count: ","",n0)
	
	'Name
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Name","Caption","Employee Name")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Name","MinWidth","130")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Name","AllowEdit",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Name","ReadOnly",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Name","HeaderHAlignment","Left")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Name","CellHAlignment","Left")
	
	'First
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","First","Caption","First Name")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","First","MinWidth","100")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","First","AllowEdit",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","First","ReadOnly",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","First","HeaderHAlignment","Left")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","First","CellHAlignment","Left")
	
	'Last
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Last","Caption","Last Name")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Last","MinWidth","100")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Last","AllowEdit",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Last","ReadOnly",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Last","HeaderHAlignment","Left")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Last","CellHAlignment","Left")
	
	'Date_Hire
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Hire","Visible",False)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Hire","Caption","Hire Date")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Hire","MinWidth","85")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Hire","AllowEdit",False)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Hire","ReadOnly",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Hire","HeaderHAlignment","Center")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Hire","CellHAlignment","Center")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Hire","DisplayCustomDatetime","d")
	
	'Date_Termination
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Termination","Visible",False)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Termination","Caption","Term. Date")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Termination","MinWidth","85")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Termination","AllowEdit",False)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Termination","ReadOnly",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Termination","HeaderHAlignment","Center")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Termination","CellHAlignment","Center")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Date_Termination","DisplayCustomDatetime","d")
	
	'Email_Addr
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Email_Addr","Visible",False)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Email_Addr","Caption","Email")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Email_Addr","MinWidth","135")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Email_Addr","AllowEdit",False)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Email_Addr","ReadOnly",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Email_Addr","HeaderHAlignment","Left")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Email_Addr","CellHAlignment","Left")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Email_Addr","CellForeColor","Blue")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Email_Addr","CellFontUnderline",True)
	
	'Dept_Employee
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Dept_Employee","Visible",False)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Dept_Employee","Caption","Dept")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Dept_Employee","MinWidth","85")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Dept_Employee","AllowEdit",False)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Dept_Employee","ReadOnly",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Dept_Employee","HeaderHAlignment","Center")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Dept_Employee","CellHAlignment","Center")
	
	'Shift
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Shift","Visible",False)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Shift","Caption","Shift")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Shift","MinWidth","85")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Shift","AllowEdit",False)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Shift","ReadOnly",True)
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Shift","HeaderHAlignment","Center")
	Gui.frmEmployees.GsGCEmployees.SetColumnProperty("gvEmployees","Shift","CellHAlignment","Center")
	
	Gui.frmEmployees.GsGCEmployees.ResumeLayout()
	Gui.frmEmployees.GsGCEmployees.MainView("gvEmployees")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadEmployeesGV.End

Program.Sub.SerializeEmpl.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	Gui.frmEmployees.GsGCEmployees.Serialize("gvEmployees",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVEMPLOYEES",5193,2000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End

	F.Intrinsic.Control.EndTry
Program.Sub.SerializeEmpl.End

Program.Sub.DeserializeEmpl.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvEmployees",5193,2000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.frmEmployees.GsGCEmployees.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End

	F.Intrinsic.Control.EndTry
Program.Sub.DeserializeEmpl.End

Program.Sub.frmTraining_UnLoad.Start
 	F.Intrinsic.Control.Try
 	V.Local.sError.Declare
 	
 	F.Intrinsic.Control.If(V.Global.bLoadDataEmplTrain)
		F.Intrinsic.Control.CallSub(SerializeEmplTrain)
	F.Intrinsic.Control.EndIf
 
 	Gui.frmTraining..Visible(False)
 	
 	'Show Main
 	Gui.frmEmployees..Visible(True)
 
 	F.Intrinsic.Control.Catch
 		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
 		F.Intrinsic.UI.Msgbox(V.Local.sError)
 		F.Intrinsic.Control.End 
 	F.Intrinsic.Control.EndTry
Program.Sub.frmTraining_UnLoad.End

Program.Sub.EmplTrainings.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sDefaultPic.Declare
	V.Local.dDate.Declare
	V.Local.sDate.Declare
	V.Local.sSQL.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtEmplPhoto.Exists)
		F.Data.DataTable.Close("dtEmplPhoto")
	F.Intrinsic.Control.EndIf
	
	'Set Employee Photo or Defualt Picture
	F.Intrinsic.String.Build("{0}\GAB_5193_Employee_Training_Pic.png",V.Caller.GasDir,V.Local.sDefaultPic)
	Gui.frmTraining.picEmplPic.Picture(V.Local.sDefaultPic)
	
	F.Intrinsic.String.Build("Select * From GAB_5193_EMPL_PHOTO Where EMPNO = '{0}';",V.DataTable.dtEmployees(V.Args.Row).Employee!FieldVal,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtEmplPhoto","con",V.Local.sSQL,True)
	F.Intrinsic.Control.If(V.DataTable.dtEmplPhoto.RowCount,<>,0)
		Gui.frmTraining.picEmplPic.Picture(V.DataTable.dtEmplPhoto(0).PHOTO_PATH!FieldVal)
	F.Intrinsic.Control.EndIf

	'Set Screen fields
	'Employee
	Gui.frmTraining.txtEmplNo.Text(V.DataTable.dtEmployees(V.Args.Row).Employee!FieldVal)
	
	'Name
	Gui.frmTraining.txtEmplName.Text(V.DataTable.dtEmployees(V.Args.Row).Name!FieldVal)
	V.Global.sFirstName.Set(V.DataTable.dtEmployees(V.Args.Row).First!FieldVal)
	V.Global.sLastName.Set(V.DataTable.dtEmployees(V.Args.Row).Last!FieldVal)
	
	'Shift
	Gui.frmTraining.txtShift.Text(V.DataTable.dtEmployees(V.Args.Row).Shift!FieldVal)
	
	'Dept
	Gui.frmTraining.txtDept.Text(V.DataTable.dtEmployees(V.Args.Row).Dept_Employee!FieldVal)
	
	'Date_Hire
	F.Intrinsic.Control.If(V.DataTable.dtEmployees(V.Args.Row).Date_Hire!FieldVal,=,"")
		Gui.frmTraining.txtHireDate.Text("")
	F.Intrinsic.Control.Else
		V.Local.dDate.Set(V.DataTable.dtEmployees(V.Args.Row).Date_Hire!FieldVal)
		Gui.frmTraining.txtHireDate.Text(V.Local.dDate.String)
	F.Intrinsic.Control.EndIf
	
	'Date_Termination
	F.Intrinsic.Control.If(V.DataTable.dtEmployees(V.Args.Row).Date_Termination!FieldVal,=,"")
		Gui.frmTraining.txtTermDate.Text("")
	F.Intrinsic.Control.Else
		V.Local.dDate.Set(V.DataTable.dtEmployees(V.Args.Row).Date_Termination!FieldVal)
		Gui.frmTraining.txtTermDate.Text(V.Local.dDate.String)
	F.Intrinsic.Control.EndIf
	
'	F.Intrinsic.Control.CallSub(LoadEmplTrainings)
	
	'Show Screen
	Gui.frmTraining..Show
	
	'Hide Main Screen
	Gui.frmEmployees..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.EmplTrainings.End

Program.Sub.LoadEmplTrainings.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	V.Local.dStartDate.Declare
	V.Local.dEndDate.Declare
	
	V.Local.dStartDate.Set(V.Screen.frmTraining!dtpStartDT.Value)
	F.Intrinsic.Date.DateAdd("D",1,V.Screen.frmTraining!dtpEndDT.Value,V.Local.dEndDate)
	F.Intrinsic.Control.If(V.Local.dStartDate,>,V.Local.dEndDate)
		F.Intrinsic.UI.Msgbox("Start Date needs to be before the End Date.","Trainings")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Global.bLoadDataEmplTrain)
		F.Intrinsic.Control.CallSub(SerializeEmplTrain)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.DataTable.dtEmplTrainings.Exists)
		F.Data.DataTable.Close("dtEmplTrainings")
	F.Intrinsic.Control.EndIf
	
	Gui.frmTraining.lblStatus.Visible(True)
	
	F.Intrinsic.Control.SelectCase(V.Screen.frmTraining!ddlFilter.ItemData)
		F.Intrinsic.Control.Case(0)
			'All Records
			F.Intrinsic.String.Build("Select A.SCHED_ID,A.EMPNO,B.NAME,C.FIRST,C.LAST,D.DEPARTMENT,E.COURSE_NAME,F.COURSE_TYPE,G.PROVIDER_NAME+' | '+CASE WHEN G.PROVIDER_ADDRESS IS NULL THEN '' ELSE G.PROVIDER_ADDRESS END As PROVIDER_NAME,H.LEVEL_NAME,A.STARTDT,A.ENDDT,A.HOURS_SCHED,A.COURSE_COST,A.PRODUCTION_COST,A.SCHEDULEDDT,Cast(Case When A.SCHEDULEDDT Is Null Then 0 Else 1 End As Bit) As SCHEDULED,A.COMPLETEDT,Cast(Case When A.COMPLETEDT Is Null Then 0 Else 1 End As Bit) As COMPLETED,E.COURSE_ID From GAB_5193_SCHEDULED A Left Join V_EMPLOYEE_MSTR B On A.EMPNO = B.EMPLOYEE Left Join V_PYRL_EMP_NAME C On B.EMPLOYEE = C.EMPL Left Join GAB_5193_DEPTS D On A.DEPT_ID = D.DEPT_ID Left Join GAB_5193_COURSES E On A.COURSE_ID = E.COURSE_ID Left Join GAB_5193_COURSE_TYPE F On A.TYPE_ID = F.TYPE_ID Left Join GAB_5193_PROVIDERS G On A.PROVIDER_ID = G.PROVIDER_ID Left Join GAB_5193_LEVELS H On A.LEVEL_ID = H.LEVEL_ID Where A.STARTDT Between '{0}' And '{1}' And A.EMPNO = '{2}' Order By B.NAME,A.STARTDT;",V.Local.dStartDate.PervasiveDate,V.Local.dEndDate.PervasiveDate,V.Screen.frmTraining!txtEmplNo.Text,V.Local.sSQL)
			
		F.Intrinsic.Control.Case(1)
			'Scheduled
			F.Intrinsic.String.Build("Select A.SCHED_ID,A.EMPNO,B.NAME,C.FIRST,C.LAST,D.DEPARTMENT,E.COURSE_NAME,F.COURSE_TYPE,G.PROVIDER_NAME+' | '+CASE WHEN G.PROVIDER_ADDRESS IS NULL THEN '' ELSE G.PROVIDER_ADDRESS END As PROVIDER_NAME,H.LEVEL_NAME,A.STARTDT,A.ENDDT,A.HOURS_SCHED,A.COURSE_COST,A.PRODUCTION_COST,A.SCHEDULEDDT,Cast(Case When A.SCHEDULEDDT Is Null Then 0 Else 1 End As Bit) As SCHEDULED,A.COMPLETEDT,Cast(Case When A.COMPLETEDT Is Null Then 0 Else 1 End As Bit) As COMPLETED,E.COURSE_ID From GAB_5193_SCHEDULED A Left Join V_EMPLOYEE_MSTR B On A.EMPNO = B.EMPLOYEE Left Join V_PYRL_EMP_NAME C On B.EMPLOYEE = C.EMPL Left Join GAB_5193_DEPTS D On A.DEPT_ID = D.DEPT_ID Left Join GAB_5193_COURSES E On A.COURSE_ID = E.COURSE_ID Left Join GAB_5193_COURSE_TYPE F On A.TYPE_ID = F.TYPE_ID Left Join GAB_5193_PROVIDERS G On A.PROVIDER_ID = G.PROVIDER_ID Left Join GAB_5193_LEVELS H On A.LEVEL_ID = H.LEVEL_ID Where A.STARTDT Between '{0}' And '{1}' And A.SCHEDULEDDT Is Not Null And A.EMPNO = '{2}' Order By B.NAME,A.STARTDT;",V.Local.dStartDate.PervasiveDate,V.Local.dEndDate.PervasiveDate,V.Screen.frmTraining!txtEmplNo.Text,V.Local.sSQL)
			
		F.Intrinsic.Control.Case(2)
			'Completed
			F.Intrinsic.String.Build("Select A.SCHED_ID,A.EMPNO,B.NAME,C.FIRST,C.LAST,D.DEPARTMENT,E.COURSE_NAME,F.COURSE_TYPE,G.PROVIDER_NAME+' | '+CASE WHEN G.PROVIDER_ADDRESS IS NULL THEN '' ELSE G.PROVIDER_ADDRESS END As PROVIDER_NAME,H.LEVEL_NAME,A.STARTDT,A.ENDDT,A.HOURS_SCHED,A.COURSE_COST,A.PRODUCTION_COST,A.SCHEDULEDDT,Cast(Case When A.SCHEDULEDDT Is Null Then 0 Else 1 End As Bit) As SCHEDULED,A.COMPLETEDT,Cast(Case When A.COMPLETEDT Is Null Then 0 Else 1 End As Bit) As COMPLETED,E.COURSE_ID From GAB_5193_SCHEDULED A Left Join V_EMPLOYEE_MSTR B On A.EMPNO = B.EMPLOYEE Left Join V_PYRL_EMP_NAME C On B.EMPLOYEE = C.EMPL Left Join GAB_5193_DEPTS D On A.DEPT_ID = D.DEPT_ID Left Join GAB_5193_COURSES E On A.COURSE_ID = E.COURSE_ID Left Join GAB_5193_COURSE_TYPE F On A.TYPE_ID = F.TYPE_ID Left Join GAB_5193_PROVIDERS G On A.PROVIDER_ID = G.PROVIDER_ID Left Join GAB_5193_LEVELS H On A.LEVEL_ID = H.LEVEL_ID Where A.STARTDT Between '{0}' And '{1}' And A.COMPLETEDT Is Not Null And A.EMPNO = '{2}' Order By B.NAME,A.STARTDT;",V.Local.dStartDate.PervasiveDate,V.Local.dEndDate.PervasiveDate,V.Screen.frmTraining!txtEmplNo.Text,V.Local.sSQL)
			
	F.Intrinsic.Control.EndSelect
	
	F.Data.DataTable.CreateFromSQL("dtEmplTrainings","con",V.Local.sSQL,True)
	V.Global.bLoadDataEmplTrain.Set(True)
	
	F.Intrinsic.Control.CallSub(LoadEmplTrainingsGV)
	F.Intrinsic.Control.CallSub(DeserializeEmplTrain)
	
	Gui.frmTraining.lblStatus.Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadEmplTrainings.End

Program.Sub.LoadEmplTrainingsGV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sValues.Declare
	V.Local.iCnt.Declare
	V.Local.sColumns.Declare
	
	'Set and Format Grid
	Gui.frmTraining.GsGCCourses.AddGridViewFromDataTable("gvEmplTrainings","dtEmplTrainings")
	Gui.frmTraining.GsGCCourses.Icon(V.Global.sGsGCIcon)
	Gui.frmTraining.GsGCCourses.SuspendLayout()
	Gui.frmTraining.GsGCCourses.SetGridViewProperty("gvEmplTrainings","MultiSelect",True)
	Gui.frmTraining.GsGCCourses.SetGridViewProperty("gvEmplTrainings","AllowSort",True)
	Gui.frmTraining.GsGCCourses.SetGridViewProperty("gvEmplTrainings","AllowFilter",True)
	Gui.frmTraining.GsGCCourses.SetGridViewProperty("gvEmplTrainings","OptionsDetailShowDetailTabs",False)
	Gui.frmTraining.GsGCCourses.SetGridViewProperty("gvEmplTrainings","OptionsViewShowGroupPanel",True)
	Gui.frmTraining.GsGCCourses.SetGridViewProperty("gvEmplTrainings","EnableAppearanceOddRow",True)
	Gui.frmTraining.GsGCCourses.SetGridViewProperty("gvEmplTrainings","OptionsFindAlwaysVisible",False)
	Gui.frmTraining.GsGCCourses.SetGridViewProperty("gvEmplTrainings","OptionsViewShowAutoFilterRow",True)

	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtEmplTrainings.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
		'Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings",V.Local.sColumns(V.Local.iCnt),"HeaderHAlignment","Center")
	F.Intrinsic.Control.Next(V.Local.iCnt)

	'SCHED_ID
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHED_ID","Visible",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHED_ID","Caption","Sched ID")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHED_ID","MinWidth","65")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHED_ID","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHED_ID","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHED_ID","HeaderHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHED_ID","CellHAlignment","Center")
	Gui.frmTraining.GsGCCourses.AddSummaryItem("gvEmplTrainings","SCHED_ID","SCHED_ID","COUNT","Count: ","",n0)
	
	'EMPNO
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","EMPNO","Visible",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","EMPNO","Caption","Employee No.")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","EMPNO","MinWidth","85")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","EMPNO","AllowEdit",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","EMPNO","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","EMPNO","HeaderHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","EMPNO","CellHAlignment","Center")

	'NAME
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","NAME","Visible",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","NAME","Caption","Employee Name")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","NAME","MinWidth","130")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","NAME","AllowEdit",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","NAME","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","NAME","HeaderHAlignment","Left")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","NAME","CellHAlignment","Left")

	'FIRST
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","FIRST","Visible",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","FIRST","Caption","First Name")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","FIRST","MinWidth","130")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","FIRST","AllowEdit",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","FIRST","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","FIRST","HeaderHAlignment","Left")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","FIRST","CellHAlignment","Left")

	'LAST
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LAST","Visible",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LAST","Caption","Last Name")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LAST","MinWidth","130")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LAST","AllowEdit",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LAST","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LAST","HeaderHAlignment","Left")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LAST","CellHAlignment","Left")

	'DEPARTMENT
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","DEPARTMENT","Caption","Dept.")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","DEPARTMENT","MinWidth","95")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","DEPARTMENT","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","DEPARTMENT","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","DEPARTMENT","HeaderHAlignment","Left")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","DEPARTMENT","CellHAlignment","Left")

	'COURSE_NAME
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_NAME","Caption","Course")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_NAME","MinWidth","130")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_NAME","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_NAME","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_NAME","HeaderHAlignment","Left")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_NAME","CellHAlignment","Left")

	'COURSE_TYPE
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_TYPE","Caption","Type")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_TYPE","MinWidth","85")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_TYPE","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_TYPE","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_TYPE","HeaderHAlignment","Left")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_TYPE","CellHAlignment","Left")

	'PROVIDER_NAME
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PROVIDER_NAME","Caption","Provider")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PROVIDER_NAME","MinWidth","130")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PROVIDER_NAME","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PROVIDER_NAME","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PROVIDER_NAME","HeaderHAlignment","Left")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PROVIDER_NAME","CellHAlignment","Left")

	'LEVEL_NAME
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LEVEL_NAME","Caption","Level")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LEVEL_NAME","MinWidth","85")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LEVEL_NAME","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LEVEL_NAME","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LEVEL_NAME","HeaderHAlignment","Left")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","LEVEL_NAME","CellHAlignment","Left")

	'STARTDT
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","STARTDT","Caption","Start Date")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","STARTDT","MinWidth","115")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","STARTDT","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","STARTDT","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","STARTDT","HeaderHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","STARTDT","CellHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","STARTDT","DisplayCustomDatetime","g")
	
	'ENDDT
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","ENDDT","Caption","End Date")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","ENDDT","MinWidth","85")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","ENDDT","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","ENDDT","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","ENDDT","HeaderHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","ENDDT","CellHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","ENDDT","DisplayCustomDatetime","d")

	'HOURS_SCHED
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","HOURS_SCHED","Caption","Hours Sched.")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","HOURS_SCHED","MinWidth","85")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","HOURS_SCHED","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","HOURS_SCHED","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","HOURS_SCHED","HeaderHAlignment","Far")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","HOURS_SCHED","CellHAlignment","Far")

	'COURSE_COST
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_COST","Caption","Course Cost")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_COST","MinWidth","85")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_COST","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_COST","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_COST","HeaderHAlignment","Far")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_COST","CellHAlignment","Far")

	'PRODUCTION_COST
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PRODUCTION_COST","Caption","Prod. Cost")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PRODUCTION_COST","MinWidth","85")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PRODUCTION_COST","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PRODUCTION_COST","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PRODUCTION_COST","HeaderHAlignment","Far")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","PRODUCTION_COST","CellHAlignment","Far")

	'SCHEDULEDDT
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULEDDT","Caption","Sched. Date")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULEDDT","MinWidth","115")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULEDDT","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULEDDT","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULEDDT","HeaderHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULEDDT","CellHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULEDDT","DisplayCustomDatetime","g")

	'SCHEDULED
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULED","Caption","Scheduled")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULED","MinWidth","85")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULED","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULED","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULED","HeaderHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","SCHEDULED","CellHAlignment","Center")

	'COMPLETEDT
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETEDT","Caption","Compl. Date")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETEDT","MinWidth","115")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETEDT","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETEDT","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETEDT","HeaderHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETEDT","CellHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETEDT","DisplayCustomDatetime","g")

	'COMPLETED
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETED","Caption","Completed")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETED","MinWidth","85")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETED","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETED","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETED","HeaderHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COMPLETED","CellHAlignment","Center")
	
	'COURSE_ID
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_ID","Visible",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_ID","Caption","Course ID")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_ID","MinWidth","55")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_ID","AllowEdit",False)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_ID","ReadOnly",True)
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_ID","HeaderHAlignment","Center")
	Gui.frmTraining.GsGCCourses.SetColumnProperty("gvEmplTrainings","COURSE_ID","CellHAlignment","Center")

	Gui.frmTraining.GsGCCourses.ResumeLayout()
	Gui.frmTraining.GsGCCourses.MainView("gvEmplTrainings")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadEmplTrainingsGV.End

Program.Sub.SerializeEmplTrain.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	Gui.frmTraining.GsGCCourses.Serialize("gvEmplTrainings",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVEMPLTRAININGS",5193,2000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End

	F.Intrinsic.Control.EndTry
Program.Sub.SerializeEmplTrain.End

Program.Sub.DeserializeEmplTrain.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVEMPLTRAININGS",5193,2000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.frmTraining.GsGCCourses.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End

	F.Intrinsic.Control.EndTry
Program.Sub.DeserializeEmplTrain.End

Program.Sub.frmAddTrainings_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	
	'Check to see that a training was added, if not delete the Sched_ID
	F.Intrinsic.String.Build("Select EMPNO From GAB_5193_SCHEDULED Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,=,"")
		'Delete blank record
		F.Intrinsic.String.Build("Delete From GAB_5193_SCHEDULED Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		'Delete Notes
		F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_NOTES Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		'Delete Documents
		F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_DOCS Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf

	'Close Add Training Screen
	Gui.frmAddTrainings..Visible(False)
	
	'Open Training Screen
	F.Intrinsic.Control.If(V.Global.bMulti)
		Gui.frmTrainingMulti..Visible(True)
	F.Intrinsic.Control.Else
		Gui.frmTraining..Visible(True)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmAddTrainings_UnLoad.End

Program.Sub.frmAddTrainings_Resize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	'14295, 8040
	
	V.Local.fW.Declare
	V.Local.fWBase.Declare
	V.Local.fH.Declare
	V.Local.fHBase.Declare
	V.Local.fX.Declare
	V.Local.fY.Declare
	V.Local.fRet.Declare

'	Gui.frmSWCalls.GsGCInfo.Size(Width,Heigth)
'	Gui.frmSWCalls.GsGCInfo.Position(X,Y)

	F.Intrinsic.Math.Sub(V.Screen.frmAddTrainings.Width,14295,V.Local.fWBase)
	F.Intrinsic.Math.Sub(V.Screen.frmAddTrainings.Height,8040,V.Local.fHBase)
	F.Intrinsic.Math.Div(V.Local.fWBase,2,V.Local.fWBase)
	
	'frameCourse
	F.Intrinsic.Math.Add(6525,V.Local.fWBase,V.Local.fW)
	F.Intrinsic.Math.Add(7245,V.Local.fHBase,-150,V.Local.fH)
	Gui.frmAddTrainings.frameCourse.Size(V.Local.fW,V.Local.fH)
	
	'frameSched
	F.Intrinsic.Math.Add(7530,V.Local.fWBase,V.Local.fW)
	F.Intrinsic.Math.Add(7245,V.Local.fHBase,-150,V.Local.fH)
	Gui.frmAddTrainings.frameSched.Size(V.Local.fW,V.Local.fH)
	F.Intrinsic.Math.Add(V.Screen.frmAddTrainings!frameCourse.Left,V.Screen.frmAddTrainings!frameCourse.Width,0,V.Local.fX)
	Gui.frmAddTrainings.frameSched.Position(V.Local.fX,V.Screen.frmAddTrainings!frameCourse.Top)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmAddTrainings_Resize.End

Program.Sub.LoadAddTrainings.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.iHour.Declare
	V.Local.iMins.Declare
	V.Local.sAMPM.Declare
	V.Local.iCnt.Declare
	V.Local.sExp.Declare
	V.Local.sSelect.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtTrainEmpl.Exists)
		F.Data.DataTable.Close("dtTrainEmpl")
	F.Intrinsic.Control.EndIf

	'Set Employee Grid
	F.Intrinsic.Control.If(V.Global.bMulti,=,False)
		F.Data.DataTable.Create("dtTrainEmpl",True)
		F.Data.DataTable.AddColumn("dtTrainEmpl","SEL",Boolean,True)
		F.Data.DataTable.AddColumn("dtTrainEmpl","EMPNO",String)
		F.Data.DataTable.AddColumn("dtTrainEmpl","FIRST",String)
		F.Data.DataTable.AddColumn("dtTrainEmpl","LAST",String)
		F.Data.DataTable.AddRow("dtTrainEmpl","SEL",True,"EMPNO",V.Screen.frmTraining!txtEmplNo.Text,"FIRST",V.Global.sFirstName,"LAST",V.Global.sLastName)
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Global.bEdit)
			F.Data.DataTable.Create("dtTrainEmpl",True)
			F.Data.DataTable.AddColumn("dtTrainEmpl","SEL",Boolean,True)
			F.Data.DataTable.AddColumn("dtTrainEmpl","EMPNO",String)
			F.Data.DataTable.AddColumn("dtTrainEmpl","FIRST",String)
			F.Data.DataTable.AddColumn("dtTrainEmpl","LAST",String)
			F.Data.DataTable.AddRow("dtTrainEmpl","SEL",True,"EMPNO",V.DataTable.dtEmplTrainingsMulti(V.Args.Row).EMPNO!FieldVal,"FIRST",V.DataTable.dtEmplTrainingsMulti(V.Args.Row).FIRST!FieldVal,"LAST",V.DataTable.dtEmplTrainingsMulti(V.Args.Row).LAST!FieldVal)
		F.Intrinsic.Control.Else
			F.Data.DataTable.CreateFromSQL("dtTrainEmpl","con","Select Cast(0 As Bit) As SEL,EMPL As EMPNO,FIRST,LAST From V_Pyrl_Emp_Name A Left Join V_EMPLOYEE_MSTR B On A.Empl = B.Employee Where B.Date_Termination = '1900-01-01' Order By FIRST,LAST;",True)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	'Format Employee Grid
	F.Intrinsic.Control.CallSub(FormatEmplGV)
	
	'Clear Html
	Gui.frmAddTrainings.htmlPrevDoc.Navigate("about:blank")
	
	F.Intrinsic.Control.If(V.Global.bMulti,=,False)
		F.Intrinsic.Control.If(V.Global.bEdit,=,False)
			'Set Department and Skills will be updated from Event
'			Gui.frmAddTrainings.cboDept.Text("")
			F.Intrinsic.String.Build("Select DEPARTMENT From GAB_5193_EMPL_DEPT A Left Join GAB_5193_DEPTS B on A.DEPT_ID = B.DEPT_ID Where A.EMPNO = '{0}';",V.Screen.frmTraining!txtEmplNo.Text,V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			Gui.frmAddTrainings.cboDept.Text(V.Local.sRet)
			'Set Type
			Gui.frmAddTrainings.cboType.Text("")
			'Set Provider
			Gui.frmAddTrainings.cboProvider.Text("")
			'Set Course
			Gui.frmAddTrainings.cboCourse.Text("")
			'Set Level
			Gui.frmAddTrainings.cboLevel.Text("")
			'Set Dates
			Gui.frmAddTrainings.dtpStartDT.Value(V.Ambient.Date)
			Gui.frmAddTrainings.dtpEndDT.Value(V.Ambient.Date)
			'Set Start Time
			Gui.frmAddTrainings.cboHrs.Text("12")
			Gui.frmAddTrainings.cboMins.Text("00")
			Gui.frmAddTrainings.cboAMPM.Text("AM")
			'Set Hours and Cost
			Gui.frmAddTrainings.txtHours.Text("0.00")
			Gui.frmAddTrainings.txtCourseCost.Text("0.00")
			Gui.frmAddTrainings.txtProdCost.Text("0.00")
			'Set Scheduled and Completed
			Gui.frmAddTrainings.chkSched.Value(0)
			Gui.frmAddTrainings.chkCompl.Value(0)
			Gui.frmAddTrainings.chkSched.Enabled(True)
			Gui.frmAddTrainings.chkCompl.Enabled(True)
			V.Global.bSched.Set(False)
			Gui.frmAddTrainings.cmdSaveCourse.Enabled(True)
'			'Clear Skills
'			F.Intrinsic.Control.If(V.DataTable.dtTrainSkills.Exists)
'				Gui.frmAddTrainings.GsGCSkill.ClearRows("gvTrainSkills")
'			F.Intrinsic.Control.EndIf
			'Load Notes and Docs
			F.Intrinsic.Control.CallSub(LoadTrainNotes)
			F.Intrinsic.Control.CallSub(LoadTrainDocs)
		F.Intrinsic.Control.Else
			'Set Department
			Gui.frmAddTrainings.cboDept.Text(V.DataTable.dtEmplTrainings(V.Args.Row).DEPARTMENT!FieldVal)
			'Set Type
			Gui.frmAddTrainings.cboType.Text(V.DataTable.dtEmplTrainings(V.Args.Row).COURSE_TYPE!FieldVal)
			'Set Provider
			Gui.frmAddTrainings.cboProvider.Text(V.DataTable.dtEmplTrainings(V.Args.Row).PROVIDER_NAME!FieldVal)
			'Set Course
			Gui.frmAddTrainings.cboCourse.Text(V.DataTable.dtEmplTrainings(V.Args.Row).COURSE_NAME!FieldVal)
			'Set Level
			Gui.frmAddTrainings.cboLevel.Text(V.DataTable.dtEmplTrainings(V.Args.Row).LEVEL_NAME!FieldVal)
			'Set Dates
			Gui.frmAddTrainings.dtpStartDT.Text(V.DataTable.dtEmplTrainings(V.Args.Row).STARTDT!FieldVal)
			Gui.frmAddTrainings.dtpEndDT.Text(V.DataTable.dtEmplTrainings(V.Args.Row).ENDDT!FieldVal)
			'Start Time
			F.Intrinsic.Date.Hour(V.DataTable.dtEmplTrainings(V.Args.Row).STARTDT!FieldVal,V.Local.iHour)
			F.Intrinsic.Date.Minute(V.DataTable.dtEmplTrainings(V.Args.Row).STARTDT!FieldVal,V.Local.iMins)
			F.Intrinsic.Control.If(V.Local.iHour,>,12)
				F.Intrinsic.Math.Sub(V.Local.iHour,12,V.Local.iHour)
				V.Local.sAMPM.Set("PM")
			F.Intrinsic.Control.ElseIf(V.Local.iHour,=,00)
				V.Local.iHour.Set(12)
				V.Local.sAMPM.Set("AM")
			F.Intrinsic.Control.Else
				V.Local.sAMPM.Set("AM")
			F.Intrinsic.Control.EndIf
			Gui.frmAddTrainings.cboHrs.Text(V.Local.iHour.Format00)
			Gui.frmAddTrainings.cboMins.Text(V.Local.iMins.Format00)
			Gui.frmAddTrainings.cboAMPM.Text(V.Local.sAMPM)
			'Set Hours and Cost
			Gui.frmAddTrainings.txtHours.Text(V.DataTable.dtEmplTrainings(V.Args.Row).HOURS_SCHED!FieldVal)
			Gui.frmAddTrainings.txtCourseCost.Text(V.DataTable.dtEmplTrainings(V.Args.Row).COURSE_COST!FieldVal)
			Gui.frmAddTrainings.txtProdCost.Text(V.DataTable.dtEmplTrainings(V.Args.Row).PRODUCTION_COST!FieldVal)
			'Set Scheduled and Completed
			F.Intrinsic.Control.If(V.DataTable.dtEmplTrainings(V.Args.Row).SCHEDULED!FieldVal)
				Gui.frmAddTrainings.chkSched.Value(1)
				Gui.frmAddTrainings.chkSched.Enabled(False)
				V.Global.bSched.Set(True)
			F.Intrinsic.Control.Else
				Gui.frmAddTrainings.chkSched.Value(0)
				Gui.frmAddTrainings.chkSched.Enabled(True)
				V.Global.bSched.Set(False)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.DataTable.dtEmplTrainings(V.Args.Row).COMPLETED!FieldVal)
				Gui.frmAddTrainings.chkCompl.Value(1)
				Gui.frmAddTrainings.chkCompl.Enabled(False)
				Gui.frmAddTrainings.dtpComplDT.Enabled(True)
				Gui.frmAddTrainings.dtpComplDT.Value(V.DataTable.dtEmplTrainings(V.Args.Row).COMPLETEDT!FieldVal)
'				Gui.frmAddTrainings.cmdSaveCourse.Enabled(False)
			F.Intrinsic.Control.Else
				Gui.frmAddTrainings.chkCompl.Value(0)
				Gui.frmAddTrainings.chkCompl.Enabled(True)
				Gui.frmAddTrainings.cmdSaveCourse.Enabled(True)
			F.Intrinsic.Control.EndIf
			'Load Checked Skills
			F.Data.DataTable.SetValue("dtTrainSkills",-1,"SEL",False)
			F.Intrinsic.String.Build("Select SKILL_ID From GAB_5193_SCHED_SKILL Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
			F.Data.DataTable.CreateFromSQL("dtSetSkills","con",V.Local.sSQL,True)
			F.Intrinsic.Control.If(V.DataTable.dtSetSkills.RowCount,<>,0)
				F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtSetSkills.RowCount--,1)
					F.Intrinsic.String.Build("SKILL_ID = {0}",V.DataTable.dtSetSkills(V.Local.iCnt).SKILL_ID!FieldVal,V.Local.sExp)
					F.Data.DataTable.Select("dtTrainSkills",V.Local.sExp,V.Local.sSelect)
					F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
						F.Data.DataTable.SetValue("dtTrainSkills",V.Local.sSelect,"SEL",True)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Intrinsic.Control.EndIf
			F.Data.DataTable.Close("dtSetSkills")
			'Load Notes and Docs
			F.Intrinsic.Control.CallSub(LoadTrainNotes)
			F.Intrinsic.Control.CallSub(LoadTrainDocs)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Global.bEdit,=,False)
			'Check the selected Employee by Default
			F.Intrinsic.Control.If(V.DataTable.dtEmplTrainingsMulti.Exists)
				F.Intrinsic.Control.If(V.DataTable.dtEmplTrainingsMulti.RowCount,<>,0)
					F.Intrinsic.String.Build("EMPNO = '{0}'",V.DataTable.dtEmplTrainingsMulti(V.Args.Row).EMPNO!FieldVal,V.Local.sExp)
					F.Data.DataTable.Select("dtTrainEmpl",V.Local.sExp,V.Local.sSelect)
					F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
						F.Data.DataTable.SetValue("dtTrainEmpl",V.Local.sSelect,"SEL",True)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			'Set Department and Skills will be updated from Event
			Gui.frmAddTrainings.cboDept.Text("")
			'Set Type
			Gui.frmAddTrainings.cboType.Text("")
			'Set Provider
			Gui.frmAddTrainings.cboProvider.Text("")
			'Set Course
			Gui.frmAddTrainings.cboCourse.Text("")
			'Set Level
			Gui.frmAddTrainings.cboLevel.Text("")
			'Set Dates
			Gui.frmAddTrainings.dtpStartDT.Text(V.Ambient.Date)
			Gui.frmAddTrainings.dtpEndDT.Text(V.Ambient.Date)
			'Set Start Time
			Gui.frmAddTrainings.cboHrs.Text("12")
			Gui.frmAddTrainings.cboMins.Text("00")
			Gui.frmAddTrainings.cboAMPM.Text("AM")
			'Set Hours and Cost
			Gui.frmAddTrainings.txtHours.Text("0.00")
			Gui.frmAddTrainings.txtCourseCost.Text("0.00")
			Gui.frmAddTrainings.txtProdCost.Text("0.00")
			'Set Scheduled and Completed
			Gui.frmAddTrainings.chkSched.Value(0)
			Gui.frmAddTrainings.chkCompl.Value(0)
			Gui.frmAddTrainings.chkSched.Enabled(True)
			Gui.frmAddTrainings.chkCompl.Enabled(True)
			V.Global.bSched.Set(False)
			Gui.frmAddTrainings.cmdSaveCourse.Enabled(True)
			'Clear Skills
			F.Intrinsic.Control.If(V.DataTable.dtTrainSkills.Exists)
				Gui.frmAddTrainings.GsGCSkill.ClearRows("gvTrainSkills")
			F.Intrinsic.Control.EndIf
			'Load Notes and Docs
			F.Intrinsic.Control.CallSub(LoadTrainNotes)
			F.Intrinsic.Control.CallSub(LoadTrainDocs)
		F.Intrinsic.Control.Else
			'Check the selected Employee by Default
			F.Intrinsic.Control.If(V.DataTable.dtEmplTrainingsMulti.Exists)
				F.Intrinsic.Control.If(V.DataTable.dtEmplTrainingsMulti.RowCount,<>,0)
					F.Intrinsic.String.Build("EMPNO = '{0}'",V.DataTable.dtEmplTrainingsMulti(V.Args.Row).EMPNO!FieldVal,V.Local.sExp)
					F.Data.DataTable.Select("dtTrainEmpl",V.Local.sExp,V.Local.sSelect)
					F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
						F.Data.DataTable.SetValue("dtTrainEmpl",V.Local.sSelect,"SEL",True)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			'Set Department
			Gui.frmAddTrainings.cboDept.Text(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).DEPARTMENT!FieldVal)
			'Set Type
			Gui.frmAddTrainings.cboType.Text(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).COURSE_TYPE!FieldVal)
			'Set Provider
			Gui.frmAddTrainings.cboProvider.Text(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).PROVIDER_NAME!FieldVal)
			'Set Course
			Gui.frmAddTrainings.cboCourse.Text(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).COURSE_NAME!FieldVal)
			'Set Level
			Gui.frmAddTrainings.cboLevel.Text(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).LEVEL_NAME!FieldVal)
			'Set Dates
			Gui.frmAddTrainings.dtpStartDT.Text(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).STARTDT!FieldVal)
			Gui.frmAddTrainings.dtpEndDT.Text(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).ENDDT!FieldVal)
			'Start Time
			F.Intrinsic.Date.Hour(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).STARTDT!FieldVal,V.Local.iHour)
			F.Intrinsic.Date.Minute(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).STARTDT!FieldVal,V.Local.iMins)
			F.Intrinsic.Control.If(V.Local.iHour,>,12)
				F.Intrinsic.Math.Sub(V.Local.iHour,12,V.Local.iHour)
				V.Local.sAMPM.Set("PM")
			F.Intrinsic.Control.ElseIf(V.Local.iHour,=,00)
				V.Local.iHour.Set(12)
				V.Local.sAMPM.Set("AM")
			F.Intrinsic.Control.Else
				V.Local.sAMPM.Set("AM")
			F.Intrinsic.Control.EndIf
			Gui.frmAddTrainings.cboHrs.Text(V.Local.iHour.Format00)
			Gui.frmAddTrainings.cboMins.Text(V.Local.iMins.Format00)
			Gui.frmAddTrainings.cboAMPM.Text(V.Local.sAMPM)
			'Set Hours and Cost
			Gui.frmAddTrainings.txtHours.Text(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).HOURS_SCHED!FieldVal)
			Gui.frmAddTrainings.txtCourseCost.Text(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).COURSE_COST!FieldVal)
			Gui.frmAddTrainings.txtProdCost.Text(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).PRODUCTION_COST!FieldVal)
			'Set Scheduled and Completed
			F.Intrinsic.Control.If(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).SCHEDULED!FieldVal)
				Gui.frmAddTrainings.chkSched.Value(1)
				Gui.frmAddTrainings.chkSched.Enabled(False)
				V.Global.bSched.Set(True)
			F.Intrinsic.Control.Else
				Gui.frmAddTrainings.chkSched.Value(0)
				Gui.frmAddTrainings.chkSched.Enabled(True)
				V.Global.bSched.Set(False)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).COMPLETED!FieldVal)
				Gui.frmAddTrainings.chkCompl.Value(1)
				Gui.frmAddTrainings.chkCompl.Enabled(False)
				Gui.frmAddTrainings.dtpComplDT.Enabled(True)
				Gui.frmAddTrainings.dtpComplDT.Value(V.DataTable.dtEmplTrainingsMulti(V.Args.Row).COMPLETEDT!FieldVal)
'				Gui.frmAddTrainings.cmdSaveCourse.Enabled(False)
			F.Intrinsic.Control.Else
				Gui.frmAddTrainings.chkCompl.Value(0)
				Gui.frmAddTrainings.chkCompl.Enabled(True)
				Gui.frmAddTrainings.cmdSaveCourse.Enabled(True)
			F.Intrinsic.Control.EndIf
			'Load Checked Skills
			F.Data.DataTable.SetValue("dtTrainSkills",-1,"SEL",False)
			F.Intrinsic.String.Build("Select SKILL_ID From GAB_5193_SCHED_SKILL Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
			F.Data.DataTable.CreateFromSQL("dtSetSkills","con",V.Local.sSQL,True)
			F.Intrinsic.Control.If(V.DataTable.dtSetSkills.RowCount,<>,0)
				F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtSetSkills.RowCount--,1)
					F.Intrinsic.String.Build("SKILL_ID = {0}",V.DataTable.dtSetSkills(V.Local.iCnt).SKILL_ID!FieldVal,V.Local.sExp)
					F.Data.DataTable.Select("dtTrainSkills",V.Local.sExp,V.Local.sSelect)
					F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
						F.Data.DataTable.SetValue("dtTrainSkills",V.Local.sSelect,"SEL",True)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Intrinsic.Control.EndIf
			F.Data.DataTable.Close("dtSetSkills")
			'Format Skills
			F.Intrinsic.Control.CallSub(FormatSkillGV)
			'Load Notes and Docs
			F.Intrinsic.Control.CallSub(LoadTrainNotes)
			F.Intrinsic.Control.CallSub(LoadTrainDocs)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	'Close Training Screen
	Gui.frmTraining..Visible(False)
	Gui.frmTrainingMulti..Visible(False)
	
	'Show Screen
	Gui.frmAddTrainings..Show
	
	F.Intrinsic.Control.If(V.Global.bFormAdd,=,False)
		Gui.frmAddTrainings..Size(18000,10000)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadAddTrainings.End

Program.Sub.cboDept_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtTrainSkills.Exists)
		F.Data.DataTable.Close("dtTrainSkills")
	F.Intrinsic.Control.EndIf

	'Set Skills Grid
	F.Intrinsic.String.Build("Select Cast(0 As BIT) AS SEL,A.SKILL_ID,A.CORE,SKILL From GAB_5193_SKILL_DEPT A Left Join GAB_5193_DEPTS B On A.DEPT_ID = B.DEPT_ID Left Join GAB_5193_SKILLS C On A.SKILL_ID = C.SKILL_ID Where B.DEPARTMENT = '{0}' Order By C.SKILL;",V.Screen.frmAddTrainings!cboDept.Text,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtTrainSkills","con",V.Local.sSQL,True)
	
	'Format Skills Grid
	F.Intrinsic.Control.CallSub(FormatSkillGV)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cboDept_Click.End

Program.Sub.FormatEmplGV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sColumns.Declare

	'Set and Format Grid
	Gui.frmAddTrainings.GsGCEmpl.AddGridViewFromDataTable("gvTrainEmpl","dtTrainEmpl")
	Gui.frmAddTrainings.GsGCEmpl.SuspendLayout()
	Gui.frmAddTrainings.GsGCEmpl.SetGridViewProperty("gvTrainEmpl","MultiSelect",True)
	Gui.frmAddTrainings.GsGCEmpl.SetGridViewProperty("gvTrainEmpl","AllowSort",True)
	Gui.frmAddTrainings.GsGCEmpl.SetGridViewProperty("gvTrainEmpl","AllowFilter",True)
	Gui.frmAddTrainings.GsGCEmpl.SetGridViewProperty("gvTrainEmpl","OptionsDetailShowDetailTabs",False)
	Gui.frmAddTrainings.GsGCEmpl.SetGridViewProperty("gvTrainEmpl","OptionsViewShowGroupPanel",False)
	Gui.frmAddTrainings.GsGCEmpl.SetGridViewProperty("gvTrainEmpl","EnableAppearanceOddRow",True)
	Gui.frmAddTrainings.GsGCEmpl.SetGridViewProperty("gvTrainEmpl","OptionsFindAlwaysVisible",False)
	Gui.frmAddTrainings.GsGCEmpl.SetGridViewProperty("gvTrainEmpl","OptionsViewShowAutoFilterRow",True)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtTrainEmpl.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
		'Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl",V.Local.sColumns(V.Local.iCnt),"HeaderHAlignment","Center")
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'SEL
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","SEL","Caption","Select")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","SEL","MinWidth","45")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","SEL","AllowEdit",True)
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","SEL","ReadOnly",False)
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","SEL","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","SEL","CellHAlignment","Center")

	'EMPNO
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","EMPNO","Visible",False)
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","EMPNO","Caption","Employee No.")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","EMPNO","MinWidth","85")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","EMPNO","AllowEdit",False)
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","EMPNO","ReadOnly",True)
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","EMPNO","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","EMPNO","CellHAlignment","Center")
	
	'FIRST
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","FIRST","Caption","First Name")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","FIRST","MinWidth","100")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","FIRST","AllowEdit",True)
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","FIRST","ReadOnly",True)
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","FIRST","HeaderHAlignment","Left")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","FIRST","CellHAlignment","Left")
	
	'LAST
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","LAST","Caption","Last Name")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","LAST","MinWidth","100")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","LAST","AllowEdit",True)
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","LAST","ReadOnly",True)
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","LAST","HeaderHAlignment","Left")
	Gui.frmAddTrainings.GsGCEmpl.SetColumnProperty("gvTrainEmpl","LAST","CellHAlignment","Left")
	
	Gui.frmAddTrainings.GsGCEmpl.ResumeLayout()
	Gui.frmAddTrainings.GsGCEmpl.MainView("gvTrainEmpl")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.FormatEmplGV.End

Program.Sub.FormatSkillGV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sColumns.Declare

	'Set and Format Grid
	Gui.frmAddTrainings.GsGCSkill.AddGridViewFromDataTable("gvTrainSkills","dtTrainSkills")
	Gui.frmAddTrainings.GsGCSkill.SuspendLayout()
	Gui.frmAddTrainings.GsGCSkill.SetGridViewProperty("gvTrainSkills","MultiSelect",True)
	Gui.frmAddTrainings.GsGCSkill.SetGridViewProperty("gvTrainSkills","AllowSort",True)
	Gui.frmAddTrainings.GsGCSkill.SetGridViewProperty("gvTrainSkills","AllowFilter",True)
	Gui.frmAddTrainings.GsGCSkill.SetGridViewProperty("gvTrainSkills","OptionsDetailShowDetailTabs",False)
	Gui.frmAddTrainings.GsGCSkill.SetGridViewProperty("gvTrainSkills","OptionsViewShowGroupPanel",False)
	Gui.frmAddTrainings.GsGCSkill.SetGridViewProperty("gvTrainSkills","EnableAppearanceOddRow",True)
	Gui.frmAddTrainings.GsGCSkill.SetGridViewProperty("gvTrainSkills","OptionsFindAlwaysVisible",False)
	Gui.frmAddTrainings.GsGCSkill.SetGridViewProperty("gvTrainSkills","OptionsViewShowAutoFilterRow",True)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtTrainSkills.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
		'Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills",V.Local.sColumns(V.Local.iCnt),"HeaderHAlignment","Center")
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'SEL
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SEL","Caption","Select")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SEL","MinWidth","45")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SEL","AllowEdit",True)
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SEL","ReadOnly",False)
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SEL","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SEL","CellHAlignment","Center")

	'SKILL_ID
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL_ID","Visible",False)
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL_ID","Caption","Skill ID")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL_ID","MinWidth","55")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL_ID","AllowEdit",False)
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL_ID","ReadOnly",True)
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL_ID","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL_ID","CellHAlignment","Center")
	
	'CORE
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","CORE","Caption","Core Skill")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","CORE","MinWidth","55")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","CORE","AllowEdit",False)
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","CORE","ReadOnly",True)
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","CORE","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","CORE","CellHAlignment","Center")
	
	'SKILL
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL","Caption","Skill")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL","MinWidth","155")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL","AllowEdit",True)
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL","ReadOnly",True)
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL","HeaderHAlignment","Left")
	Gui.frmAddTrainings.GsGCSkill.SetColumnProperty("gvTrainSkills","SKILL","CellHAlignment","Left")
	
	Gui.frmAddTrainings.GsGCSkill.ResumeLayout()
	Gui.frmAddTrainings.GsGCSkill.MainView("gvTrainSkills")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.FormatSkillGV.End

Program.Sub.SetContextMenusAddTraining.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmAddTrainings..ContextMenuCreate("CTXADDEMPL")
	Gui.frmAddTrainings.GsGCEmpl.ContextMenuAttach("CTXADDEMPL")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXADDEMPL","Select",0,"Select All")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXADDEMPL","Deselect",0,"Deselect All")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXADDEMPL","Select","MenuClickAddTraining")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXADDEMPL","Deselect","MenuClickAddTraining")
	
	Gui.frmAddTrainings..ContextMenuCreate("CTXADDSKILL")
	Gui.frmAddTrainings.GsGCSkill.ContextMenuAttach("CTXADDSKILL")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXADDSKILL","Select",0,"Select All")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXADDSKILL","Deselect",0,"Deselect All")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXADDSKILL","Select","MenuClickAddTraining")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXADDSKILL","Deselect","MenuClickAddTraining")

	Gui.frmAddTrainings..ContextMenuCreate("CTXNOTES")
	Gui.frmAddTrainings.GsGCNotes.ContextMenuAttach("CTXNOTES")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXNOTES","Add",0,"Add Note")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXNOTES","Delete",0,"Delete Note")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXNOTES","Refresh",0,"Refresh")
	Gui.frmAddTrainings..ContextMenuAddItem("CTXNOTES","Export",0,"Export")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXNOTES","Add","MenuClickNotes")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXNOTES","Delete","MenuClickNotes")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXNOTES","Refresh","MenuClickNotes")
	Gui.frmAddTrainings..ContextMenuSetItemEventHandler("CTXNOTES","Export","MenuClickNotes")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenusAddTraining.End

Program.Sub.MenuClickAddTraining.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sDT.Declare
	
	'Set DataTable Name
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXADDEMPL")
			V.Local.sDT.Set("dtTrainEmpl")
			
		F.Intrinsic.Control.Case("CTXADDSKILL")
			V.Local.sDT.Set("dtTrainSkills")
			
	F.Intrinsic.Control.EndSelect
	
	'Set Value in DataTable
	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("SELECT")
			F.Data.DataTable.SetValue(V.Local.sDT,-1,"SEL",True)
			
		F.Intrinsic.Control.Case("DESELECT")
			F.Data.DataTable.SetValue(V.Local.sDT,-1,"SEL",False)
			
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickAddTraining.End

Program.Sub.MenuClickNotes.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sExt.Declare
	V.Local.sFileExport.Declare
	V.Local.iRow.Declare

	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("ADD")
			'Insert Row, Enable Textbox, Set Cursor in Textbox
			F.Data.DataTable.AddRow("dtTrainNotes","SCHED_NT_ID",0,"SCHED_ID",V.Global.iSchedID,"GS_USER",V.Caller.User,"NOTEDT",V.Ambient.Now)
			Gui.frmAddTrainings.txtNoteID.Text(V.DataTable.dtTrainNotes.RowCount--)
			Gui.frmAddTrainings.cmdSaveNote.Enabled(True)
			Gui.frmAddTrainings.txtNotes.Enabled(True)
			Gui.frmAddTrainings.txtNotes.SetFocus
			
		F.Intrinsic.Control.Case("DELETE")
			'Delete Row, Save to DB, AcceptChanges
			Gui.frmAddTrainings.GsGCNotes.GetSelectedRows("gvTrainNotes",V.Local.iRow)
			F.Data.DataTable.DeleteRow("dtTrainNotes",V.Local.iRow)
			F.Data.DataTable.SaveToDB("dtTrainNotes","con","GAB_5193_SCHED_NOTES","SCHED_NT_ID*!*SCHED_ID")
			F.Data.DataTable.AcceptChanges("dtTrainNotes")
			Gui.frmAddTrainings.txtNoteID.Text("")
			Gui.frmAddTrainings.txtNotes.Text("")
			Gui.frmAddTrainings.cmdSaveNote.Enabled(False)
			Gui.frmAddTrainings.txtNotes.Enabled(False)
			
		F.Intrinsic.Control.Case("REFRESH")
			F.Intrinsic.Control.CallSub(LoadTrainNotes)
			
		F.Intrinsic.Control.Case("EXPORT")
			F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
			F.Intrinsic.Control.If(V.Local.bExcel)
				V.Local.sExt.Set("xlsx")
			F.Intrinsic.Control.Else
				V.Local.sExt.Set("csv")
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("{0}\GAB_5193_EmployeeTrainings_Export.{1}",V.Caller.LocalGssTempDir,V.Local.sExt,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.frmAddTrainings.GsGCNotes.Export(V.Local.sFileExport,V.Local.sExt)
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
			
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickNotes.End

Program.Sub.GsGCNotes_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmAddTrainings.txtNoteID.Text(V.Args.RowIndex)
	Gui.frmAddTrainings.txtNotes.Text(V.DataTable.dtTrainNotes(V.Args.RowIndex).NOTE!FieldVal)
	Gui.frmAddTrainings.cmdSaveNote.Enabled(True)
	Gui.frmAddTrainings.txtNotes.Enabled(True)
	Gui.frmAddTrainings.txtNotes.SetFocus

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCNotes_RowCellClick.End

Program.Sub.LoadTrainNotes.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare

	F.Intrinsic.Control.If(V.DataTable.dtTrainNotes.Exists)
		F.Data.DataTable.Close("dtTrainNotes")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("Select * From GAB_5193_SCHED_NOTES Where SCHED_ID = {0} Order By NOTEDT DESC;",V.Global.iSchedID,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtTrainNotes","con",V.Local.sSQL,True)
	
	F.Intrinsic.Control.CallSub(LoadTrainNotesGV)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadTrainNotes.End

Program.Sub.LoadTrainNotesGV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iCnt.Declare
	V.Local.sColumns.Declare

	'Set and Format Grid
	Gui.frmAddTrainings.GsGCNotes.AddGridViewFromDataTable("gvTrainNotes","dtTrainNotes")
	Gui.frmAddTrainings.GsGCNotes.SuspendLayout()
	Gui.frmAddTrainings.GsGCNotes.SetGridViewProperty("gvTrainNotes","MultiSelect",True)
	Gui.frmAddTrainings.GsGCNotes.SetGridViewProperty("gvTrainNotes","Editable",False)
	Gui.frmAddTrainings.GsGCNotes.SetGridViewProperty("gvTrainNotes","ReadOnly",True)
	Gui.frmAddTrainings.GsGCNotes.SetGridViewProperty("gvTrainNotes","AllowSort",True)
	Gui.frmAddTrainings.GsGCNotes.SetGridViewProperty("gvTrainNotes","AllowFilter",True)
	Gui.frmAddTrainings.GsGCNotes.SetGridViewProperty("gvTrainNotes","OptionsDetailShowDetailTabs",False)
	Gui.frmAddTrainings.GsGCNotes.SetGridViewProperty("gvTrainNotes","OptionsViewShowGroupPanel",False)
	Gui.frmAddTrainings.GsGCNotes.SetGridViewProperty("gvTrainNotes","EnableAppearanceOddRow",True)
	Gui.frmAddTrainings.GsGCNotes.SetGridViewProperty("gvTrainNotes","OptionsFindAlwaysVisible",False)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtTrainNotes.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
		'Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes",V.Local.sColumns(V.Local.iCnt),"HeaderHAlignment","Center")
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'SCHED_NT_ID
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","SCHED_NT_ID","Visible",False)
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","SCHED_NT_ID","Caption","Sched Note ID")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","SCHED_NT_ID","MinWidth","55")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","SCHED_NT_ID","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","SCHED_NT_ID","CellHAlignment","Center")

	'SCHED_ID
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","SCHED_ID","Visible",False)
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","SCHED_ID","Caption","Sched ID")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","SCHED_ID","MinWidth","55")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","SCHED_ID","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","SCHED_ID","CellHAlignment","Center")
	
	'GS_USER
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","GS_USER","Caption","User")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","GS_USER","MinWidth","55")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","GS_USER","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","GS_USER","CellHAlignment","Center")
	
	'NOTEDT
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","NOTEDT","Caption","Date/Time")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","NOTEDT","MinWidth","100")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","NOTEDT","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","NOTEDT","CellHAlignment","Center")
	
	'NOTE
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","NOTE","Caption","Note")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","NOTE","MinWidth","125")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","NOTE","HeaderHAlignment","Left")
	Gui.frmAddTrainings.GsGCNotes.SetColumnProperty("gvTrainNotes","NOTE","CellHAlignment","Left")
	
	Gui.frmAddTrainings.GsGCNotes.ResumeLayout()
	Gui.frmAddTrainings.GsGCNotes.MainView("gvTrainNotes")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadTrainNotesGV.End

Program.Sub.dtpStartDT_Change.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.Screen.frmAddTrainings!dtpEndDT.Value,<,V.Screen.frmAddTrainings!dtpStartDT.Value)
		Gui.frmAddTrainings.dtpEndDT.Value(V.Screen.frmAddTrainings!dtpStartDT.Value)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.dtpStartDT_Change.End

Program.Sub.chkCompl_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkCompl.Value,=,1)
		Gui.frmAddTrainings.dtpComplDT.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.frmAddTrainings.dtpComplDT.Enabled(False)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.chkCompl_Click.End

Program.Sub.cmdSaveNote_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Data.DataTable.SetValue("dtTrainNotes",V.Screen.frmAddTrainings!txtNoteID.Text,"NOTE",V.Screen.frmAddTrainings!txtNotes.Text)
	F.Data.DataTable.SaveToDB("dtTrainNotes","con","GAB_5193_SCHED_NOTES","SCHED_NT_ID*!*SCHED_ID")
	Gui.frmAddTrainings.txtNoteID.Text("")
	Gui.frmAddTrainings.txtNotes.Text("")
	Gui.frmAddTrainings.cmdSaveNote.Enabled(False)
	Gui.frmAddTrainings.txtNotes.Enabled(False)
	F.Intrinsic.Control.CallSub(LoadTrainNotes)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdSaveNote_Click.End

Program.Sub.cmdSaveDocs_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	'Create Dictionaries
	F.Data.Dictionary.CreateFromSQL("dDocTypes","con","Select TYPES,DOC_TYPE_ID From GAB_5193_DOC_TYPE;",4,True)
	'Set Defaults
	F.Data.Dictionary.SetDefaultReturn("dDocTypes",-1)
	'Fill from Dictionaries
	F.Data.DataTable.FillFromDictionary("dtDocs","dDocTypes","TYPES","DOC_TYPE_ID")
	'Close Dictionaires
	F.Data.Dictionary.Close("dDocTypes")
	'Remove Columns
	F.Data.DataTable.RemoveColumn("dtDocs","TYPES")
	'Save Data
	F.Data.DataTable.SaveToDB("dtDocs","con","GAB_5193_SCHED_DOCS","SCHED_DOC_ID")
	'Reload Grid
	F.Intrinsic.Control.CallSub(LoadTrainDocs)
			
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdSaveDocs_Click.End

Program.Sub.GetDocTypes.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.ODBC.Connection!con.ExecuteAndReturn("Select TYPES From GAB_5193_DOC_TYPE Order By TYPES;",V.Global.sDocTypes)
	F.Intrinsic.String.Replace(V.Global.sDocTypes,"#$#","*!*",V.Global.sDocTypes)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GetDocTypes.End

Program.Sub.LoadTrainDocs.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare

	F.Intrinsic.Control.If(V.DataTable.dtDocs.Exists)
		F.Data.DataTable.Close("dtDocs")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("Select * From GAB_5193_SCHED_DOCS Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtDocs","con",V.Local.sSQL,True)
	
	'Add Columns
	F.Data.DataTable.AddColumn("dtDocs","TYPES",String,"")
	'Create Dictionaries
	F.Data.Dictionary.CreateFromSQL("dDocTypes","con","Select DOC_TYPE_ID,TYPES From GAB_5193_DOC_TYPE;")
	'Fill from Dictionaries
	F.Data.DataTable.FillFromDictionary("dtDocs","dDocTypes","DOC_TYPE_ID","TYPES")
	'Close Dictionaires
	F.Data.Dictionary.Close("dDocTypes")
	'Get Doc Types
	F.Intrinsic.Control.CallSub(GetDocTypes)
	'Set Context Menu
	Gui.frmAddTrainings.GsGCAddDocs.ContextMenuAttach("CTXDOCS")
	'Format Gridview
	F.Intrinsic.Control.CallSub(LoadTrainDocsGV)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadTrainDocs.End

Program.Sub.LoadTrainDocsGV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iCnt.Declare
	V.Local.sColumns.Declare

	'Set and Format Grid
	Gui.frmAddTrainings.GsGCAddDocs.AddGridViewFromDataTable("gvDocs","dtDocs")
	Gui.frmAddTrainings.GsGCAddDocs.SuspendLayout()
	Gui.frmAddTrainings.GsGCAddDocs.SetGridViewProperty("gvDocs","MultiSelect",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetGridViewProperty("gvDocs","AllowSort",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetGridViewProperty("gvDocs","AllowFilter",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetGridViewProperty("gvDocs","OptionsDetailShowDetailTabs",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetGridViewProperty("gvDocs","OptionsViewShowGroupPanel",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetGridViewProperty("gvDocs","EnableAppearanceOddRow",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetGridViewProperty("gvDocs","OptionsFindAlwaysVisible",False)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtDocs.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
		'Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs",V.Local.sColumns(V.Local.iCnt),"HeaderHAlignment","Center")
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'SCHED_DOC_ID
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_ID","Visible",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_ID","Caption","Sched Doc ID")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_ID","MinWidth","55")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_ID","AllowEdit",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_ID","ReadOnly",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_ID","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_ID","CellHAlignment","Center")

	'SCHED_ID
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ID","Visible",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ID","Caption","Sched ID")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ID","MinWidth","55")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ID","AllowEdit",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ID","ReadOnly",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ID","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ID","CellHAlignment","Center")
	
	'DOC_TYPE_ID
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","DOC_TYPE_ID","Visible",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","DOC_TYPE_ID","Caption","Doc Type ID")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","DOC_TYPE_ID","MinWidth","55")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","DOC_TYPE_ID","AllowEdit",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","DOC_TYPE_ID","ReadOnly",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","DOC_TYPE_ID","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","DOC_TYPE_ID","CellHAlignment","Center")
	
	'TYPES
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","TYPES","Visible",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","TYPES","VisibleIndex",1)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","TYPES","Caption","Doc Type")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","TYPES","MinWidth","85")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","TYPES","AllowEdit",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","TYPES","ReadOnly",False)
	Gui.frmAddTrainings.GsGCAddDocs.ColumnEdit("gvDocs","TYPES","DROPDOWNLIST",V.Global.sDocTypes)
	
	'SCHED_DOC_PATH
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_PATH","Visible",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_PATH","Caption","File Path")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_PATH","MinWidth","125")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_PATH","AllowEdit",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_PATH","ReadOnly",True)
	
	'SCHED_DOC_TITLE
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_TITLE","Visible",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_TITLE","VisibleIndex",2)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_TITLE","Caption","File Name")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_TITLE","MinWidth","85")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_TITLE","AllowEdit",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_TITLE","ReadOnly",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_TITLE","CellForeColor","Blue")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_TITLE","CellFontUnderline",True)
	
	'SCHED_DOC_REV
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_REV","Visible",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_REV","Caption","Doc Rev")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_REV","MinWidth","55")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_REV","AllowEdit",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_REV","ReadOnly",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_REV","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_DOC_REV","CellHAlignment","Center")
	
	'SCHED_ACTIVE
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ACTIVE","Visible",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ACTIVE","Caption","Active")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ACTIVE","MinWidth","55")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ACTIVE","AllowEdit",False)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ACTIVE","ReadOnly",True)
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ACTIVE","HeaderHAlignment","Center")
	Gui.frmAddTrainings.GsGCAddDocs.SetColumnProperty("gvDocs","SCHED_ACTIVE","CellHAlignment","Center")
	
	Gui.frmAddTrainings.GsGCAddDocs.ResumeLayout()
	Gui.frmAddTrainings.GsGCAddDocs.MainView("gvDocs")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadTrainDocsGV.End

Program.Sub.DragDrop.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iCnt.Declare
	V.Local.sFiles.Declare
	V.Local.sDocPath.Declare
	V.Local.sDocName.Declare
	V.Local.sDocPathNav.Declare
	
	F.Intrinsic.String.Split(V.Args.Files,"*!*",V.Local.sFiles)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sFiles.UBound,1)
		V.Local.sDocPath.Set(V.Local.sFiles(V.Local.iCnt))
		F.Intrinsic.String.Split(V.Local.sDocPath,"\",V.Local.sDocName)
		V.Local.sDocName.Set(V.Local.sDocName(V.Local.sDocName.UBound))
		F.Intrinsic.String.Replace(V.Local.sDocPath,V.Local.sDocName,"",V.Local.sDocPath)
		F.Data.DataTable.AddRow("dtDocs","SCHED_DOC_ID",0,"SCHED_ID",V.Global.iSchedID,"DOC_TYPE_ID",-1,"SCHED_DOC_PATH",V.Local.sDocPath,"SCHED_DOC_TITLE",V.Local.sDocName,"SCHED_DOC_REV",1,"SCHED_ACTIVE",True)
		F.Intrinsic.Control.CallSub(cmdSaveDocs_Click)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.String.Build("{0}{1}",V.Local.sDocPath,V.Local.sDocName,V.Local.sDocPathNav)
	Gui.frmAddTrainings.htmlPrevDoc.Navigate("about:blank")
	Gui.frmAddTrainings.htmlPrevDoc.Navigate(V.Local.sDocPathNav)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.DragDrop.End

Program.Sub.GsGCAddDocs_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sDocPath.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("SCHED_DOC_TITLE")
			F.Intrinsic.Control.If(V.DataTable.dtDocs(V.Args.RowIndex).SCHED_DOC_TITLE!FieldVal,<>,"")
				F.Intrinsic.String.Build("{0}{1}",V.DataTable.dtDocs(V.Args.RowIndex).SCHED_DOC_PATH!FieldVal,V.DataTable.dtDocs(V.Args.RowIndex).SCHED_DOC_TITLE!FieldVal,V.Local.sDocPath)
				Gui.frmAddTrainings.htmlPrevDoc.Navigate("about:blank")
				Gui.frmAddTrainings.htmlPrevDoc.Navigate(V.Local.sDocPath)
			F.Intrinsic.Control.EndIf
			
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCAddDocs_RowCellClick.End

Program.Sub.GetTimeZone.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.bDaylightSavings.Declare
	V.Local.iTime.Declare

	'Set TimeZone
	F.Intrinsic.Date.IsDST(V.Local.bDaylightSavings)
	F.Intrinsic.Date.UTCoffset(V.Local.bDaylightSavings,V.Local.iTime)
	F.Intrinsic.Control.If(V.Local.bDaylightSavings)
		F.Intrinsic.Control.SelectCase(V.Local.iTime)
			F.Intrinsic.Control.Case(-4)
				V.Global.sTimeZone.Set("EASTERN")
			F.Intrinsic.Control.Case(-5)
				V.Global.sTimeZone.Set("CENTRAL")
			F.Intrinsic.Control.Case(-6)
				V.Global.sTimeZone.Set("MOUNTAIN")
			F.Intrinsic.Control.Case(-7)
				V.Global.sTimeZone.Set("PACIFIC")
			F.Intrinsic.Control.CaseElse
				F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.SelectCase(V.Local.iTime)
			F.Intrinsic.Control.Case(-5)
				V.Global.sTimeZone.Set("EASTERN")
			F.Intrinsic.Control.Case(-6)
				V.Global.sTimeZone.Set("CENTRAL")
			F.Intrinsic.Control.Case(-7)
				V.Global.sTimeZone.Set("MOUNTAIN")
			F.Intrinsic.Control.Case(-8)
				V.Global.sTimeZone.Set("PACIFIC")
			F.Intrinsic.Control.CaseElse
				F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GetTimeZone.End

Program.Sub.cmdSaveCourse_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.iCnt.Declare
	V.Local.iCnt2.Declare
	V.Local.sSelect.Declare
	V.Local.iHours.Declare
	V.Local.dStartTime.Declare
	V.Local.dStartDate.Declare
	V.Local.dEndDate.Declare
	V.Local.iRet.Declare
	V.Local.sUserEmail.Declare
	V.Local.sSender.Declare
	V.Local.sSenderName.Declare
	V.Local.sSenderEmail.Declare
	V.Local.sRecipient.Declare
	V.Local.sSubject.Declare
	V.Local.sBody.Declare
	V.Local.sFileName.Declare
	V.Local.sAttachment.Declare
	
	'Check at least one employee is checked
	F.Data.DataTable.Select("dtTrainEmpl","SEL = True",V.Local.sSelect)
	F.Intrinsic.Control.If(V.Local.sSelect.IsNoReturn)
		F.Intrinsic.UI.Msgbox("Please select an Employee.","Save Course")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	'Check Dept is selected
	F.Intrinsic.Control.If(V.Screen.frmAddTrainings!cboDept.Value,=,"")
		F.Intrinsic.UI.Msgbox("Please select a Department.","Save Course")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	'Check Type is selected
	F.Intrinsic.Control.If(V.Screen.frmAddTrainings!cboType.Value,=,"")
		F.Intrinsic.UI.Msgbox("Please select a Type.","Save Course")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	'Check Provider is selected
	F.Intrinsic.Control.If(V.Screen.frmAddTrainings!cboProvider.Value,=,"")
		F.Intrinsic.UI.Msgbox("Please select a Provider.","Save Course")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	'Check Course is selected
	F.Intrinsic.Control.If(V.Screen.frmAddTrainings!cboCourse.Value,=,"")
		F.Intrinsic.UI.Msgbox("Please select a Course.","Save Course")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	'Check Level is selected
	F.Intrinsic.Control.If(V.Screen.frmAddTrainings!cboLevel.Value,=,"")
		F.Intrinsic.UI.Msgbox("Please select a Level.","Save Course")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	'Check Dates
	V.Local.dStartDate.Set(V.Screen.frmAddTrainings!dtpStartDT.Value)
	V.Local.dEndDate.Set(V.Screen.frmAddTrainings!dtpEndDT.Value)
	F.Intrinsic.Control.If(V.Local.dStartDate.DateComp,>,V.Local.dEndDate.DateComp)
		F.Intrinsic.UI.Msgbox("The Start Date must be less than or equal to the End Date.","Save Course")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	'Set Times
	F.Intrinsic.Control.If(V.Screen.frmAddTrainings!cboAMPM.Text,=,AM)
	F.Intrinsic.Control.AndIf(V.Screen.frmAddTrainings!cboHrs.Text,=,"12")
		V.Local.iHours.Set(00)
	F.Intrinsic.Control.ElseIf(V.Screen.frmAddTrainings!cboAMPM.Text,=,PM)
	F.Intrinsic.Control.AndIf(V.Screen.frmAddTrainings!cboHrs.Text,=,12)
		V.Local.iHours.Set(12)
	F.Intrinsic.Control.ElseIf(V.Screen.frmAddTrainings!cboAMPM.Text,=,PM)
		V.Local.iHours.Set(V.Screen.frmAddTrainings!cboHrs.Text)
		F.Intrinsic.Math.Add(V.Local.iHours,12,V.Local.iHours)
	F.Intrinsic.Control.Else
		V.Local.iHours.Set(V.Screen.frmAddTrainings!cboHrs.Text)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Date.TimeSerial(V.Local.iHours,V.Screen.frmAddTrainings!cboMins.Text,0,V.Local.dStartTime)
	F.Intrinsic.Date.CombineDateTime(V.Screen.frmAddTrainings!dtpStartDT.Value,V.Local.dStartTime,V.Local.dStartTime)
	
	F.Intrinsic.Control.If(V.Global.bMulti,=,False)
	'GAB_5193_SCHEDULED
		'Open DataTable
		F.Intrinsic.String.Build("Select * From GAB_5193_SCHEDULED Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtSaveTraining","con",V.Local.sSQL,True)
		'Set Values 
		F.Data.DataTable.SetValue("dtSaveTraining",0,"SCHED_ID",V.Global.iSchedID)
		F.Data.DataTable.SetValue("dtSaveTraining",0,"EMPNO",V.DataTable.dtTrainEmpl(0).EMPNO!FieldValTrim)
		F.Data.DataTable.SetValue("dtSaveTraining",0,"DEPT_ID",V.Screen.frmAddTrainings!cboDept.ItemData)
		F.Data.DataTable.SetValue("dtSaveTraining",0,"COURSE_ID",V.Screen.frmAddTrainings!cboCourse.ItemData)
		F.Data.DataTable.SetValue("dtSaveTraining",0,"TYPE_ID",V.Screen.frmAddTrainings!cboType.ItemData)
		F.Data.DataTable.SetValue("dtSaveTraining",0,"PROVIDER_ID",V.Screen.frmAddTrainings!cboProvider.ItemData)
		F.Data.DataTable.SetValue("dtSaveTraining",0,"LEVEL_ID",V.Screen.frmAddTrainings!cboLevel.ItemData)
		F.Data.DataTable.SetValue("dtSaveTraining",0,"STARTDT",V.Local.dStartTime)
		F.Data.DataTable.SetValue("dtSaveTraining",0,"ENDDT",V.Screen.frmAddTrainings!dtpEndDT.Value)
		F.Data.DataTable.SetValue("dtSaveTraining",0,"HOURS_SCHED",V.Screen.frmAddTrainings!txtHours.Text)
		F.Data.DataTable.SetValue("dtSaveTraining",0,"COURSE_COST",V.Screen.frmAddTrainings!txtCourseCost.Text)
		F.Data.DataTable.SetValue("dtSaveTraining",0,"PRODUCTION_COST",V.Screen.frmAddTrainings!txtProdCost.Text)
		F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkSched.Value,=,1)
			F.Data.DataTable.SetValue("dtSaveTraining",0,"SCHEDULEDDT",V.Ambient.Now)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkCompl.Value,=,1)
			F.Data.DataTable.SetValue("dtSaveTraining",0,"COMPLETEDT",V.Screen.frmAddTrainings!dtpComplDT.Value)
		F.Intrinsic.Control.EndIf
		'Save DataTable to DB
		F.Data.DataTable.SaveToDB("dtSaveTraining","con","GAB_5193_SCHEDULED","SCHED_ID")
		'Close DataTable
		F.Data.DataTable.Close("dtSaveTraining")

	'GAB_5193_SCHED_SKILL
		'Remove all Skills first and then load them back
		F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_SKILL Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		'Open DataTable
		F.Intrinsic.String.Build("Select * From GAB_5193_SCHED_SKILL Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtSaveTrainingSkill","con",V.Local.sSQL,True)
		'Loop through skills and save them
		F.Data.DataTable.Select("dtTrainSkills","SEL = True",V.Local.sSelect)
		F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
			F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
				'Add Rows
				F.Data.DataTable.AddRow("dtSaveTrainingSkill","SCHED_SKL_ID",0,"SCHED_ID",V.Global.iSchedID,"SKILL_ID",V.DataTable.dtTrainSkills(V.Local.sSelect(V.Local.iCnt)).SKILL_ID!FieldVal)
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.EndIf
		'Save DataTable to DB
		F.Data.DataTable.SaveToDB("dtSaveTrainingSkill","con","GAB_5193_SCHED_SKILL","SCHED_SKL_ID*!*SCHED_ID")
		'Close DataTable
		F.Data.DataTable.Close("dtSaveTrainingSkill")
		
		'Create and Email iCal Event -- This will be sent the 1st time scheduled is checked or if there is a change
		F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkSched.Value,=,1)
			F.Intrinsic.Control.If(V.Global.bSched,=,False)
				'Build Subject
				F.Intrinsic.String.Build("Employee Training ({0})",V.Local.dStartTime,V.Local.sSubject)
			F.Intrinsic.Control.ElseIf(V.Global.bSched)
				F.Intrinsic.Control.If(V.Global.bEdit)
					'Build Subject
					F.Intrinsic.String.Build("Employee Training ({0}) -- UPDATE",V.Local.dStartTime,V.Local.sSubject)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
			'Build Body
			F.Intrinsic.String.Build("Training Information:{0}- Department: {1}{0}",V.Ambient.NewLine,V.Screen.frmAddTrainings!cboDept.Value,V.Local.sBody)
			F.Intrinsic.String.Build("{0}- Type: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboType.Value,V.Ambient.NewLine,V.Local.sBody)
			F.Intrinsic.String.Build("{0}- Provider: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboProvider.Value,V.Ambient.NewLine,V.Local.sBody)
			F.Intrinsic.String.Build("{0}- Course: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboCourse.Value,V.Ambient.NewLine,V.Local.sBody)
			F.Intrinsic.String.Build("{0}- Level: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboLevel.Value,V.Ambient.NewLine,V.Local.sBody)
			F.Intrinsic.String.Build("{0}- Start Date/Time: {1}{2}",V.Local.sBody,V.Local.dStartTime,V.Ambient.NewLine,V.Local.sBody)
			F.Intrinsic.String.Build("{0}- Duration (Hrs): {1}",V.Local.sBody,V.Screen.frmAddTrainings!txtHours.Text,V.Local.sBody)
			'Build Sender
			F.Intrinsic.Control.If(V.Screen.frmDefaultEmail!chkCurrentUser.Value,=,0)
				F.Intrinsic.String.Build("{0}*!*{1}",V.Screen.frmDefaultEmail!txtSenderEmail.Text,V.Screen.frmDefaultEmail!txtSenderName.Text,V.Local.sSender)
			F.Intrinsic.Control.Else
				F.Global.Security.GetUsernameFromID(V.Caller.User,V.Local.sSenderName)
				F.Global.Security.GetUserEmail(V.Caller.User,V.Local.sSenderEmail)
				F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sSenderEmail,V.Local.sSelectName,V.Local.sSender)
			F.Intrinsic.Control.EndIf
			'Build Recipients
			F.Intrinsic.String.Build("{0}*!*{1}",V.Global.sEmplName,V.Global.sEmplEmail,V.Local.sRecipient)
			'Calculate End Date
			F.Intrinsic.Date.DateAdd("H",V.Screen.frmAddTrainings!txtHours.Text,V.Local.dStartTime,V.Local.dEndDate)
			
			'Get Time Zone
			F.Intrinsic.Control.CallSub(GetTimeZone)
			
			'Create iCal and Attachment
			F.Intrinsic.String.Build("{0}Employee_Training_{1}.ics",V.Caller.LocalGSSTempDir,V.Local.dStartTime.FormatYYYYMMDD,V.Local.sFileName)
			F.Automation.Groupware.CreateiCalEvent(V.Local.sFileName,V.Local.sSubject,V.Local.sBody,V.Local.dStartTime,V.Local.dEndDate,V.Global.sTimeZone,V.Global.sEmplEmail)
			
			'Create Attachment
			F.Intrinsic.String.Build("Employee_Training_{0}.ics*!*{1}",V.Local.dStartTime.FormatYYYYMMDD,V.Caller.LocalGSSTempDir,V.Local.sAttachment)
			
			'Create Email
			F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkCompl.Value,=,0)
				F.Intrinsic.Control.If(V.Global.sEmplEmail,=,"")
					F.Intrinsic.UI.Msgbox("No email will be sent, because the selected employee does not have an email setup.","No Email")
				F.Intrinsic.Control.Else
					F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,0,"",V.Local.sSubject,V.Local.sSender,V.Local.sRecipient,V.Local.sBody,5,"",False,"","","","","","","",V.Local.sAttachment,True)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		'Finish
		F.Intrinsic.Control.If(V.Global.bEdit)
			'Close Screen and refresh data
			F.Intrinsic.Control.CallSub(frmAddTrainings_UnLoad)
			F.Intrinsic.Control.CallSub(LoadEmplTrainings)
		F.Intrinsic.Control.Else
			'Reserve new Sched_ID
			F.ODBC.Connection!con.Execute("Insert Into GAB_5193_SCHEDULED(SCHED_ID) Values(0);")
			F.ODBC.Connection!con.ExecuteAndReturn("Select MAX(SCHED_ID) From GAB_5193_SCHEDULED;",V.Global.iSchedID)
			'Reset Screen
			F.Intrinsic.Control.CallSub(LoadAddTrainings)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		'Save MULTI
		F.Intrinsic.Control.If(V.Global.bEdit,=,False)
			F.Data.DataTable.Select("dtTrainEmpl","SEL = True",V.Local.sSelect)
			F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
				F.Data.DataTable.Create("dtSchedIDs")
				F.Data.DataTable.AddColumn("dtSchedIDs","SCHED_ID",Long)
				F.Data.DataTable.AddColumn("dtSchedIDs","EMPNO",String)
				F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
				F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
					F.Intrinsic.String.Build("Insert Into GAB_5193_SCHEDULED(SCHED_ID,EMPNO) Values(0,'{0}');",V.DataTable.dtTrainEmpl(V.Local.sSelect(V.Local.iCnt)).EMPNO!FieldVal,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					F.Intrinsic.String.Build("Select MAX(SCHED_ID) From GAB_5193_SCHEDULED Where EMPNO = '{0}';",V.DataTable.dtTrainEmpl(V.Local.sSelect(V.Local.iCnt)).EMPNO!FieldVal,V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.iRet)
					F.Data.DataTable.AddRow("dtSchedIDs","SCHED_ID",V.Local.iRet,"EMPNO",V.DataTable.dtTrainEmpl(V.Local.sSelect(V.Local.iCnt)).EMPNO!FieldVal)
				F.Intrinsic.Control.Next(V.Local.iCnt)
				'Loop through data to save new data
				F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtSchedIDs.RowCount--,1)
					'GAB_5193_SCHEDULED
						'Open DataTable
						F.Intrinsic.String.Build("Select * From GAB_5193_SCHEDULED Where SCHED_ID = {0};",V.DataTable.dtSchedIDs(V.Local.iCnt).SCHED_ID!FieldVal,V.Local.sSQL)
						F.Data.DataTable.CreateFromSQL("dtSaveTraining","con",V.Local.sSQL,True)
						'Set Values 
						F.Data.DataTable.SetValue("dtSaveTraining",0,"SCHED_ID",V.DataTable.dtSchedIDs(V.Local.iCnt).SCHED_ID!FieldVal)
						F.Data.DataTable.SetValue("dtSaveTraining",0,"EMPNO",V.DataTable.dtSchedIDs(V.Local.iCnt).EMPNO!FieldVal)
						F.Data.DataTable.SetValue("dtSaveTraining",0,"DEPT_ID",V.Screen.frmAddTrainings!cboDept.ItemData)
						F.Data.DataTable.SetValue("dtSaveTraining",0,"COURSE_ID",V.Screen.frmAddTrainings!cboCourse.ItemData)
						F.Data.DataTable.SetValue("dtSaveTraining",0,"TYPE_ID",V.Screen.frmAddTrainings!cboType.ItemData)
						F.Data.DataTable.SetValue("dtSaveTraining",0,"PROVIDER_ID",V.Screen.frmAddTrainings!cboProvider.ItemData)
						F.Data.DataTable.SetValue("dtSaveTraining",0,"LEVEL_ID",V.Screen.frmAddTrainings!cboLevel.ItemData)
						F.Data.DataTable.SetValue("dtSaveTraining",0,"STARTDT",V.Local.dStartTime)
						F.Data.DataTable.SetValue("dtSaveTraining",0,"ENDDT",V.Screen.frmAddTrainings!dtpEndDT.Value)
						F.Data.DataTable.SetValue("dtSaveTraining",0,"HOURS_SCHED",V.Screen.frmAddTrainings!txtHours.Text)
						F.Data.DataTable.SetValue("dtSaveTraining",0,"COURSE_COST",V.Screen.frmAddTrainings!txtCourseCost.Text)
						F.Data.DataTable.SetValue("dtSaveTraining",0,"PRODUCTION_COST",V.Screen.frmAddTrainings!txtProdCost.Text)
						F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkSched.Value,=,1)
							F.Data.DataTable.SetValue("dtSaveTraining",0,"SCHEDULEDDT",V.Ambient.Now)
						F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkCompl.Value,=,1)
							F.Data.DataTable.SetValue("dtSaveTraining",0,"COMPLETEDT",V.Screen.frmAddTrainings!dtpComplDT.Value)
						F.Intrinsic.Control.EndIf
						'Save DataTable to DB
						F.Data.DataTable.SaveToDB("dtSaveTraining","con","GAB_5193_SCHEDULED","SCHED_ID")
						'Close DataTable
						F.Data.DataTable.Close("dtSaveTraining")
				
					'GAB_5193_SCHED_SKILL
						'Remove all Skills first and then load them back
						F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_SKILL Where SCHED_ID = {0};",V.DataTable.dtSchedIDs(V.Local.iCnt).SCHED_ID!FieldVal,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						'Open DataTable
						F.Intrinsic.String.Build("Select * From GAB_5193_SCHED_SKILL Where SCHED_ID = {0};",V.DataTable.dtSchedIDs(V.Local.iCnt).SCHED_ID!FieldVal,V.Local.sSQL)
						F.Data.DataTable.CreateFromSQL("dtSaveTrainingSkill","con",V.Local.sSQL,True)
						'Loop through skills and save them
						F.Data.DataTable.Select("dtTrainSkills","SEL = True",V.Local.sSelect)
						F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
							F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
							F.Intrinsic.Control.For(V.Local.iCnt2,0,V.Local.sSelect.UBound,1)
								'Add Rows
								F.Data.DataTable.AddRow("dtSaveTrainingSkill","SCHED_SKL_ID",0,"SCHED_ID",V.DataTable.dtSchedIDs(V.Local.iCnt).SCHED_ID!FieldVal,"SKILL_ID",V.DataTable.dtTrainSkills(V.Local.sSelect(V.Local.iCnt2)).SKILL_ID!FieldVal)
							F.Intrinsic.Control.Next(V.Local.iCnt2)
						F.Intrinsic.Control.EndIf
						'Save DataTable to DB
						F.Data.DataTable.SaveToDB("dtSaveTrainingSkill","con","GAB_5193_SCHED_SKILL","SCHED_SKL_ID*!*SCHED_ID")
						'Close DataTable
						F.Data.DataTable.Close("dtSaveTrainingSkill")
						
					'GAB_5193_SCHED_NOTES
						'Copy Notes from Stored Sched_ID
						'Pull Data
						F.Intrinsic.String.Build("Select * From GAB_5193_SCHED_NOTES Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
						F.Data.DataTable.CreateFromSQL("dtSaveTrainingNotes","con",V.Local.sSQL,True)
						'SetValue
						F.Data.DataTable.SetValue("dtSaveTrainingNotes",-1,"SCHED_ID",V.DataTable.dtSchedIDs(V.Local.iCnt).SCHED_ID!FieldVal)
						'AcceptChanges
						F.Data.DataTable.AcceptChanges("dtSaveTrainingNotes")
						'SaveToDB
						F.Data.DataTable.SaveToDB("dtSaveTrainingNotes","con","GAB_5193_SCHED_NOTES","SCHED_NT_ID*!*SCHED_ID",256)
						'Close DataTable
						F.Data.DataTable.Close("dtSaveTrainingNotes")
						
					'GAB_5193_SCHED_DOCS
						'Copy Notes from Stored Sched_ID
						'Pull Data
						F.Intrinsic.String.Build("Select * From GAB_5193_SCHED_DOCS Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
						F.Data.DataTable.CreateFromSQL("dtSaveTrainingDocs","con",V.Local.sSQL,True)
						'SetValue
						F.Data.DataTable.SetValue("dtSaveTrainingDocs",-1,"SCHED_ID",V.DataTable.dtSchedIDs(V.Local.iCnt).SCHED_ID!FieldVal)
						'AcceptChanges
						F.Data.DataTable.AcceptChanges("dtSaveTrainingDocs")
						'SaveToDB
						F.Data.DataTable.SaveToDB("dtSaveTrainingDocs","con","GAB_5193_SCHED_DOCS","SCHED_DOC_ID*!*SCHED_ID",256)
						'Close DataTable
						F.Data.DataTable.Close("dtSaveTrainingDocs")
						
					'Create and Email iCal Event -- This will be sent the 1st time scheduled is checked or if there is a change
					F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkSched.Value,=,1)
						F.Intrinsic.Control.If(V.Global.bSched,=,False)
							'Build Subject
							F.Intrinsic.String.Build("Employee Training ({0})",V.Local.dStartTime,V.Local.sSubject)
						F.Intrinsic.Control.ElseIf(V.Global.bSched)
							F.Intrinsic.Control.If(V.Global.bEdit)
								'Build Subject
								F.Intrinsic.String.Build("Employee Training ({0}) -- UPDATE",V.Local.dStartTime,V.Local.sSubject)
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.EndIf
						
						'Build Body
						F.Intrinsic.String.Build("Training Information:{0}- Department: {1}{0}",V.Ambient.NewLine,V.Screen.frmAddTrainings!cboDept.Value,V.Local.sBody)
						F.Intrinsic.String.Build("{0}- Type: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboType.Value,V.Ambient.NewLine,V.Local.sBody)
						F.Intrinsic.String.Build("{0}- Provider: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboProvider.Value,V.Ambient.NewLine,V.Local.sBody)
						F.Intrinsic.String.Build("{0}- Course: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboCourse.Value,V.Ambient.NewLine,V.Local.sBody)
						F.Intrinsic.String.Build("{0}- Level: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboLevel.Value,V.Ambient.NewLine,V.Local.sBody)
						F.Intrinsic.String.Build("{0}- Start Date/Time: {1}{2}",V.Local.sBody,V.Local.dStartTime,V.Ambient.NewLine,V.Local.sBody)
						F.Intrinsic.String.Build("{0}- Duration (Hrs): {1}",V.Local.sBody,V.Screen.frmAddTrainings!txtHours.Text,V.Local.sBody)
						'Build Sender
						F.Intrinsic.Control.If(V.Screen.frmDefaultEmail!chkCurrentUser.Value,=,0)
							F.Intrinsic.String.Build("{0}*!*{1}",V.Screen.frmDefaultEmail!txtSenderEmail.Text,V.Screen.frmDefaultEmail!txtSenderName.Text,V.Local.sSender)
						F.Intrinsic.Control.Else
							F.Global.Security.GetUsernameFromID(V.Caller.User,V.Local.sSenderName)
							F.Global.Security.GetUserEmail(V.Caller.User,V.Local.sSenderEmail)
							F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sSenderEmail,V.Local.sSelectName,V.Local.sSender)
						F.Intrinsic.Control.EndIf
						'Build Recipients
						F.Intrinsic.String.Build("Select Name,Email_Addr From Employee_Mstr Where Employee = '{0}';",V.DataTable.dtSchedIDs(V.Local.iCnt).EMPNO!FieldVal,V.Local.sSQL)
						F.Data.DataTable.CreateFromSQL("dtRcpt","con",V.Local.sSQL,True)
						V.Global.sEmplName.Set(V.DataTable.dtRcpt(0).Name!FieldValTrim)
						V.Global.sEmplEmail.Set(V.DataTable.dtRcpt(0).Email_Addr!FieldValTrim)
						F.Data.DataTable.Close("dtRcpt")
						F.Intrinsic.String.Build("{0}*!*{1}",V.Global.sEmplName,V.Global.sEmplEmail,V.Local.sRecipient)
						'Calculate End Date
						F.Intrinsic.Date.DateAdd("H",V.Screen.frmAddTrainings!txtHours.Text,V.Local.dStartTime,V.Local.dEndDate)
						
						'Get Time Zone
						F.Intrinsic.Control.CallSub(GetTimeZone)
						
						'Create iCal and Attachment
						F.Intrinsic.String.Build("{0}Employee_Training_{1}.ics",V.Caller.LocalGSSTempDir,V.Local.dStartTime.FormatYYYYMMDD,V.Local.sFileName)
						F.Automation.Groupware.CreateiCalEvent(V.Local.sFileName,V.Local.sSubject,V.Local.sBody,V.Local.dStartTime,V.Local.dEndDate,V.Global.sTimeZone,V.Global.sEmplEmail)
						
						'Create Attachment
						F.Intrinsic.String.Build("Employee_Training_{0}.ics*!*{1}",V.Local.dStartTime.FormatYYYYMMDD,V.Caller.LocalGSSTempDir,V.Local.sAttachment)
						
						'Create Email
						F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkCompl.Value,=,0)
							F.Intrinsic.Control.If(V.Global.sEmplEmail,=,"")
								F.Intrinsic.UI.Msgbox("No email will be sent, because the selected employee does not have an email setup.","No Email")
							F.Intrinsic.Control.Else
								F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,0,"",V.Local.sSubject,V.Local.sSender,V.Local.sRecipient,V.Local.sBody,5,"",False,"","","","","","","",V.Local.sAttachment,True)
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Next(V.Local.iCnt)
				
				'Close Screen and refresh data
				F.Intrinsic.Control.CallSub(frmAddTrainings_UnLoad)
				F.Intrinsic.Control.CallSub(LoadEmplTrainingsMulti)
				F.ODBC.Connection!con.Execute("Delete From GAB_5193_SCHEDULED Where EMPNO = '' Or EMPNO Is Null;")
				'Delete unused notes
				F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_NOTES Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				'Close DataTable
				F.Data.DataTable.Close("dtSchedIDs")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			'Single - Update/Edit------------------------------------------------------------------------------------------------------
			'GAB_5193_SCHEDULED
				'Open DataTable
				F.Intrinsic.String.Build("Select * From GAB_5193_SCHEDULED Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
				F.Data.DataTable.CreateFromSQL("dtSaveTraining","con",V.Local.sSQL,True)
				'Set Values 
				F.Data.DataTable.SetValue("dtSaveTraining",0,"SCHED_ID",V.Global.iSchedID)
				F.Data.DataTable.SetValue("dtSaveTraining",0,"EMPNO",V.DataTable.dtTrainEmpl(0).EMPNO!FieldValTrim)
				F.Data.DataTable.SetValue("dtSaveTraining",0,"DEPT_ID",V.Screen.frmAddTrainings!cboDept.ItemData)
				F.Data.DataTable.SetValue("dtSaveTraining",0,"COURSE_ID",V.Screen.frmAddTrainings!cboCourse.ItemData)
				F.Data.DataTable.SetValue("dtSaveTraining",0,"TYPE_ID",V.Screen.frmAddTrainings!cboType.ItemData)
				F.Data.DataTable.SetValue("dtSaveTraining",0,"PROVIDER_ID",V.Screen.frmAddTrainings!cboProvider.ItemData)
				F.Data.DataTable.SetValue("dtSaveTraining",0,"LEVEL_ID",V.Screen.frmAddTrainings!cboLevel.ItemData)
				F.Data.DataTable.SetValue("dtSaveTraining",0,"STARTDT",V.Local.dStartTime)
				F.Data.DataTable.SetValue("dtSaveTraining",0,"ENDDT",V.Screen.frmAddTrainings!dtpEndDT.Value)
				F.Data.DataTable.SetValue("dtSaveTraining",0,"HOURS_SCHED",V.Screen.frmAddTrainings!txtHours.Text)
				F.Data.DataTable.SetValue("dtSaveTraining",0,"COURSE_COST",V.Screen.frmAddTrainings!txtCourseCost.Text)
				F.Data.DataTable.SetValue("dtSaveTraining",0,"PRODUCTION_COST",V.Screen.frmAddTrainings!txtProdCost.Text)
				F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkSched.Value,=,1)
					F.Data.DataTable.SetValue("dtSaveTraining",0,"SCHEDULEDDT",V.Ambient.Now)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkCompl.Value,=,1)
					F.Data.DataTable.SetValue("dtSaveTraining",0,"COMPLETEDT",V.Screen.frmAddTrainings!dtpComplDT.Value)
				F.Intrinsic.Control.EndIf
				'Save DataTable to DB
				F.Data.DataTable.SaveToDB("dtSaveTraining","con","GAB_5193_SCHEDULED","SCHED_ID")
				'Close DataTable
				F.Data.DataTable.Close("dtSaveTraining")
		
			'GAB_5193_SCHED_SKILL
				'Remove all Skills first and then load them back
				F.Intrinsic.String.Build("Delete From GAB_5193_SCHED_SKILL Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				'Open DataTable
				F.Intrinsic.String.Build("Select * From GAB_5193_SCHED_SKILL Where SCHED_ID = {0};",V.Global.iSchedID,V.Local.sSQL)
				F.Data.DataTable.CreateFromSQL("dtSaveTrainingSkill","con",V.Local.sSQL,True)
				'Loop through skills and save them
				F.Data.DataTable.Select("dtTrainSkills","SEL = True",V.Local.sSelect)
				F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
					F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
					F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
						'Add Rows
						F.Data.DataTable.AddRow("dtSaveTrainingSkill","SCHED_SKL_ID",0,"SCHED_ID",V.Global.iSchedID,"SKILL_ID",V.DataTable.dtTrainSkills(V.Local.sSelect(V.Local.iCnt)).SKILL_ID!FieldVal)
					F.Intrinsic.Control.Next(V.Local.iCnt)
				F.Intrinsic.Control.EndIf
				'Save DataTable to DB
				F.Data.DataTable.SaveToDB("dtSaveTrainingSkill","con","GAB_5193_SCHED_SKILL","SCHED_SKL_ID*!*SCHED_ID")
				'Close DataTable
				F.Data.DataTable.Close("dtSaveTrainingSkill")
				
				'Create and Email iCal Event -- This will be sent the 1st time scheduled is checked or if there is a change
				F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkSched.Value,=,1)
					F.Intrinsic.Control.If(V.Global.bSched,=,False)
						'Build Subject
						F.Intrinsic.String.Build("Employee Training ({0})",V.Local.dStartTime,V.Local.sSubject)
					F.Intrinsic.Control.ElseIf(V.Global.bSched)
						F.Intrinsic.Control.If(V.Global.bEdit)
							'Build Subject
							F.Intrinsic.String.Build("Employee Training ({0}) -- UPDATE",V.Local.dStartTime,V.Local.sSubject)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
					
					'Build Body
					F.Intrinsic.String.Build("Training Information:{0}- Department: {1}{0}",V.Ambient.NewLine,V.Screen.frmAddTrainings!cboDept.Value,V.Local.sBody)
					F.Intrinsic.String.Build("{0}- Type: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboType.Value,V.Ambient.NewLine,V.Local.sBody)
					F.Intrinsic.String.Build("{0}- Provider: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboProvider.Value,V.Ambient.NewLine,V.Local.sBody)
					F.Intrinsic.String.Build("{0}- Course: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboCourse.Value,V.Ambient.NewLine,V.Local.sBody)
					F.Intrinsic.String.Build("{0}- Level: {1}{2}",V.Local.sBody,V.Screen.frmAddTrainings!cboLevel.Value,V.Ambient.NewLine,V.Local.sBody)
					F.Intrinsic.String.Build("{0}- Start Date/Time: {1}{2}",V.Local.sBody,V.Local.dStartTime,V.Ambient.NewLine,V.Local.sBody)
					F.Intrinsic.String.Build("{0}- Duration (Hrs): {1}",V.Local.sBody,V.Screen.frmAddTrainings!txtHours.Text,V.Local.sBody)
					'Build Sender
					F.Intrinsic.Control.If(V.Screen.frmDefaultEmail!chkCurrentUser.Value,=,0)
						F.Intrinsic.String.Build("{0}*!*{1}",V.Screen.frmDefaultEmail!txtSenderEmail.Text,V.Screen.frmDefaultEmail!txtSenderName.Text,V.Local.sSender)
					F.Intrinsic.Control.Else
						F.Global.Security.GetUsernameFromID(V.Caller.User,V.Local.sSenderName)
						F.Global.Security.GetUserEmail(V.Caller.User,V.Local.sSenderEmail)
						F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sSenderEmail,V.Local.sSelectName,V.Local.sSender)
					F.Intrinsic.Control.EndIf
					'Build Recipients
					F.Intrinsic.String.Build("Select Name,Email_Addr From Employee_Mstr Where Employee = '{0}';",V.DataTable.dtTrainEmpl(0).EMPNO!FieldValTrim,V.Local.sSQL)
					F.Data.DataTable.CreateFromSQL("dtRcpt","con",V.Local.sSQL,True)
					V.Global.sEmplName.Set(V.DataTable.dtRcpt(0).Name!FieldValTrim)
					V.Global.sEmplEmail.Set(V.DataTable.dtRcpt(0).Email_Addr!FieldValTrim)
					F.Data.DataTable.Close("dtRcpt")
					F.Intrinsic.String.Build("{0}*!*{1}",V.Global.sEmplName,V.Global.sEmplEmail,V.Local.sRecipient)
					'Calculate End Date
					F.Intrinsic.Date.DateAdd("H",V.Screen.frmAddTrainings!txtHours.Text,V.Local.dStartTime,V.Local.dEndDate)
					
					'Get Time Zone
					F.Intrinsic.Control.CallSub(GetTimeZone)
					
					'Create iCal and Attachment
					F.Intrinsic.String.Build("{0}Employee_Training_{1}.ics",V.Caller.LocalGSSTempDir,V.Local.dStartTime.FormatYYYYMMDD,V.Local.sFileName)
					F.Automation.Groupware.CreateiCalEvent(V.Local.sFileName,V.Local.sSubject,V.Local.sBody,V.Local.dStartTime,V.Local.dEndDate,V.Global.sTimeZone,V.Global.sEmplEmail)
					
					'Create Attachment
					F.Intrinsic.String.Build("Employee_Training_{0}.ics*!*{1}",V.Local.dStartTime.FormatYYYYMMDD,V.Caller.LocalGSSTempDir,V.Local.sAttachment)
					
					'Create Email
					F.Intrinsic.Control.If(V.Screen.frmAddTrainings!chkCompl.Value,=,0)
						F.Intrinsic.Control.If(V.Global.sEmplEmail,=,"")
							F.Intrinsic.UI.Msgbox("No email will be sent, because the selected employee does not have an email setup.","No Email")
						F.Intrinsic.Control.Else
							F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,0,"",V.Local.sSubject,V.Local.sSender,V.Local.sRecipient,V.Local.sBody,5,"",False,"","","","","","","",V.Local.sAttachment,True)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
				'Finish
				'Close Screen and refresh data
				F.Intrinsic.Control.CallSub(frmAddTrainings_UnLoad)
				F.Intrinsic.Control.CallSub(LoadEmplTrainingsMulti)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdSaveCourse_Click.End

Program.Sub.cmdDefaultSenderEmail_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmDefaultEmail..Show

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdDefaultSenderEmail_Click.End

Program.Sub.frmTrainingMulti_UnLoad.Start
 	F.Intrinsic.Control.Try
 	V.Local.sError.Declare
 	
 	F.Intrinsic.Control.If(V.Global.bLoadDataEmplTrainMulti)
		F.Intrinsic.Control.CallSub(SerializeEmplTrainMulti)
	F.Intrinsic.Control.EndIf
 
 	Gui.frmTrainingMulti..Visible(False)
 	
 	'Show Main
 	Gui.frmEmployees..Visible(True)
 
 	F.Intrinsic.Control.Catch
 		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
 		F.Intrinsic.UI.Msgbox(V.Local.sError)
 		F.Intrinsic.Control.End 
 	F.Intrinsic.Control.EndTry
Program.Sub.frmTrainingMulti_UnLoad.End

Program.Sub.EmplTrainingsMulti.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sDefaultPic.Declare
	V.Local.dDate.Declare
	V.Local.sDate.Declare
	V.Local.sSQL.Declare
	
'	F.Intrinsic.Control.CallSub(LoadEmplTrainingsMulti)
	
	'Show Screen
	Gui.frmTrainingMulti..Show
	
	'Hide Main Screen
	Gui.frmEmployees..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.EmplTrainingsMulti.End

Program.Sub.LoadEmplTrainingsMulti.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	V.Local.dStartDate.Declare
	V.Local.dEndDate.Declare
	
	V.Local.dStartDate.Set(V.Screen.frmTrainingMulti!dtpStartDT.Value)
	F.Intrinsic.Date.DateAdd("D",1,V.Screen.frmTrainingMulti!dtpEndDT.Value,V.Local.dEndDate)
	F.Intrinsic.Control.If(V.Local.dStartDate,>,V.Local.dEndDate)
		F.Intrinsic.UI.Msgbox("Start Date needs to be before the End Date.","Trainings")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Global.bLoadDataEmplTrainMulti)
		F.Intrinsic.Control.CallSub(SerializeEmplTrainMulti)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.DataTable.dtEmplTrainingsMulti.Exists)
		F.Data.DataTable.Close("dtEmplTrainingsMulti")
	F.Intrinsic.Control.EndIf
	
	Gui.frmTrainingMulti.lblStatus.Visible(True)
	
	F.Intrinsic.Control.SelectCase(V.Screen.frmTrainingMulti!ddlFilter.ItemData)
		F.Intrinsic.Control.Case(0)
			'All Records
			F.Intrinsic.String.Build("Select A.SCHED_ID,A.EMPNO,RTRIM(B.NAME) As NAME,C.FIRST,C.LAST,D.DEPARTMENT,E.COURSE_NAME,F.COURSE_TYPE,G.PROVIDER_NAME+' | '+CASE WHEN G.PROVIDER_ADDRESS IS NULL THEN '' ELSE G.PROVIDER_ADDRESS END As PROVIDER_NAME,H.LEVEL_NAME,A.STARTDT,A.ENDDT,A.HOURS_SCHED,A.COURSE_COST,A.PRODUCTION_COST,A.SCHEDULEDDT,Cast(Case When A.SCHEDULEDDT Is Null Then 0 Else 1 End As Bit) As SCHEDULED,A.COMPLETEDT,Cast(Case When A.COMPLETEDT Is Null Then 0 Else 1 End As Bit) As COMPLETED,E.COURSE_ID From GAB_5193_SCHEDULED A Left Join V_EMPLOYEE_MSTR B On A.EMPNO = B.EMPLOYEE Left Join V_PYRL_EMP_NAME C On B.EMPLOYEE = C.EMPL Left Join GAB_5193_DEPTS D On A.DEPT_ID = D.DEPT_ID Left Join GAB_5193_COURSES E On A.COURSE_ID = E.COURSE_ID Left Join GAB_5193_COURSE_TYPE F On A.TYPE_ID = F.TYPE_ID Left Join GAB_5193_PROVIDERS G On A.PROVIDER_ID = G.PROVIDER_ID Left Join GAB_5193_LEVELS H On A.LEVEL_ID = H.LEVEL_ID Where A.STARTDT Between '{0}' And '{1}' Order By B.NAME,A.STARTDT;",V.Local.dStartDate.PervasiveDate,V.Local.dEndDate.PervasiveDate,V.Local.sSQL)
			
		F.Intrinsic.Control.Case(1)
			'Scheduled
			F.Intrinsic.String.Build("Select A.SCHED_ID,A.EMPNO,RTRIM(B.NAME) As NAME,C.FIRST,C.LAST,D.DEPARTMENT,E.COURSE_NAME,F.COURSE_TYPE,G.PROVIDER_NAME+' | '+CASE WHEN G.PROVIDER_ADDRESS IS NULL THEN '' ELSE G.PROVIDER_ADDRESS END As PROVIDER_NAME,H.LEVEL_NAME,A.STARTDT,A.ENDDT,A.HOURS_SCHED,A.COURSE_COST,A.PRODUCTION_COST,A.SCHEDULEDDT,Cast(Case When A.SCHEDULEDDT Is Null Then 0 Else 1 End As Bit) As SCHEDULED,A.COMPLETEDT,Cast(Case When A.COMPLETEDT Is Null Then 0 Else 1 End As Bit) As COMPLETED,E.COURSE_ID From GAB_5193_SCHEDULED A Left Join V_EMPLOYEE_MSTR B On A.EMPNO = B.EMPLOYEE Left Join V_PYRL_EMP_NAME C On B.EMPLOYEE = C.EMPL Left Join GAB_5193_DEPTS D On A.DEPT_ID = D.DEPT_ID Left Join GAB_5193_COURSES E On A.COURSE_ID = E.COURSE_ID Left Join GAB_5193_COURSE_TYPE F On A.TYPE_ID = F.TYPE_ID Left Join GAB_5193_PROVIDERS G On A.PROVIDER_ID = G.PROVIDER_ID Left Join GAB_5193_LEVELS H On A.LEVEL_ID = H.LEVEL_ID Where A.STARTDT Between '{0}' And '{1}' And A.SCHEDULEDDT Is Not Null Order By B.NAME,A.STARTDT;",V.Local.dStartDate.PervasiveDate,V.Local.dEndDate.PervasiveDate,V.Local.sSQL)
			
		F.Intrinsic.Control.Case(2)
			'Completed
			F.Intrinsic.String.Build("Select A.SCHED_ID,A.EMPNO,RTRIM(B.NAME) As NAME,C.FIRST,C.LAST,D.DEPARTMENT,E.COURSE_NAME,F.COURSE_TYPE,G.PROVIDER_NAME+' | '+CASE WHEN G.PROVIDER_ADDRESS IS NULL THEN '' ELSE G.PROVIDER_ADDRESS END As PROVIDER_NAME,H.LEVEL_NAME,A.STARTDT,A.ENDDT,A.HOURS_SCHED,A.COURSE_COST,A.PRODUCTION_COST,A.SCHEDULEDDT,Cast(Case When A.SCHEDULEDDT Is Null Then 0 Else 1 End As Bit) As SCHEDULED,A.COMPLETEDT,Cast(Case When A.COMPLETEDT Is Null Then 0 Else 1 End As Bit) As COMPLETED,E.COURSE_ID From GAB_5193_SCHEDULED A Left Join V_EMPLOYEE_MSTR B On A.EMPNO = B.EMPLOYEE Left Join V_PYRL_EMP_NAME C On B.EMPLOYEE = C.EMPL Left Join GAB_5193_DEPTS D On A.DEPT_ID = D.DEPT_ID Left Join GAB_5193_COURSES E On A.COURSE_ID = E.COURSE_ID Left Join GAB_5193_COURSE_TYPE F On A.TYPE_ID = F.TYPE_ID Left Join GAB_5193_PROVIDERS G On A.PROVIDER_ID = G.PROVIDER_ID Left Join GAB_5193_LEVELS H On A.LEVEL_ID = H.LEVEL_ID Where A.STARTDT Between '{0}' And '{1}' And A.COMPLETEDT Is Not Null Order By B.NAME,A.STARTDT;",V.Local.dStartDate.PervasiveDate,V.Local.dEndDate.PervasiveDate,V.Local.sSQL)
			
	F.Intrinsic.Control.EndSelect
	
	F.Data.DataTable.CreateFromSQL("dtEmplTrainingsMulti","con",V.Local.sSQL,True)
	V.Global.bLoadDataEmplTrainMulti.Set(True)
	
	F.Intrinsic.Control.CallSub(LoadEmplTrainingsMultiGV)
	F.Intrinsic.Control.CallSub(DeserializeEmplTrainMulti)
	
	Gui.frmTrainingMulti.lblStatus.Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadEmplTrainingsMulti.End

Program.Sub.LoadEmplTrainingsMultiGV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sValues.Declare
	V.Local.iCnt.Declare
	V.Local.sColumns.Declare
	
	'Set and Format Grid
	Gui.frmTrainingMulti.GsGCCoursesMulti.AddGridViewFromDataTable("gvEmplTrainingsMulti","dtEmplTrainingsMulti")
	Gui.frmTrainingMulti.GsGCCoursesMulti.Icon(V.Global.sGsGCIcon)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SuspendLayout()
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetGridViewProperty("gvEmplTrainingsMulti","MultiSelect",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetGridViewProperty("gvEmplTrainingsMulti","AllowSort",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetGridViewProperty("gvEmplTrainingsMulti","AllowFilter",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetGridViewProperty("gvEmplTrainingsMulti","OptionsDetailShowDetailTabs",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetGridViewProperty("gvEmplTrainingsMulti","OptionsViewShowGroupPanel",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetGridViewProperty("gvEmplTrainingsMulti","EnableAppearanceOddRow",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetGridViewProperty("gvEmplTrainingsMulti","OptionsFindAlwaysVisible",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetGridViewProperty("gvEmplTrainingsMulti","OptionsViewShowAutoFilterRow",True)

	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtEmplTrainingsMulti.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
		'Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti",V.Local.sColumns(V.Local.iCnt),"HeaderHAlignment","Center")
	F.Intrinsic.Control.Next(V.Local.iCnt)

	'SCHED_ID
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHED_ID","Visible",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHED_ID","Caption","Sched ID")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHED_ID","MinWidth","65")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHED_ID","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHED_ID","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHED_ID","HeaderHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHED_ID","CellHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.AddSummaryItem("gvEmplTrainingsMulti","SCHED_ID","SCHED_ID","COUNT","Count: ","",n0)
	
	'EMPNO
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","EMPNO","Caption","Employee No.")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","EMPNO","MinWidth","85")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","EMPNO","AllowEdit",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","EMPNO","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","EMPNO","HeaderHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","EMPNO","CellHAlignment","Center")

	'NAME
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","NAME","Caption","Employee Name")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","NAME","MinWidth","130")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","NAME","AllowEdit",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","NAME","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","NAME","HeaderHAlignment","Left")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","NAME","CellHAlignment","Left")

	'FIRST
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","FIRST","Caption","First Name")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","FIRST","MinWidth","130")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","FIRST","AllowEdit",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","FIRST","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","FIRST","HeaderHAlignment","Left")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","FIRST","CellHAlignment","Left")

	'LAST
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LAST","Caption","Last Name")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LAST","MinWidth","130")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LAST","AllowEdit",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LAST","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LAST","HeaderHAlignment","Left")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LAST","CellHAlignment","Left")

	'DEPARTMENT
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","DEPARTMENT","Caption","Dept.")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","DEPARTMENT","MinWidth","95")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","DEPARTMENT","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","DEPARTMENT","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","DEPARTMENT","HeaderHAlignment","Left")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","DEPARTMENT","CellHAlignment","Left")

	'COURSE_NAME
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_NAME","Caption","Course")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_NAME","MinWidth","130")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_NAME","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_NAME","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_NAME","HeaderHAlignment","Left")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_NAME","CellHAlignment","Left")

	'COURSE_TYPE
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_TYPE","Caption","Type")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_TYPE","MinWidth","85")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_TYPE","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_TYPE","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_TYPE","HeaderHAlignment","Left")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_TYPE","CellHAlignment","Left")

	'PROVIDER_NAME
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PROVIDER_NAME","Caption","Provider")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PROVIDER_NAME","MinWidth","130")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PROVIDER_NAME","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PROVIDER_NAME","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PROVIDER_NAME","HeaderHAlignment","Left")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PROVIDER_NAME","CellHAlignment","Left")

	'LEVEL_NAME
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LEVEL_NAME","Caption","Level")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LEVEL_NAME","MinWidth","85")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LEVEL_NAME","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LEVEL_NAME","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LEVEL_NAME","HeaderHAlignment","Left")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","LEVEL_NAME","CellHAlignment","Left")

	'STARTDT
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","STARTDT","Caption","Start Date")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","STARTDT","MinWidth","115")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","STARTDT","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","STARTDT","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","STARTDT","HeaderHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","STARTDT","CellHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","STARTDT","DisplayCustomDatetime","g")
	
	'ENDDT
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","ENDDT","Caption","End Date")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","ENDDT","MinWidth","85")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","ENDDT","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","ENDDT","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","ENDDT","HeaderHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","ENDDT","CellHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","ENDDT","DisplayCustomDatetime","d")

	'HOURS_SCHED
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","HOURS_SCHED","Caption","Hours Sched.")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","HOURS_SCHED","MinWidth","85")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","HOURS_SCHED","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","HOURS_SCHED","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","HOURS_SCHED","HeaderHAlignment","Far")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","HOURS_SCHED","CellHAlignment","Far")

	'COURSE_COST
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_COST","Caption","Course Cost")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_COST","MinWidth","85")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_COST","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_COST","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_COST","HeaderHAlignment","Far")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_COST","CellHAlignment","Far")

	'PRODUCTION_COST
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PRODUCTION_COST","Caption","Prod. Cost")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PRODUCTION_COST","MinWidth","85")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PRODUCTION_COST","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PRODUCTION_COST","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PRODUCTION_COST","HeaderHAlignment","Far")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","PRODUCTION_COST","CellHAlignment","Far")

	'SCHEDULEDDT
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULEDDT","Caption","Sched. Date")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULEDDT","MinWidth","115")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULEDDT","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULEDDT","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULEDDT","HeaderHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULEDDT","CellHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULEDDT","DisplayCustomDatetime","g")

	'SCHEDULED
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULED","Caption","Scheduled")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULED","MinWidth","85")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULED","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULED","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULED","HeaderHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","SCHEDULED","CellHAlignment","Center")

	'COMPLETEDT
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETEDT","Caption","Compl. Date")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETEDT","MinWidth","115")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETEDT","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETEDT","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETEDT","HeaderHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETEDT","CellHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETEDT","DisplayCustomDatetime","g")

	'COMPLETED
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETED","Caption","Completed")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETED","MinWidth","85")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETED","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETED","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETED","HeaderHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COMPLETED","CellHAlignment","Center")
	
	'COURSE_ID
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_ID","Visible",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_ID","Caption","Course ID")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_ID","MinWidth","55")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_ID","AllowEdit",False)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_ID","ReadOnly",True)
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_ID","HeaderHAlignment","Center")
	Gui.frmTrainingMulti.GsGCCoursesMulti.SetColumnProperty("gvEmplTrainingsMulti","COURSE_ID","CellHAlignment","Center")

	Gui.frmTrainingMulti.GsGCCoursesMulti.ResumeLayout()
	Gui.frmTrainingMulti.GsGCCoursesMulti.MainView("gvEmplTrainingsMulti")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadEmplTrainingsMultiGV.End

Program.Sub.SerializeEmplTrainMulti.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	Gui.frmTrainingMulti.GsGCCoursesMulti.Serialize("gvEmplTrainingsMulti",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVEMPLTRAININGSMULTI",5193,3000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End

	F.Intrinsic.Control.EndTry
Program.Sub.SerializeEmplTrainMulti.End

Program.Sub.DeserializeEmplTrainMulti.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVEMPLTRAININGSMULTI",5193,3000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.frmTrainingMulti.GsGCCoursesMulti.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End

	F.Intrinsic.Control.EndTry
Program.Sub.DeserializeEmplTrainMulti.End

Program.Sub.frmViewNotes_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	'Close View Notes Screen
	Gui.frmViewNotes..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmViewNotes_UnLoad.End

Program.Sub.LoadViewNotes.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare

	F.Intrinsic.Control.If(V.DataTable.dtViewNotes.Exists)
		F.Data.DataTable.Close("dtViewNotes")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("Select * From GAB_5193_SCHED_NOTES Where SCHED_ID = {0} Order By NOTEDT DESC;",V.Global.iSchedID,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtViewNotes","con",V.Local.sSQL,True)
	
	F.Intrinsic.Control.CallSub(LoadViewNotesGV)
	
	'Show screen
	Gui.frmViewNotes..Show

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadViewNotes.End

Program.Sub.LoadViewNotesGV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iCnt.Declare
	V.Local.sColumns.Declare

	'Set and Format Grid
	Gui.frmViewNotes.GsGCViewNotes.AddGridViewFromDataTable("gvViewNotes","dtViewNotes")
	Gui.frmViewNotes.GsGCViewNotes.SuspendLayout()
	Gui.frmViewNotes.GsGCViewNotes.SetGridViewProperty("gvViewNotes","MultiSelect",True)
	Gui.frmViewNotes.GsGCViewNotes.SetGridViewProperty("gvViewNotes","Editable",False)
	Gui.frmViewNotes.GsGCViewNotes.SetGridViewProperty("gvViewNotes","ReadOnly",True)
	Gui.frmViewNotes.GsGCViewNotes.SetGridViewProperty("gvViewNotes","AllowSort",True)
	Gui.frmViewNotes.GsGCViewNotes.SetGridViewProperty("gvViewNotes","AllowFilter",True)
	Gui.frmViewNotes.GsGCViewNotes.SetGridViewProperty("gvViewNotes","OptionsDetailShowDetailTabs",False)
	Gui.frmViewNotes.GsGCViewNotes.SetGridViewProperty("gvViewNotes","OptionsViewShowGroupPanel",False)
	Gui.frmViewNotes.GsGCViewNotes.SetGridViewProperty("gvViewNotes","EnableAppearanceOddRow",True)
	Gui.frmViewNotes.GsGCViewNotes.SetGridViewProperty("gvViewNotes","OptionsFindAlwaysVisible",False)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtViewNotes.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
		'Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes",V.Local.sColumns(V.Local.iCnt),"HeaderHAlignment","Center")
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'SCHED_NT_ID
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","SCHED_NT_ID","Visible",False)
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","SCHED_NT_ID","Caption","Sched Note ID")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","SCHED_NT_ID","MinWidth","55")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","SCHED_NT_ID","HeaderHAlignment","Center")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","SCHED_NT_ID","CellHAlignment","Center")

	'SCHED_ID
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","SCHED_ID","Visible",False)
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","SCHED_ID","Caption","Sched ID")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","SCHED_ID","MinWidth","55")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","SCHED_ID","HeaderHAlignment","Center")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","SCHED_ID","CellHAlignment","Center")
	
	'GS_USER
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","GS_USER","Caption","User")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","GS_USER","MinWidth","55")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","GS_USER","HeaderHAlignment","Center")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","GS_USER","CellHAlignment","Center")
	
	'NOTEDT
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","NOTEDT","Caption","Date/Time")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","NOTEDT","MinWidth","100")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","NOTEDT","HeaderHAlignment","Center")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","NOTEDT","CellHAlignment","Center")
	
	'NOTE
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","NOTE","Caption","Note")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","NOTE","MinWidth","125")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","NOTE","HeaderHAlignment","Left")
	Gui.frmViewNotes.GsGCViewNotes.SetColumnProperty("gvViewNotes","NOTE","CellHAlignment","Left")
	
	Gui.frmViewNotes.GsGCViewNotes.ResumeLayout()
	Gui.frmViewNotes.GsGCViewNotes.MainView("gvViewNotes")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadViewNotesGV.End

Program.Sub.GsGCViewNotes_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmViewNotes.txtViewNotes.Text(V.DataTable.dtViewNotes(V.Args.RowIndex).NOTE!FieldVal)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCViewNotes_RowCellClick.End

Program.Sub.frmDocs_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	'Close View Notes Screen
	Gui.frmDocs..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmDocs_UnLoad.End

Program.Sub.LoadViewDocs.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare

	F.Intrinsic.Control.If(V.DataTable.dtViewDocs.Exists)
		F.Data.DataTable.Close("dtViewDocs")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("Select Cast(0 As Bit) As SEL,COURSE_DOC_ID As ID,'GAB_5193_COURSE_DOCS' As TBL,TYPES,DOC_PATH,DOC_TITLE,DOC_REV,ACTIVE From GAB_5193_COURSE_DOCS A Join GAB_5193_DOC_TYPE B On A.DOC_TYPE_ID = B.DOC_TYPE_ID Where COURSE_ID = {0} And ACTIVE = 1 Union Select Cast(0 As Bit) As SEL,SCHED_DOC_ID As ID,'GAB_5193_SCHED_DOCS' As TBL,TYPES,SCHED_DOC_PATH,SCHED_DOC_TITLE,SCHED_DOC_REV,SCHED_ACTIVE From GAB_5193_SCHED_DOCS A Join GAB_5193_DOC_TYPE B On A.DOC_TYPE_ID = B.DOC_TYPE_ID Where SCHED_ID = {1} And SCHED_ACTIVE = 1 Order By TBL;",V.Global.iCourseID,V.Global.iSchedID,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtViewDocs","con",V.Local.sSQL,True)
	
	F.Intrinsic.Control.CallSub(LoadViewDocsGV)
	
	'Show screen
	Gui.frmDocs..Show

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadViewDocs.End

Program.Sub.LoadViewDocsGV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iCnt.Declare
	V.Local.sColumns.Declare

	'Set and Format Grid
	Gui.frmDocs.GsGCDocs.AddGridViewFromDataTable("gvViewDocs","dtViewDocs")
	Gui.frmDocs.GsGCDocs.SuspendLayout()
	Gui.frmDocs.GsGCDocs.SetGridViewProperty("gvViewDocs","MultiSelect",True)
	Gui.frmDocs.GsGCDocs.SetGridViewProperty("gvViewDocs","AllowSort",True)
	Gui.frmDocs.GsGCDocs.SetGridViewProperty("gvViewDocs","AllowFilter",True)
	Gui.frmDocs.GsGCDocs.SetGridViewProperty("gvViewDocs","OptionsDetailShowDetailTabs",False)
	Gui.frmDocs.GsGCDocs.SetGridViewProperty("gvViewDocs","OptionsViewShowGroupPanel",False)
	Gui.frmDocs.GsGCDocs.SetGridViewProperty("gvViewDocs","EnableAppearanceOddRow",True)
	Gui.frmDocs.GsGCDocs.SetGridViewProperty("gvViewDocs","OptionsFindAlwaysVisible",False)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtViewDocs.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
		'Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs",V.Local.sColumns(V.Local.iCnt),"HeaderHAlignment","Center")
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'SEL
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","SEL","Caption","Select")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","SEL","MinWidth","45")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","SEL","AllowEdit",True)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","SEL","ReadOnly",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","SEL","HeaderHAlignment","Center")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","SEL","CellHAlignment","Center")
	
	'ID
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ID","Visible",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ID","Caption","ID")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ID","MinWidth","55")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ID","AllowEdit",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ID","ReadOnly",True)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ID","HeaderHAlignment","Center")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ID","CellHAlignment","Center")

	'TBL
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TBL","Visible",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TBL","Caption","Table")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TBL","MinWidth","55")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TBL","AllowEdit",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TBL","ReadOnly",True)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TBL","HeaderHAlignment","Center")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TBL","CellHAlignment","Center")
	
	'TYPES
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TYPES","Caption","Type")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TYPES","MinWidth","100")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TYPES","AllowEdit",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TYPES","ReadOnly",True)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TYPES","HeaderHAlignment","Left")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","TYPES","CellHAlignment","Left")
	
	'DOC_PATH
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_PATH","Visible",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_PATH","Caption","Doc Path")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_PATH","MinWidth","55")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_PATH","AllowEdit",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_PATH","ReadOnly",True)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_PATH","HeaderHAlignment","Center")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_PATH","CellHAlignment","Center")
	
	'DOC_TITLE
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_TITLE","Caption","File Name")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_TITLE","MinWidth","100")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_TITLE","AllowEdit",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_TITLE","ReadOnly",True)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_TITLE","HeaderHAlignment","Left")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_TITLE","CellHAlignment","Left")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_TITLE","CellForeColor","Blue")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_TITLE","CellFontUnderline",True)
	
	'DOC_REV
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_REV","Visible",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_REV","Caption","Doc Rev")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_REV","MinWidth","55")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_REV","AllowEdit",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_REV","ReadOnly",True)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_REV","HeaderHAlignment","Center")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","DOC_REV","CellHAlignment","Center")
	
	'ACTIVE
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ACTIVE","Visible",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ACTIVE","Caption","Note")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ACTIVE","MinWidth","55")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ACTIVE","AllowEdit",False)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ACTIVE","ReadOnly",True)
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ACTIVE","HeaderHAlignment","Center")
	Gui.frmDocs.GsGCDocs.SetColumnProperty("gvViewDocs","ACTIVE","CellHAlignment","Center")
	
	Gui.frmDocs.GsGCDocs.ResumeLayout()
	Gui.frmDocs.GsGCDocs.MainView("gvViewDocs")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadViewDocsGV.End

Program.Sub.GsGCDocs_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sDocPath.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("DOC_TITLE")
			F.Intrinsic.Control.If(V.DataTable.dtViewDocs(V.Args.RowIndex).DOC_TITLE!FieldVal,<>,"")
				F.Intrinsic.String.Build("{0}{1}",V.DataTable.dtViewDocs(V.Args.RowIndex).DOC_PATH!FieldVal,V.DataTable.dtViewDocs(V.Args.RowIndex).DOC_TITLE!FieldVal,V.Local.sDocPath)
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sDocPath,"","",1)
			F.Intrinsic.Control.EndIf
			
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCDocs_RowCellClick.End

Program.Sub.frmDefaultEmail_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmDefaultEmail..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmDefaultEmail_UnLoad.End

Program.Sub.chkCurrentUser_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.Screen.frmDefaultEmail!chkCurrentUser.Value,=,0)
		Gui.frmDefaultEmail.txtSenderName.Enabled(True)
		Gui.frmDefaultEmail.txtSenderEmail.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.frmDefaultEmail.txtSenderName.Text("")
		Gui.frmDefaultEmail.txtSenderEmail.Text("")
		Gui.frmDefaultEmail.txtSenderName.Enabled(False)
		Gui.frmDefaultEmail.txtSenderEmail.Enabled(False)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.chkCurrentUser_Click.End

Program.Sub.cmdSenderSave_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFile.Declare
	V.Local.bFile.Declare
	V.Local.sSenderInfo.Declare
	
	F.Intrinsic.String.Build("{0}\GAB_5193_Default_Sender_Email.txt",V.Caller.GasDir,V.Local.sFile)
	
	F.Intrinsic.Control.If(V.Screen.frmDefaultEmail!chkCurrentUser.Value,=,0)
		'Save File
		F.Intrinsic.String.Build("{0}*!*{1}",V.Screen.frmDefaultEmail!txtSenderName.Text,V.Screen.frmDefaultEmail!txtSenderEmail.Text,V.Local.sSenderInfo)
		F.Intrinsic.File.String2File(V.Local.sFile,V.Local.sSenderInfo)
	F.Intrinsic.Control.Else
		'Delete File
		F.Intrinsic.File.Exists(V.Local.sFile,V.Local.bFile)
		F.Intrinsic.Control.If(V.Local.bFile)
			F.Intrinsic.File.DeleteFile(V.Local.sFile)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(frmDefaultEmail_UnLoad)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdSenderSave_Click.End

Program.Sub.frmRenewals_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadDataRenewal)
		F.Intrinsic.Control.CallSub(SerializeRenewal)
	F.Intrinsic.Control.EndIf

	Gui.frmRenewals..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmRenewals_UnLoad.End

Program.Sub.LoadRenewalStatus.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sExp.Declare
	V.Local.sSelect.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadDataRenewal)
		F.Intrinsic.Control.CallSub(SerializeRenewal)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtRenew.Exists)
		F.Data.DataTable.Close("dtRenew")
	F.Intrinsic.Control.EndIf

	F.Data.DataTable.CreateFromSQL("dtRenewal","con","Select A.SCHED_ID,B.EMPNO,RTRIM(E.FIRST)+' '+RTRIM(E.LAST) AS EMPLOYEE,E.FIRST,E.LAST,B.COURSE_ID,D.COURSE_NAME,A.SKILL_ID,C.SKILL,B.COMPLETEDT,C.RENEWAL_VALUE,C.RENEWAL_FREQ,Convert(Case When C.RENEWAL_FREQ = 'Day(s)' Then DateAdd(DAY,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Week(s)' Then DateAdd(WEEK,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Month(s)' Then DateAdd(MONTH,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Year(s)' Then DateAdd(YEAR,C.RENEWAL_VALUE,B.COMPLETEDT) End,SQL_DATE) As RENEWALDT,Case When DateDiff(DAY,CURDATE(),Convert(Case When C.RENEWAL_FREQ = 'Day(s)' Then DateAdd(DAY,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Week(s)' Then DateAdd(WEEK,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Month(s)' Then DateAdd(MONTH,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Year(s)' Then DateAdd(YEAR,C.RENEWAL_VALUE,B.COMPLETEDT) End,SQL_DATE)) > 365 Then 0 When DateDiff(DAY,CURDATE(),Convert(Case When C.RENEWAL_FREQ = 'Day(s)' Then DateAdd(DAY,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Week(s)' Then DateAdd(WEEK,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Month(s)' Then DateAdd(MONTH,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Year(s)' Then DateAdd(YEAR,C.RENEWAL_VALUE,B.COMPLETEDT) End,SQL_DATE)) <= 365 And DateDiff(DAY,CURDATE(),Convert(Case When C.RENEWAL_FREQ = 'Day(s)' Then DateAdd(DAY,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Week(s)' Then DateAdd(WEEK,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Month(s)' Then DateAdd(MONTH,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Year(s)' Then DateAdd(YEAR,C.RENEWAL_VALUE,B.COMPLETEDT) End,SQL_DATE)) >= 31 Then 1 When DateDiff(DAY,CURDATE(),Convert(Case When C.RENEWAL_FREQ = 'Day(s)' Then DateAdd(DAY,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Week(s)' Then DateAdd(WEEK,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Month(s)' Then DateAdd(MONTH,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Year(s)' Then DateAdd(YEAR,C.RENEWAL_VALUE,B.COMPLETEDT) End,SQL_DATE)) <= 30 And DateDiff(DAY,CURDATE(),Convert(Case When C.RENEWAL_FREQ = 'Day(s)' Then DateAdd(DAY,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Week(s)' Then DateAdd(WEEK,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Month(s)' Then DateAdd(MONTH,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Year(s)' Then DateAdd(YEAR,C.RENEWAL_VALUE,B.COMPLETEDT) End,SQL_DATE)) >= 8 Then 2 When DateDiff(DAY,CURDATE(),Convert(Case When C.RENEWAL_FREQ = 'Day(s)' Then DateAdd(DAY,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Week(s)' Then DateAdd(WEEK,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Month(s)' Then DateAdd(MONTH,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Year(s)' Then DateAdd(YEAR,C.RENEWAL_VALUE,B.COMPLETEDT) End,SQL_DATE)) <= 7 And DateDiff(DAY,CURDATE(),Convert(Case When C.RENEWAL_FREQ = 'Day(s)' Then DateAdd(DAY,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Week(s)' Then DateAdd(WEEK,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Month(s)' Then DateAdd(MONTH,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Year(s)' Then DateAdd(YEAR,C.RENEWAL_VALUE,B.COMPLETEDT) End,SQL_DATE)) >= 0 Then 3 When DateDiff(DAY,CURDATE(),Convert(Case When C.RENEWAL_FREQ = 'Day(s)' Then DateAdd(DAY,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Week(s)' Then DateAdd(WEEK,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Month(s)' Then DateAdd(MONTH,C.RENEWAL_VALUE,B.COMPLETEDT) When C.RENEWAL_FREQ = 'Year(s)' Then DateAdd(YEAR,C.RENEWAL_VALUE,B.COMPLETEDT) End,SQL_DATE)) < 0 Then 4 End As STATUS From GAB_5193_SCHED_SKILL A Join GAB_5193_SCHEDULED B On A.SCHED_ID = B.SCHED_ID And COMPLETEDT Is Not Null Join GAB_5193_SKILLS C On A.SKILL_ID = C.SKILL_ID And C.RENEWAL_FREQ Is Not Null Join GAB_5193_COURSES D On B.COURSE_ID = D.COURSE_ID Join V_PYRL_EMP_NAME E On B.EMPNO = E.EMPL Join V_EMPLOYEE_MSTR F On B.EMPNO = F.EMPLOYEE And F.DATE_TERMINATION = '1900-01-01' Order By B.EMPNO,E.FIRST,E.LAST,B.COURSE_ID,A.SKILL_ID,B.COMPLETEDT DESC;",True)
	
	F.Data.DataView.Create("dtRenewal","dvRenewal")
	F.Data.DataView.ToDataTableDistinct("dtRenewal","dvRenewal","dtRenew","EMPNO*!*EMPLOYEE*!*FIRST*!*LAST*!*COURSE_ID*!*COURSE_NAME*!*SKILL_ID*!*SKILL",True)
	F.Data.DataTable.AddColumn("dtRenew","COMPLETEDT",Date)
	F.Data.DataTable.AddColumn("dtRenew","RENEWALDT",Date)
	F.Data.DataTable.AddColumn("dtRenew","STATUS",Long)
	F.Data.DataView.Close("dtRenewal","dvRenewal")
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtRenew.RowCount--,1)
		F.Intrinsic.String.Build("EMPNO = '{0}' And EMPLOYEE = '{1}' And FIRST = '{2}' And LAST = '{3}' And COURSE_ID = '{4}' And COURSE_NAME = '{5}' And SKILL_ID = '{6}' And SKILL = '{7}'",V.DataTable.dtRenew(V.Local.iCnt).EMPNO!FieldVal,V.DataTable.dtRenew(V.Local.iCnt).EMPLOYEE!FieldVal,V.DataTable.dtRenew(V.Local.iCnt).FIRST!FieldVal,V.DataTable.dtRenew(V.Local.iCnt).LAST!FieldVal,V.DataTable.dtRenew(V.Local.iCnt).COURSE_ID!FieldVal,V.DataTable.dtRenew(V.Local.iCnt).COURSE_NAME!FieldVal,V.DataTable.dtRenew(V.Local.iCnt).SKILL_ID!FieldVal,V.DataTable.dtRenew(V.Local.iCnt).SKILL!FieldVal,V.Local.sExp)
		F.Data.DataTable.Select("dtRenewal",v.Local.sExp,V.Local.sSelect)
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Data.DataTable.SetValue("dtRenew",V.Local.iCnt,"COMPLETEDT",V.DataTable.dtRenewal(V.Local.sSelect(0)).COMPLETEDT!FieldVal,"RENEWALDT",V.DataTable.dtRenewal(V.Local.sSelect(0)).RENEWALDT!FieldVal,"STATUS",V.DataTable.dtRenewal(V.Local.sSelect(0)).STATUS!FieldVal)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Data.DataTable.Close("dtRenewal")
	
	V.Global.bLoadDataRenewal.Set(True)
	F.Intrinsic.Control.CallSub(LoadRenewalStatusGV)
	F.Intrinsic.Control.CallSub(DeserializeRenewal)
	
	'Show Screen
	Gui.frmRenewals..Show

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadRenewalStatus.End

Program.Sub.LoadRenewalStatusGV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iCnt.Declare
	V.Local.sColumns.Declare

	'Set and Format Grid
	Gui.frmRenewals.GsGCRenewals.AddGridViewFromDataTable("gvRenew","dtRenew")
	Gui.frmRenewals.GsGCRenewals.SuspendLayout()
	Gui.frmRenewals.GsGCRenewals.SetGridViewProperty("gvRenew","MultiSelect",True)
	Gui.frmRenewals.GsGCRenewals.SetGridViewProperty("gvRenew","Editable",False)
	Gui.frmRenewals.GsGCRenewals.SetGridViewProperty("gvRenew","ReadOnly",True)
	Gui.frmRenewals.GsGCRenewals.SetGridViewProperty("gvRenew","AllowSort",True)
	Gui.frmRenewals.GsGCRenewals.SetGridViewProperty("gvRenew","AllowFilter",True)
	Gui.frmRenewals.GsGCRenewals.SetGridViewProperty("gvRenew","OptionsDetailShowDetailTabs",False)
	Gui.frmRenewals.GsGCRenewals.SetGridViewProperty("gvRenew","OptionsViewShowGroupPanel",True)
	Gui.frmRenewals.GsGCRenewals.SetGridViewProperty("gvRenew","OptionsFindAlwaysVisible",False)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtRenew.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
		'Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew",V.Local.sColumns(V.Local.iCnt),"HeaderHAlignment","Center")
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'EMPNO
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","EMPNO","Visible",False)
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","EMPNO","Caption","Emp No")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","EMPNO","MinWidth","45")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","EMPNO","HeaderHAlignment","Center")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","EMPNO","CellHAlignment","Center")
	
	'EMPLOYEE
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","EMPLOYEE","Caption","Emp Name")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","EMPLOYEE","MinWidth","150")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","EMPLOYEE","HeaderHAlignment","Left")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","EMPLOYEE","CellHAlignment","Left")

	'FIRST
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","FIRST","Caption","First Name")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","FIRST","MinWidth","100")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","FIRST","HeaderHAlignment","Left")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","FIRST","CellHAlignment","Left")
	
	'LAST
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","LAST","Caption","Last Name")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","LAST","MinWidth","100")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","LAST","HeaderHAlignment","Left")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","LAST","CellHAlignment","Left")
	
	'COURSE_ID
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COURSE_ID","Visible",False)
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COURSE_ID","Caption","Course ID")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COURSE_ID","MinWidth","55")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COURSE_ID","HeaderHAlignment","Center")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COURSE_ID","CellHAlignment","Center")
	
	'COURSE_NAME
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COURSE_NAME","Caption","Coure Name")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COURSE_NAME","MinWidth","125")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COURSE_NAME","HeaderHAlignment","Left")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COURSE_NAME","CellHAlignment","Left")
	
	'SKILL_ID
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","SKILL_ID","Visible",False)
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","SKILL_ID","Caption","Skill ID")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","SKILL_ID","MinWidth","55")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","SKILL_ID","HeaderHAlignment","Center")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","SKILL_ID","CellHAlignment","Center")
	
	'SKILL
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","SKILL","Caption","Skill")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","SKILL","MinWidth","125")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","SKILL","HeaderHAlignment","Left")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","SKILL","CellHAlignment","Left")
	
	'COMPLETEDT
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COMPLETEDT","Caption","Complete Date")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COMPLETEDT","MinWidth","85")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COMPLETEDT","HeaderHAlignment","Center")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COMPLETEDT","CellHAlignment","Center")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","COMPLETEDT","DisplayCustomDatetime","d")
	
	'RENEWALDT
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","RENEWALDT","Caption","Renewal Date")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","RENEWALDT","MinWidth","85")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","RENEWALDT","HeaderHAlignment","Center")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","RENEWALDT","CellHAlignment","Center")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","RENEWALDT","DisplayCustomDatetime","d")
	
	'STATUS
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","STATUS","Caption","Status")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","STATUS","MinWidth","45")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","STATUS","HeaderHAlignment","Center")
	Gui.frmRenewals.GsGCRenewals.SetColumnProperty("gvRenew","STATUS","CellHAlignment","Center")
	
	'Formatting
	Gui.frmRenewals.GsGCRenewals.AddStyleFormatCondition("gvRenew","STATUS","STATUS0","Equal",1)
	Gui.frmRenewals.GsGCRenewals.SetStyleFormatConditionProperty("gvRenew","STATUS","STATUS0","BackColor","LightGoldenRodYellow")
	Gui.frmRenewals.GsGCRenewals.SetStyleFormatConditionProperty("gvRenew","STATUS","STATUS0","ApplyToRow",True)
	
	Gui.frmRenewals.GsGCRenewals.AddStyleFormatCondition("gvRenew","STATUS","STATUS1","Equal",2)
	Gui.frmRenewals.GsGCRenewals.SetStyleFormatConditionProperty("gvRenew","STATUS","STATUS1","BackColor","GoldenRod")
	Gui.frmRenewals.GsGCRenewals.SetStyleFormatConditionProperty("gvRenew","STATUS","STATUS1","ApplyToRow",True)
	
	Gui.frmRenewals.GsGCRenewals.AddStyleFormatCondition("gvRenew","STATUS","STATUS2","Equal",3)
	Gui.frmRenewals.GsGCRenewals.SetStyleFormatConditionProperty("gvRenew","STATUS","STATUS2","BackColor","Orange")
	Gui.frmRenewals.GsGCRenewals.SetStyleFormatConditionProperty("gvRenew","STATUS","STATUS2","ApplyToRow",True)
	
	Gui.frmRenewals.GsGCRenewals.AddStyleFormatCondition("gvRenew","STATUS","STATUS4","Equal",4)
	Gui.frmRenewals.GsGCRenewals.SetStyleFormatConditionProperty("gvRenew","STATUS","STATUS4","BackColor","Red")
	Gui.frmRenewals.GsGCRenewals.SetStyleFormatConditionProperty("gvRenew","STATUS","STATUS4","ApplyToRow",True)
	
	Gui.frmRenewals.GsGCRenewals.ResumeLayout()
	Gui.frmRenewals.GsGCRenewals.MainView("gvRenew")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadRenewalStatusGV.End

Program.Sub.SerializeRenewal.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	Gui.frmRenewals.GsGCRenewals.Serialize("gvRenew",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVRENEW",5193,4000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End

	F.Intrinsic.Control.EndTry
Program.Sub.SerializeRenewal.End

Program.Sub.DeserializeRenewal.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVRENEW",5193,4000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.frmRenewals.GsGCRenewals.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End

	F.Intrinsic.Control.EndTry
Program.Sub.DeserializeRenewal.End

Program.Sub.Comments.Start
${$0$}$$}$$}$12:00:00 AM$}$False
Program.Sub.Comments.End